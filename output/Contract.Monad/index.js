// Generated by purs version 0.14.5
"use strict";
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Control_Monad_Error_Class = require("../Control.Monad.Error.Class/index.js");
var Control_Monad_Reader_Class = require("../Control.Monad.Reader.Class/index.js");
var Control_Monad_Reader_Trans = require("../Control.Monad.Reader.Trans/index.js");
var Control_Parallel_Class = require("../Control.Parallel.Class/index.js");
var Control_Plus = require("../Control.Plus/index.js");
var Data_Either = require("../Data.Either/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Log_Tag = require("../Data.Log.Tag/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Newtype = require("../Data.Newtype/index.js");
var Data_Profunctor = require("../Data.Profunctor/index.js");
var Data_Show = require("../Data.Show/index.js");
var Effect = require("../Effect/index.js");
var Effect_Aff = require("../Effect.Aff/index.js");
var Effect_Aff_Class = require("../Effect.Aff.Class/index.js");
var Effect_Class = require("../Effect.Class/index.js");
var Effect_Exception = require("../Effect.Exception/index.js");
var QueryM = require("../QueryM/index.js");
var QueryM_Logging = require("../QueryM.Logging/index.js");
var ParContract = function (x) {
    return x;
};
var ContractEnv = function (x) {
    return x;
};
var Contract = function (x) {
    return x;
};
var semigroupParContract = function (dictSemigroup) {
    return QueryM.semigroupQueryMExtended(dictSemigroup)(Effect_Aff.applyParAff);
};
var semigroupContract = function (dictSemigroup) {
    return QueryM.semigroupQueryMExtended(dictSemigroup)(Effect_Aff.applyAff);
};
var plusParContract = QueryM.plusQueryMExtended(Effect_Aff.plusParAff);
var newtypeContract_ = {
    Coercible0: function () {
        return undefined;
    }
};
var newtypeContractEnv_ = {
    Coercible0: function () {
        return undefined;
    }
};
var monoidParContract = function (dictMonoid) {
    return QueryM.monoidQueryMExtended(dictMonoid)(Effect_Aff.applicativeParAff);
};
var monoidContract = function (dictMonoid) {
    return QueryM.monoidQueryMExtended(dictMonoid)(Effect_Aff.applicativeAff);
};
var monadThrowErrorContract = QueryM.monadThrowErrorQueryMExte;
var monadRecContract = QueryM.monadRecQueryMExtendedAff;
var monadLoggerContract = QueryM.monadLoggerQueryMExtended;
var monadErrorErrorContract = QueryM.monadErrorErrorQueryMExte;
var monadEffectContract = QueryM.monadEffectQueryMExtended;
var monadContract = QueryM.monadQueryMExtendedAff;
var monadAskContractEnvContra = {
    ask: Contract(Data_Functor.map(QueryM.functorQueryMExtended(Effect_Aff.functorAff))(ContractEnv)(Control_Monad_Reader_Class.ask(QueryM.monadAskQueryEnvQueryMExt))),
    Monad0: function () {
        return monadContract;
    }
};
var monadReaderContractEnvCon = {
    local: function (f) {
        return function (contract) {
            return Contract(Control_Monad_Reader_Class.local(QueryM.monadReaderQueryEnvQueryM)(Data_Profunctor.dimap(Data_Profunctor.profunctorFn)(Data_Newtype.wrap())(Data_Newtype.unwrap())(f))(Data_Newtype.unwrap()(contract)));
        };
    },
    MonadAsk0: function () {
        return monadAskContractEnvContra;
    }
};
var monadAffContract = QueryM.monadAffQueryMExtendedAff;
var functorParContract = QueryM.functorQueryMExtended(Effect_Aff.functorParAff);
var functorContract = QueryM.functorQueryMExtended(Effect_Aff.functorAff);
var bindContract = QueryM.bindQueryMExtended(Effect_Aff.bindAff);
var applyParContract = QueryM.applyQueryMExtended(Effect_Aff.applyParAff);
var applyContract = QueryM.applyQueryMExtended(Effect_Aff.applyAff);
var applicativeParContract = QueryM.applicativeQueryMExtended(Effect_Aff.applicativeParAff);
var parallelParContractContra = {
    parallel: (function () {
        var $72 = Control_Parallel_Class.parallel(QueryM.parallelQueryMExtendedPar);
        var $73 = Data_Newtype.unwrap();
        return function ($74) {
            return ParContract($72($73($74)));
        };
    })(),
    sequential: function (v) {
        return Data_Newtype.wrap()(Control_Parallel_Class.sequential(QueryM.parallelQueryMExtendedPar)(v));
    },
    Monad0: function () {
        return monadContract;
    },
    Applicative1: function () {
        return applicativeParContract;
    }
};
var applicativeContract = QueryM.applicativeQueryMExtended(Effect_Aff.applicativeAff);
var alternativeParContract = QueryM.alternativeQueryMExtended(Effect_Aff.alternativeParAff);
var altParContract = QueryM.altQueryMExtended(Effect_Aff.altParAff);
var altContract = {
    alt: function (a1) {
        return function (a2) {
            return Control_Monad_Error_Class.catchError(monadErrorErrorContract)(a1)(Data_Function["const"](a2));
        };
    },
    Functor0: function () {
        return functorContract;
    }
};
var plusContract = {
    empty: Effect_Aff_Class.liftAff(monadAffContract)(Control_Plus.empty(Effect_Aff.plusAff)),
    Alt0: function () {
        return altContract;
    }
};
var wrapContract = (function () {
    var $75 = Data_Newtype.wrap();
    return function ($76) {
        return $75(QueryM.liftQueryM($76));
    };
})();
var withContractEnv = function (v) {
    return function (action) {
        return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(QueryM_Logging.setupLogs(v.logLevel)(v.customLogger)))(function (v1) {
            var config = {
                ctlServerConfig: v.ctlServerConfig,
                ogmiosConfig: v.ogmiosConfig,
                datumCacheConfig: v.datumCacheConfig,
                networkId: v.networkId,
                logLevel: v.logLevel,
                walletSpec: v.walletSpec,
                customLogger: (function () {
                    if (v.suppressLogs) {
                        return Data_Maybe.Just.create((function () {
                            var $77 = Effect_Class.liftEffect(Effect_Aff.monadEffectAff);
                            return function ($78) {
                                return $77(v1.addLogEntry($78));
                            };
                        })());
                    };
                    return v.customLogger;
                })(),
                suppressLogs: v.suppressLogs
            };
            return QueryM.withQueryRuntime(config)(function (runtime) {
                var contractEnv = Data_Newtype.wrap()({
                    runtime: runtime,
                    config: config,
                    extraConfig: v.extraConfig
                });
                return Control_Bind.bind(Effect_Aff.bindAff)(Control_Monad_Error_Class["try"](Effect_Aff.monadErrorAff)(action(contractEnv)))(function (res) {
                    if (res instanceof Data_Either.Left) {
                        return Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(function __do() {
                            Control_Applicative.when(Effect.applicativeEffect)(v.suppressLogs)(v1.printLogs)();
                            return Control_Monad_Error_Class.throwError(Control_Monad_Error_Class.monadThrowEffect)(res.value0)();
                        });
                    };
                    if (res instanceof Data_Either.Right) {
                        return Control_Applicative.pure(Effect_Aff.applicativeAff)(res.value0);
                    };
                    throw new Error("Failed pattern match at Contract.Monad (line 372, column 5 - line 376, column 34): " + [ res.constructor.name ]);
                });
            });
        });
    };
};
var throwContractError = function (dictShow) {
    var $79 = Effect_Class.liftEffect(monadEffectContract);
    var $80 = Data_Show.show(dictShow);
    return function ($81) {
        return $79(Effect_Exception["throw"]($80($81)));
    };
};
var stopContractEnv = function (dictWarn) {
    return function (env) {
        return QueryM.stopQueryRuntime((Data_Newtype.unwrap()(env)).runtime);
    };
};
var runContractInEnv = function (env) {
    return function (contract) {
        return Data_Function.flip(Control_Monad_Reader_Trans.runReaderT)(Data_Newtype.unwrap()(env))(Data_Newtype.unwrap()(Data_Newtype.unwrap()(contract)));
    };
};
var runContract = function (params) {
    return function (contract) {
        return withContractEnv(params)(function (config) {
            return runContractInEnv(config)(contract);
        });
    };
};
var mkContractEnv = function (dictWarn) {
    return function (v) {
        var config = {
            ctlServerConfig: v.ctlServerConfig,
            ogmiosConfig: v.ogmiosConfig,
            datumCacheConfig: v.datumCacheConfig,
            networkId: v.networkId,
            logLevel: v.logLevel,
            walletSpec: v.walletSpec,
            customLogger: v.customLogger,
            suppressLogs: v.suppressLogs
        };
        return Control_Bind.bind(Effect_Aff.bindAff)(QueryM.mkQueryRuntime(config))(function (runtime) {
            var contractEnv = Data_Newtype.wrap()({
                runtime: runtime,
                config: config,
                extraConfig: v.extraConfig
            });
            return Control_Applicative.pure(Effect_Aff.applicativeAff)(contractEnv);
        });
    };
};
var liftContractM = function (str) {
    return Data_Maybe.maybe(Effect_Class.liftEffect(monadEffectContract)(Effect_Exception["throw"](str)))(Control_Applicative.pure(applicativeContract));
};
var liftedM = function (str) {
    return function (cm) {
        return Control_Bind.bind(bindContract)(cm)(liftContractM(str));
    };
};
var liftContractE$prime = function (str) {
    var $82 = liftContractM(str);
    return function ($83) {
        return $82(Data_Either.hush($83));
    };
};
var liftedE$prime = function (str) {
    return function (em) {
        return Control_Bind.bind(bindContract)(em)(liftContractE$prime(str));
    };
};
var liftContractE = function (dictShow) {
    return Data_Either.either(throwContractError(dictShow))(Control_Applicative.pure(applicativeContract));
};
var liftedE = function (dictShow) {
    return Control_Bind.bindFlipped(bindContract)(liftContractE(dictShow));
};
var liftContractAffM = function (str) {
    var $84 = liftedM(str);
    var $85 = Effect_Aff_Class.liftAff(monadAffContract);
    return function ($86) {
        return $84($85($86));
    };
};
var asksConfig = function (dictWarn) {
    return function (f) {
        return Control_Monad_Reader_Class.asks(monadAskContractEnvContra)((function () {
            var $87 = Data_Newtype.unwrap();
            return function ($88) {
                return f((function (v) {
                    return v.extraConfig;
                })($87($88)));
            };
        })());
    };
};
var askConfig = function (dictWarn) {
    return Control_Monad_Reader_Class.asks(monadAskContractEnvContra)((function () {
        var $89 = Data_Newtype.unwrap();
        return function ($90) {
            return (function (v) {
                return v.extraConfig;
            })($89($90));
        };
    })());
};
module.exports = {
    Contract: Contract,
    ContractEnv: ContractEnv,
    askConfig: askConfig,
    asksConfig: asksConfig,
    liftContractAffM: liftContractAffM,
    liftContractE: liftContractE,
    "liftContractE'": liftContractE$prime,
    liftContractM: liftContractM,
    liftedE: liftedE,
    "liftedE'": liftedE$prime,
    liftedM: liftedM,
    mkContractEnv: mkContractEnv,
    runContract: runContract,
    runContractInEnv: runContractInEnv,
    stopContractEnv: stopContractEnv,
    throwContractError: throwContractError,
    withContractEnv: withContractEnv,
    wrapContract: wrapContract,
    newtypeContract_: newtypeContract_,
    functorContract: functorContract,
    applyContract: applyContract,
    applicativeContract: applicativeContract,
    bindContract: bindContract,
    monadContract: monadContract,
    monadEffectContract: monadEffectContract,
    monadAffContract: monadAffContract,
    semigroupContract: semigroupContract,
    monoidContract: monoidContract,
    monadThrowErrorContract: monadThrowErrorContract,
    monadErrorErrorContract: monadErrorErrorContract,
    monadRecContract: monadRecContract,
    monadLoggerContract: monadLoggerContract,
    monadAskContractEnvContra: monadAskContractEnvContra,
    monadReaderContractEnvCon: monadReaderContractEnvCon,
    parallelParContractContra: parallelParContractContra,
    functorParContract: functorParContract,
    applyParContract: applyParContract,
    applicativeParContract: applicativeParContract,
    altParContract: altParContract,
    plusParContract: plusParContract,
    alternativeParContract: alternativeParContract,
    semigroupParContract: semigroupParContract,
    monoidParContract: monoidParContract,
    altContract: altContract,
    plusContract: plusContract,
    newtypeContractEnv_: newtypeContractEnv_,
    booleanTag: Data_Log_Tag.booleanTag,
    intTag: Data_Log_Tag.intTag,
    jsDateTag: Data_Log_Tag.jsDateTag,
    numberTag: Data_Log_Tag.numberTag,
    tag: Data_Log_Tag.tag,
    tagSetTag: Data_Log_Tag.tagSetTag,
    launchAff_: Effect_Aff.launchAff_,
    defaultDatumCacheWsConfig: QueryM.defaultDatumCacheWsConfig,
    defaultOgmiosWsConfig: QueryM.defaultOgmiosWsConfig,
    defaultServerConfig: QueryM.defaultServerConfig,
    liftQueryM: QueryM.liftQueryM,
    mkDatumCacheWebSocketAff: QueryM.mkDatumCacheWebSocketAff,
    mkHttpUrl: QueryM.mkHttpUrl,
    mkOgmiosWebSocketAff: QueryM.mkOgmiosWebSocketAff,
    mkWsUrl: QueryM.mkWsUrl
};
