// Generated by purs version 0.14.5
"use strict";
var Data_Eq = require("../Data.Eq/index.js");
var Data_Ring = require("../Data.Ring/index.js");
var Data_Semiring = require("../Data.Semiring/index.js");
var Effect_Console = require("../Effect.Console/index.js");
var Test_QuickCheck = require("../Test.QuickCheck/index.js");
var checkRing = function (dictRing) {
    return function (dictArbitrary) {
        return function (dictEq) {
            return function (v) {
                var additiveInverse = function (a) {
                    return Data_Eq.eq(dictEq)(Data_Ring.sub(dictRing)(a)(a))(Data_Semiring.zero(dictRing.Semiring0())) && (Data_Eq.eq(dictEq)(Data_Semiring.add(dictRing.Semiring0())(a)(Data_Ring.negate(dictRing)(a)))(Data_Semiring.zero(dictRing.Semiring0())) && Data_Eq.eq(dictEq)(Data_Semiring.add(dictRing.Semiring0())(Data_Ring.negate(dictRing)(a))(a))(Data_Semiring.zero(dictRing.Semiring0())));
                };
                return function __do() {
                    Effect_Console.log("Checking 'Additive inverse' law for Ring")();
                    return Test_QuickCheck["quickCheck'"](Test_QuickCheck.testableFunction(dictArbitrary)(Test_QuickCheck.testableBoolean))(1000)(additiveInverse)();
                };
            };
        };
    };
};
module.exports = {
    checkRing: checkRing
};
