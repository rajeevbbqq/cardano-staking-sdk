// Generated by purs version 0.14.5
"use strict";
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Data_Array = require("../Data.Array/index.js");
var Data_Eq = require("../Data.Eq/index.js");
var Data_Identity = require("../Data.Identity/index.js");
var Data_Medea_Parser_Primitive = require("../Data.Medea.Parser.Primitive/index.js");
var Data_Newtype = require("../Data.Newtype/index.js");
var Text_Parsing_Parser = require("../Text.Parsing.Parser/index.js");
var Text_Parsing_Parser_Combinators = require("../Text.Parsing.Parser.Combinators/index.js");
var Specification = function (x) {
    return x;
};
var parseSpecification = Control_Bind.bind(Text_Parsing_Parser.bindParserT(Data_Identity.monadIdentity))(Data_Medea_Parser_Primitive.parseLine(4)(Data_Medea_Parser_Primitive.parseReserved(Data_Medea_Parser_Primitive.RType.value)))(function () {
    return Control_Bind.bind(Text_Parsing_Parser.bindParserT(Data_Identity.monadIdentity))(Data_Array.some(Text_Parsing_Parser.alternativeParserT(Data_Identity.monadIdentity))(Text_Parsing_Parser.lazyParserT)(Text_Parsing_Parser_Combinators["try"](Data_Identity.monadIdentity)(Data_Medea_Parser_Primitive.parseLine(8)(Data_Medea_Parser_Primitive.parseIdentifier))))(function (types) {
        return Control_Applicative.pure(Text_Parsing_Parser.applicativeParserT(Data_Identity.monadIdentity))(Specification(types));
    });
});
var newtypeSpecification = {
    Coercible0: function () {
        return undefined;
    }
};
var getReferences = Data_Newtype.unwrap();
var eqSpecification = {
    eq: function (x) {
        return function (y) {
            return Data_Eq.eq(Data_Eq.eqArray(Data_Medea_Parser_Primitive.eqIdentifier))(x)(y);
        };
    }
};
var defaultSpec = [  ];
module.exports = {
    Specification: Specification,
    defaultSpec: defaultSpec,
    parseSpecification: parseSpecification,
    eqSpecification: eqSpecification,
    newtypeSpecification: newtypeSpecification
};
