// Generated by purs version 0.14.5
"use strict";
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Apply = require("../Control.Apply/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Control_Parallel = require("../Control.Parallel/index.js");
var Data_Foldable = require("../Data.Foldable/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Newtype = require("../Data.Newtype/index.js");
var Data_Number = require("../Data.Number/index.js");
var Data_Ord = require("../Data.Ord/index.js");
var Data_Time_Duration = require("../Data.Time.Duration/index.js");
var Data_Unit = require("../Data.Unit/index.js");
var Effect_Aff = require("../Effect.Aff/index.js");
var Effect_Aff_Class = require("../Effect.Aff.Class/index.js");
var Effect_Class = require("../Effect.Class/index.js");
var Effect_Exception = require("../Effect.Exception/index.js");
var QueryM = require("../QueryM/index.js");
var QueryM_DatumCacheWsp = require("../QueryM.DatumCacheWsp/index.js");
var QueryM_WaitUntilSlot = require("../QueryM.WaitUntilSlot/index.js");
var Serialization_Address = require("../Serialization.Address/index.js");
var Types_BigNum = require("../Types.BigNum/index.js");
var Types_Chain = require("../Types.Chain/index.js");
var awaitTxConfirmedWithTimeoutSlots = function (timeoutSlots) {
    return function (txHash) {
        var getCurrentSlot = Control_Bind.bind(QueryM.bindQueryMExtended(Effect_Aff.bindAff))(QueryM.getChainTip)(function (v) {
            if (v instanceof Types_Chain.TipAtGenesis) {
                return Control_Bind.discard(Control_Bind.discardUnit)(QueryM.bindQueryMExtended(Effect_Aff.bindAff))(Effect_Aff_Class.liftAff(QueryM.monadAffQueryMExtendedAff)(Effect_Aff.delay(Data_Newtype.wrap()(1000.0))))(function () {
                    return getCurrentSlot;
                });
            };
            if (v instanceof Types_Chain.Tip) {
                return Control_Applicative.pure(QueryM.applicativeQueryMExtended(Effect_Aff.applicativeAff))(v.value0.slot);
            };
            throw new Error("Failed pattern match at QueryM.AwaitTxConfirmed (line 68, column 36 - line 72, column 53): " + [ v.constructor.name ]);
        });
        var addSlots = function (n) {
            return function (slot) {
                return Data_Maybe.maybe(Effect_Class.liftEffect(QueryM.monadEffectQueryMExtended)(Effect_Exception["throw"]("Cannot determine next slot")))((function () {
                    var $9 = Control_Applicative.pure(QueryM.applicativeQueryMExtended(Effect_Aff.applicativeAff));
                    var $10 = Data_Newtype.wrap();
                    return function ($11) {
                        return $9($10($11));
                    };
                })())(Types_BigNum.add(Data_Newtype.unwrap()(slot))(Types_BigNum.fromInt(n)));
            };
        };
        var go = function (timeout) {
            return Control_Bind.bind(QueryM.bindQueryMExtended(Effect_Aff.bindAff))(QueryM.mkDatumCacheRequest(QueryM_DatumCacheWsp.getTxByHash)(function (v) {
                return v.getTxByHash;
            })(txHash))(function (found) {
                return Control_Applicative.unless(QueryM.applicativeQueryMExtended(Effect_Aff.applicativeAff))(Data_Maybe.isJust(Data_Newtype.unwrap()(found)))(Control_Bind.bind(QueryM.bindQueryMExtended(Effect_Aff.bindAff))(getCurrentSlot)(function (slot) {
                    return Control_Bind.discard(Control_Bind.discardUnit)(QueryM.bindQueryMExtended(Effect_Aff.bindAff))(Control_Applicative.when(QueryM.applicativeQueryMExtended(Effect_Aff.applicativeAff))(Data_Ord.greaterThanOrEq(Serialization_Address.ordSlot)(slot)(timeout))(Effect_Class.liftEffect(QueryM.monadEffectQueryMExtended)(Effect_Exception["throw"]("awaitTxConfirmedWithTimeoutSlots:  timeout exceeded, Transaction not confirmed"))))(function () {
                        return Control_Bind.discard(Control_Bind.discardUnit)(QueryM.bindQueryMExtended(Effect_Aff.bindAff))(Data_Functor["void"](QueryM.functorQueryMExtended(Effect_Aff.functorAff))(Control_Bind.bind(QueryM.bindQueryMExtended(Effect_Aff.bindAff))(addSlots(1)(slot))(QueryM_WaitUntilSlot.waitUntilSlot)))(function () {
                            return go(timeout);
                        });
                    });
                }));
            });
        };
        return Control_Bind.bind(QueryM.bindQueryMExtended(Effect_Aff.bindAff))(Control_Bind.bind(QueryM.bindQueryMExtended(Effect_Aff.bindAff))(getCurrentSlot)(addSlots(timeoutSlots)))(go);
    };
};
var awaitTxConfirmedWithTimeout = function (timeoutSeconds) {
    return function (txHash) {
        var timeout = Data_Time_Duration.fromDuration(Data_Time_Duration.durationSeconds)(timeoutSeconds);
        var waitAndFail = Control_Bind.discard(Control_Bind.discardUnit)(QueryM.bindQueryMExtended(Effect_Aff.bindAff))(Effect_Aff_Class.liftAff(QueryM.monadAffQueryMExtendedAff)(Effect_Aff.delay(timeout)))(function () {
            return Control_Applicative.pure(QueryM.applicativeQueryMExtended(Effect_Aff.applicativeAff))(false);
        });
        var delayTime = Data_Newtype.wrap()(1000.0);
        var findTx = Control_Bind.bind(QueryM.bindQueryMExtended(Effect_Aff.bindAff))(Data_Functor.map(QueryM.functorQueryMExtended(Effect_Aff.functorAff))((function () {
            var $12 = Data_Newtype.unwrap();
            return function ($13) {
                return Data_Maybe.isJust($12($13));
            };
        })())(QueryM.mkDatumCacheRequest(QueryM_DatumCacheWsp.getTxByHash)(function (v) {
            return v.getTxByHash;
        })(txHash)))(function (isTxFound) {
            if (isTxFound) {
                return Control_Applicative.pure(QueryM.applicativeQueryMExtended(Effect_Aff.applicativeAff))(true);
            };
            return Control_Apply.applySecond(QueryM.applyQueryMExtended(Effect_Aff.applyAff))(Effect_Aff_Class.liftAff(QueryM.monadAffQueryMExtendedAff)(Effect_Aff.delay(delayTime)))(findTx);
        });
        var $7 = Data_Newtype.unwrap()(timeoutSeconds) === Data_Number.infinity;
        if ($7) {
            return Data_Functor["void"](QueryM.functorQueryMExtended(Effect_Aff.functorAff))(findTx);
        };
        return Control_Bind.bind(QueryM.bindQueryMExtended(Effect_Aff.bindAff))(Control_Parallel.parOneOf(QueryM.parallelQueryMExtendedPar)(QueryM.alternativeQueryMExtended(Effect_Aff.alternativeParAff))(Data_Foldable.foldableArray)(Data_Functor.functorArray)([ findTx, waitAndFail ]))(function (txFound) {
            if (txFound) {
                return Control_Applicative.pure(QueryM.applicativeQueryMExtended(Effect_Aff.applicativeAff))(Data_Unit.unit);
            };
            return Effect_Class.liftEffect(QueryM.monadEffectQueryMExtended)(Effect_Exception["throw"]("awaitTxConfirmedWithTimeout: timeout exceeded, Transaction not confirmed"));
        });
    };
};
var awaitTxConfirmed = awaitTxConfirmedWithTimeout(Data_Number.infinity);
module.exports = {
    awaitTxConfirmed: awaitTxConfirmed,
    awaitTxConfirmedWithTimeout: awaitTxConfirmedWithTimeout,
    awaitTxConfirmedWithTimeoutSlots: awaitTxConfirmedWithTimeoutSlots
};
