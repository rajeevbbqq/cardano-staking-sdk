// Generated by purs version 0.14.5
"use strict";
var Cardano_Types_Transaction = require("../Cardano.Types.Transaction/index.js");
var Contract_Monad = require("../Contract.Monad/index.js");
var Data_Lens_Getter = require("../Data.Lens.Getter/index.js");
var Data_Lens_Internal_Forget = require("../Data.Lens.Internal.Forget/index.js");
var Data_Lens_Lens = require("../Data.Lens.Lens/index.js");
var Data_Lens_Setter = require("../Data.Lens.Setter/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Monoid = require("../Data.Monoid/index.js");
var Data_Profunctor_Strong = require("../Data.Profunctor.Strong/index.js");
var Data_Tuple = require("../Data.Tuple/index.js");
var Effect_Class = require("../Effect.Class/index.js");
var Metadata_MetadataType = require("../Metadata.MetadataType/index.js");
var Serialization_AuxiliaryData = require("../Serialization.AuxiliaryData/index.js");
var Types_UnbalancedTransaction = require("../Types.UnbalancedTransaction/index.js");
var _unbalancedTx = function (dictStrong) {
    return Data_Lens_Lens["lens'"](function (v) {
        return new Data_Tuple.Tuple(v.unbalancedTx, function (ubTx) {
            return {
                unbalancedTx: ubTx,
                datums: v.datums,
                redeemersTxIns: v.redeemersTxIns
            };
        });
    })(dictStrong);
};
var _metadata = function (dictStrong) {
    return Data_Lens_Lens["lens'"](function (v) {
        return new Data_Tuple.Tuple(v.metadata, function (md) {
            return {
                metadata: md,
                nativeScripts: v.nativeScripts,
                plutusScripts: v.plutusScripts
            };
        });
    })(dictStrong);
};
var _auxiliaryDataHash = function (dictStrong) {
    var $13 = _unbalancedTx(dictStrong);
    var $14 = Types_UnbalancedTransaction["_transaction"](dictStrong);
    var $15 = Cardano_Types_Transaction["_body"](dictStrong);
    var $16 = Cardano_Types_Transaction["_auxiliaryDataHash"](dictStrong);
    return function ($17) {
        return $13($14($15($16($17))));
    };
};
var _auxiliaryData = function (dictStrong) {
    var $18 = _unbalancedTx(dictStrong);
    var $19 = Types_UnbalancedTransaction["_transaction"](dictStrong);
    var $20 = Cardano_Types_Transaction["_auxiliaryData"](dictStrong);
    return function ($21) {
        return $18($19($20($21)));
    };
};
var setAuxiliaryData = function (tx) {
    return function (auxData) {
        return Effect_Class.liftEffect(Contract_Monad.monadEffectContract)(function __do() {
            var auxDataHash = Serialization_AuxiliaryData.hashAuxiliaryData(auxData)();
            return Data_Lens_Setter.setJust(_auxiliaryDataHash(Data_Profunctor_Strong.strongFn))(auxDataHash)(Data_Lens_Setter.setJust(_auxiliaryData(Data_Profunctor_Strong.strongFn))(auxData)(tx));
        });
    };
};
var setGeneralTxMetadata = function (tx) {
    return function (generalMetadata) {
        var auxData = Data_Maybe.fromMaybe(Data_Monoid.mempty(Cardano_Types_Transaction.monoidAuxiliaryData))(Data_Lens_Getter.view(_auxiliaryData(Data_Lens_Internal_Forget.strongForget))(tx));
        return setAuxiliaryData(tx)(Data_Lens_Setter.setJust(_metadata(Data_Profunctor_Strong.strongFn))(generalMetadata)(auxData));
    };
};
var setTxMetadata = function (dictMetadataType) {
    return function (tx) {
        var $22 = setGeneralTxMetadata(tx);
        var $23 = Metadata_MetadataType.toGeneralTxMetadata(dictMetadataType);
        return function ($24) {
            return $22($23($24));
        };
    };
};
module.exports = {
    setAuxiliaryData: setAuxiliaryData,
    setGeneralTxMetadata: setGeneralTxMetadata,
    setTxMetadata: setTxMetadata
};
