// Generated by purs version 0.14.5
"use strict";
var Aeson = require("../Aeson/index.js");
var Base64 = require("../Base64/index.js");
var Control_Alt = require("../Control.Alt/index.js");
var Control_Apply = require("../Control.Apply/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Data_Argonaut_Decode_Error = require("../Data.Argonaut.Decode.Error/index.js");
var Data_Either = require("../Data.Either/index.js");
var Data_Foldable = require("../Data.Foldable/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Map_Internal = require("../Data.Map.Internal/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Newtype = require("../Data.Newtype/index.js");
var Data_Show_Generic = require("../Data.Show.Generic/index.js");
var Data_Traversable = require("../Data.Traversable/index.js");
var Data_Tuple = require("../Data.Tuple/index.js");
var QueryM_JsonWsp = require("../QueryM.JsonWsp/index.js");
var Types_ByteArray = require("../Types.ByteArray/index.js");
var Types_Datum = require("../Types.Datum/index.js");
var Types_Transaction = require("../Types.Transaction/index.js");
var WspFault = function (x) {
    return x;
};
var GetTxByHashR = function (x) {
    return x;
};
var GetDatumsByHashesR = function (x) {
    return x;
};
var GetDatumByHashR = function (x) {
    return x;
};
var GetDatumByHash = (function () {
    function GetDatumByHash() {

    };
    GetDatumByHash.value = new GetDatumByHash();
    return GetDatumByHash;
})();
var GetDatumsByHashes = (function () {
    function GetDatumsByHashes() {

    };
    GetDatumsByHashes.value = new GetDatumsByHashes();
    return GetDatumsByHashes;
})();
var GetTxByHash = (function () {
    function GetTxByHash() {

    };
    GetTxByHash.value = new GetTxByHash();
    return GetTxByHash;
})();
var newtypeGetTxByHashR_ = {
    Coercible0: function () {
        return undefined;
    }
};
var newtypeGetDatumsByHashesR = {
    Coercible0: function () {
        return undefined;
    }
};
var newtypeGetDatumByHashR_ = {
    Coercible0: function () {
        return undefined;
    }
};
var genericGetTxByHashR_ = {
    to: function (x) {
        return x;
    },
    from: function (x) {
        return x;
    }
};
var showGetTxByHashR = {
    show: Data_Show_Generic.genericShow(genericGetTxByHashR_)(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Data_Maybe.showMaybe(Base64.showBase64String)))({
        reflectSymbol: function () {
            return "GetTxByHashR";
        }
    }))
};
var genericGetDatumsByHashesR = {
    to: function (x) {
        return x;
    },
    from: function (x) {
        return x;
    }
};
var showGetDatumsByHashesR = {
    show: Data_Show_Generic.genericShow(genericGetDatumsByHashesR)(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Data_Map_Internal.showMap(Types_Transaction.showDataHash)(Types_Datum.showDatum)))({
        reflectSymbol: function () {
            return "GetDatumsByHashesR";
        }
    }))
};
var genericGetDatumByHashR_ = {
    to: function (x) {
        return x;
    },
    from: function (x) {
        return x;
    }
};
var showGetDatumByHashR = {
    show: Data_Show_Generic.genericShow(genericGetDatumByHashR_)(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Data_Maybe.showMaybe(Types_Datum.showDatum)))({
        reflectSymbol: function () {
            return "GetDatumByHashR";
        }
    }))
};
var eqDatumCacheMethod = {
    eq: function (x) {
        return function (y) {
            if (x instanceof GetDatumByHash && y instanceof GetDatumByHash) {
                return true;
            };
            if (x instanceof GetDatumsByHashes && y instanceof GetDatumsByHashes) {
                return true;
            };
            if (x instanceof GetTxByHash && y instanceof GetTxByHash) {
                return true;
            };
            return false;
        };
    }
};
var decodeAesonGetTxByHashR = {
    decodeAeson: function (r) {
        return Data_Functor.map(Data_Either.functorEither)(GetTxByHashR)((function () {
            var txNotFound = Data_Functor.voidRight(Data_Either.functorEither)(Data_Maybe.Nothing.value)(Aeson.getNestedAeson(r)([ "TxNotFound" ]));
            var txFound = Control_Bind.bind(Data_Either.bindEither)(Aeson.getNestedAeson(r)([ "TxFound", "value", "raw" ]))(Aeson.decodeAeson(Aeson.decodeAesonMaybe(Base64.decodeAesonBase64String)));
            return Control_Alt.alt(Data_Either.altEither)(txFound)(txNotFound);
        })());
    }
};
var decodeAesonGetDatumsByHas = {
    decodeAeson: function (r) {
        var decodeDatum = Aeson.caseAesonObject(Data_Either.Left.create(new Data_Argonaut_Decode_Error.TypeMismatch("expected object")))(function (o) {
            return Control_Apply.apply(Data_Either.applyEither)(Data_Functor.map(Data_Either.functorEither)(Data_Tuple.Tuple.create)(Data_Functor.map(Data_Either.functorEither)(Data_Newtype.wrap())(Aeson.getField(Types_ByteArray.decodeAesonByteArray)(o)("hash"))))(Control_Bind.bindFlipped(Data_Either.bindEither)(Aeson.decodeAeson(Types_Datum.decodeAesonDatum))(Aeson.getField(Aeson.decodeAesonAeson)(o)("value")));
        });
        var decodeDatumArray = Aeson.caseAesonArray(Data_Either.Left.create(new Data_Argonaut_Decode_Error.TypeMismatch("expected array")))((function () {
            var $38 = Data_Functor.map(Data_Either.functorEither)(Data_Map_Internal.fromFoldable(Types_Transaction.ordDataHash)(Data_Foldable.foldableArray));
            var $39 = Data_Traversable.traverse(Data_Traversable.traversableArray)(Data_Either.applicativeEither)(decodeDatum);
            return function ($40) {
                return $38($39($40));
            };
        })());
        var datumsNotFound = Data_Functor.voidLeft(Data_Either.functorEither)(Aeson.getNestedAeson(r)([ "DatumsNotFound" ]))(Data_Map_Internal.empty);
        var datumsFound = Control_Bind.bindFlipped(Data_Either.bindEither)((function () {
            var $41 = Data_Functor.map(Data_Either.functorEither)(GetDatumsByHashesR);
            return function ($42) {
                return $41(decodeDatumArray($42));
            };
        })())(Aeson.getNestedAeson(r)([ "DatumsFound", "value" ]));
        return Control_Alt.alt(Data_Either.altEither)(datumsFound)(datumsNotFound);
    }
};
var decodeAesonGetDatumByHash = {
    decodeAeson: function (r) {
        return Data_Functor.map(Data_Either.functorEither)(GetDatumByHashR)((function () {
            var datumNotFound = Data_Functor.voidRight(Data_Either.functorEither)(Data_Maybe.Nothing.value)(Aeson.getNestedAeson(r)([ "DatumNotFound" ]));
            var datumFound = Data_Functor.map(Data_Either.functorEither)(Data_Maybe.Just.create)(Control_Bind.bindFlipped(Data_Either.bindEither)(Aeson.decodeAeson(Types_Datum.decodeAesonDatum))(Aeson.getNestedAeson(r)([ "DatumFound", "value" ])));
            return Control_Alt.alt(Data_Either.altEither)(datumFound)(datumNotFound);
        })());
    }
};
var faultToString = function (v) {
    return Aeson.stringifyAeson(v);
};
var datumCacheMethodToString = function (v) {
    if (v instanceof GetDatumByHash) {
        return "GetDatumByHash";
    };
    if (v instanceof GetDatumsByHashes) {
        return "GetDatumsByHashes";
    };
    if (v instanceof GetTxByHash) {
        return "GetTxByHash";
    };
    throw new Error("Failed pattern match at QueryM.DatumCacheWsp (line 162, column 28 - line 165, column 31): " + [ v.constructor.name ]);
};
var mkDatumCacheCallType = function (dictEncodeAeson) {
    return function (method) {
        return function (args) {
            return QueryM_JsonWsp.mkCallType(dictEncodeAeson)({
                type: "jsonwsp/request",
                version: "1.0",
                servicename: "ogmios"
            })({
                methodname: datumCacheMethodToString(method),
                args: args
            });
        };
    };
};
var getDatumByHashCall = mkDatumCacheCallType(Aeson.encodeAesonRecord(Aeson.gEncodeAesonCons(Aeson.encodeAesonRecord(Aeson.gEncodeAesonCons(Aeson.encodeAesonString)(Aeson.gEncodeAesonNil)({
    reflectSymbol: function () {
        return "hash";
    }
})())())(Aeson.gEncodeAesonCons(Aeson.encodeAesonString)(Aeson.gEncodeAesonCons(Aeson.encodeAesonString)(Aeson.gEncodeAesonCons(Aeson.encodeAesonString)(Aeson.gEncodeAesonCons(Aeson.encodeAesonString)(Aeson.gEncodeAesonCons(Aeson.encodeAesonString)(Aeson.gEncodeAesonNil)({
    reflectSymbol: function () {
        return "version";
    }
})())({
    reflectSymbol: function () {
        return "type";
    }
})())({
    reflectSymbol: function () {
        return "servicename";
    }
})())({
    reflectSymbol: function () {
        return "mirror";
    }
})())({
    reflectSymbol: function () {
        return "methodname";
    }
})())({
    reflectSymbol: function () {
        return "args";
    }
})())())(GetDatumByHash.value)((function () {
    var $43 = Data_Newtype.unwrap();
    return function ($44) {
        return (function (v) {
            return {
                hash: v
            };
        })(Types_ByteArray.byteArrayToHex($43($44)));
    };
})());
var getDatumsByHashesCall = mkDatumCacheCallType(Aeson.encodeAesonRecord(Aeson.gEncodeAesonCons(Aeson.encodeAesonRecord(Aeson.gEncodeAesonCons(Aeson.encodeAesonArray(Aeson.encodeAesonString))(Aeson.gEncodeAesonNil)({
    reflectSymbol: function () {
        return "hashes";
    }
})())())(Aeson.gEncodeAesonCons(Aeson.encodeAesonString)(Aeson.gEncodeAesonCons(Aeson.encodeAesonString)(Aeson.gEncodeAesonCons(Aeson.encodeAesonString)(Aeson.gEncodeAesonCons(Aeson.encodeAesonString)(Aeson.gEncodeAesonCons(Aeson.encodeAesonString)(Aeson.gEncodeAesonNil)({
    reflectSymbol: function () {
        return "version";
    }
})())({
    reflectSymbol: function () {
        return "type";
    }
})())({
    reflectSymbol: function () {
        return "servicename";
    }
})())({
    reflectSymbol: function () {
        return "mirror";
    }
})())({
    reflectSymbol: function () {
        return "methodname";
    }
})())({
    reflectSymbol: function () {
        return "args";
    }
})())())(GetDatumsByHashes.value)((function () {
    var $45 = Data_Functor.map(Data_Functor.functorArray)((function () {
        var $47 = Data_Newtype.unwrap();
        return function ($48) {
            return Types_ByteArray.byteArrayToHex($47($48));
        };
    })());
    return function ($46) {
        return (function (v) {
            return {
                hashes: v
            };
        })($45($46));
    };
})());
var getTxByHash = mkDatumCacheCallType(Aeson.encodeAesonRecord(Aeson.gEncodeAesonCons(Aeson.encodeAesonRecord(Aeson.gEncodeAesonCons(Aeson.encodeAesonString)(Aeson.gEncodeAesonNil)({
    reflectSymbol: function () {
        return "hash";
    }
})())())(Aeson.gEncodeAesonCons(Aeson.encodeAesonString)(Aeson.gEncodeAesonCons(Aeson.encodeAesonString)(Aeson.gEncodeAesonCons(Aeson.encodeAesonString)(Aeson.gEncodeAesonCons(Aeson.encodeAesonString)(Aeson.gEncodeAesonCons(Aeson.encodeAesonString)(Aeson.gEncodeAesonNil)({
    reflectSymbol: function () {
        return "version";
    }
})())({
    reflectSymbol: function () {
        return "type";
    }
})())({
    reflectSymbol: function () {
        return "servicename";
    }
})())({
    reflectSymbol: function () {
        return "mirror";
    }
})())({
    reflectSymbol: function () {
        return "methodname";
    }
})())({
    reflectSymbol: function () {
        return "args";
    }
})())())(GetTxByHash.value)(function ($49) {
    return (function (v) {
        return {
            hash: v
        };
    })(Types_ByteArray.byteArrayToHex($49));
});
var showDatumCacheMethod = {
    show: datumCacheMethodToString
};
module.exports = {
    GetDatumByHash: GetDatumByHash,
    GetDatumsByHashes: GetDatumsByHashes,
    GetTxByHash: GetTxByHash,
    GetDatumByHashR: GetDatumByHashR,
    GetDatumsByHashesR: GetDatumsByHashesR,
    GetTxByHashR: GetTxByHashR,
    WspFault: WspFault,
    faultToString: faultToString,
    getDatumByHashCall: getDatumByHashCall,
    getDatumsByHashesCall: getDatumsByHashesCall,
    getTxByHash: getTxByHash,
    newtypeGetDatumByHashR_: newtypeGetDatumByHashR_,
    genericGetDatumByHashR_: genericGetDatumByHashR_,
    showGetDatumByHashR: showGetDatumByHashR,
    decodeAesonGetDatumByHash: decodeAesonGetDatumByHash,
    newtypeGetDatumsByHashesR: newtypeGetDatumsByHashesR,
    genericGetDatumsByHashesR: genericGetDatumsByHashesR,
    showGetDatumsByHashesR: showGetDatumsByHashesR,
    decodeAesonGetDatumsByHas: decodeAesonGetDatumsByHas,
    newtypeGetTxByHashR_: newtypeGetTxByHashR_,
    genericGetTxByHashR_: genericGetTxByHashR_,
    showGetTxByHashR: showGetTxByHashR,
    decodeAesonGetTxByHashR: decodeAesonGetTxByHashR,
    eqDatumCacheMethod: eqDatumCacheMethod,
    showDatumCacheMethod: showDatumCacheMethod
};
