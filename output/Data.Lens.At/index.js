// Generated by purs version 0.14.5
"use strict";
var Control_Category = require("../Control.Category/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Identity = require("../Data.Identity/index.js");
var Data_Lens_Index = require("../Data.Lens.Index/index.js");
var Data_Lens_Lens = require("../Data.Lens.Lens/index.js");
var Data_Map_Internal = require("../Data.Map.Internal/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Newtype = require("../Data.Newtype/index.js");
var Data_Set = require("../Data.Set/index.js");
var Data_Unit = require("../Data.Unit/index.js");
var Foreign_Object = require("../Foreign.Object/index.js");
var atSet = function (dictOrd) {
    return {
        at: function (x) {
            return function (dictStrong) {
                var update = function (v) {
                    if (v instanceof Data_Maybe.Nothing) {
                        return Data_Set["delete"](dictOrd)(x);
                    };
                    if (v instanceof Data_Maybe.Just) {
                        return Data_Set.insert(dictOrd)(x);
                    };
                    throw new Error("Failed pattern match at Data.Lens.At (line 51, column 7 - line 51, column 34): " + [ v.constructor.name ]);
                };
                var get = function (xs) {
                    var $15 = Data_Set.member(dictOrd)(x)(xs);
                    if ($15) {
                        return new Data_Maybe.Just(Data_Unit.unit);
                    };
                    return Data_Maybe.Nothing.value;
                };
                return Data_Lens_Lens.lens(get)(Data_Function.flip(update))(dictStrong);
            };
        },
        Index0: function () {
            return Data_Lens_Index.indexSet(dictOrd);
        }
    };
};
var atMaybe = {
    at: function (v) {
        return function (dictStrong) {
            return Data_Lens_Lens.lens(Control_Category.identity(Control_Category.categoryFn))(function (v1) {
                return Control_Category.identity(Control_Category.categoryFn);
            })(dictStrong);
        };
    },
    Index0: function () {
        return Data_Lens_Index.indexMaybe;
    }
};
var atMap = function (dictOrd) {
    return {
        at: function (k) {
            return function (dictStrong) {
                return Data_Lens_Lens.lens(Data_Map_Internal.lookup(dictOrd)(k))(function (m) {
                    return Data_Maybe["maybe'"](function (v) {
                        return Data_Map_Internal["delete"](dictOrd)(k)(m);
                    })(function (v) {
                        return Data_Map_Internal.insert(dictOrd)(k)(v)(m);
                    });
                })(dictStrong);
            };
        },
        Index0: function () {
            return Data_Lens_Index.indexMap(dictOrd);
        }
    };
};
var atIdentity = {
    at: function (v) {
        return function (dictStrong) {
            return Data_Lens_Lens.lens((function () {
                var $17 = Data_Newtype.unwrap();
                return function ($18) {
                    return Data_Maybe.Just.create($17($18));
                };
            })())(Data_Function.flip(Data_Maybe.maybe)(Data_Identity.Identity))(dictStrong);
        };
    },
    Index0: function () {
        return Data_Lens_Index.indexIdentity;
    }
};
var atForeignObject = {
    at: function (k) {
        return function (dictStrong) {
            return Data_Lens_Lens.lens(Foreign_Object.lookup(k))(function (m) {
                return Data_Maybe["maybe'"](function (v) {
                    return Foreign_Object["delete"](k)(m);
                })(function (v) {
                    return Foreign_Object.insert(k)(v)(m);
                });
            })(dictStrong);
        };
    },
    Index0: function () {
        return Data_Lens_Index.indexForeignObject;
    }
};
var at = function (dict) {
    return dict.at;
};
module.exports = {
    at: at,
    atIdentity: atIdentity,
    atMaybe: atMaybe,
    atSet: atSet,
    atMap: atMap,
    atForeignObject: atForeignObject
};
