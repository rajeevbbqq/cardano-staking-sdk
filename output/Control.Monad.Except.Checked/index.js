// Generated by purs version 0.14.5
"use strict";
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Control_Category = require("../Control.Category/index.js");
var Control_Monad_Error_Class = require("../Control.Monad.Error.Class/index.js");
var Control_Monad_Except_Trans = require("../Control.Monad.Except.Trans/index.js");
var Control_Monad_Trans_Class = require("../Control.Monad.Trans.Class/index.js");
var Data_Either = require("../Data.Either/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Newtype = require("../Data.Newtype/index.js");
var Data_Variant = require("../Data.Variant/index.js");
var safe = function (dictFunctor) {
    var $9 = Data_Functor.map(dictFunctor)(Data_Either.either(Data_Variant.case_)(Control_Category.identity(Control_Category.categoryFn)));
    var $10 = Data_Newtype.unwrap();
    return function ($11) {
        return $9($10($11));
    };
};
var handleErrors = function (dictRowToList) {
    return function (dictVariantMatchCases) {
        return function (dictUnion) {
            return function (dictMonad) {
                return function (cases) {
                    return Control_Bind.composeKleisli(dictMonad.Bind1())(Data_Newtype.unwrap())(Data_Either.either(Data_Variant.match()()()(cases))(Control_Applicative.pure(dictMonad.Applicative0())));
                };
            };
        };
    };
};
var handleError = function (dictRowToList) {
    return function (dictVariantMatchCases) {
        return function (dictUnion) {
            return function (dictMonad) {
                return function (cases) {
                    return Control_Bind.composeKleisli(Control_Monad_Except_Trans.bindExceptT(dictMonad))((function () {
                        var $12 = Control_Monad_Trans_Class.lift(Control_Monad_Except_Trans.monadTransExceptT)(dictMonad);
                        var $13 = Data_Newtype.unwrap();
                        return function ($14) {
                            return $12($13($14));
                        };
                    })())(Data_Either.either(Data_Variant.onMatch()()()(cases)(Control_Monad_Error_Class.throwError(Control_Monad_Except_Trans.monadThrowExceptT(dictMonad))))(Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(dictMonad))));
                };
            };
        };
    };
};
module.exports = {
    handleError: handleError,
    handleErrors: handleErrors,
    safe: safe
};
