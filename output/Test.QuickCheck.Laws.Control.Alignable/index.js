// Generated by purs version 0.14.5
"use strict";
var Control_Category = require("../Control.Category/index.js");
var Data_Align = require("../Data.Align/index.js");
var Data_Eq = require("../Data.Eq/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_These = require("../Data.These/index.js");
var Effect_Console = require("../Effect.Console/index.js");
var Test_QuickCheck = require("../Test.QuickCheck/index.js");
var checkAlignable = function (dictAlignable) {
    return function (dictArbitrary) {
        return function (dictArbitrary1) {
            return function (dictEq) {
                return function (v) {
                    var rightIdentity = function (fa) {
                        return Data_Eq.eq(dictEq)(Data_Align.align(dictAlignable.Align0())(Control_Category.identity(Control_Category.categoryFn))(fa)(Data_Align.nil(dictAlignable)))(Data_Functor.map((dictAlignable.Align0()).Functor0())(Data_These.This.create)(fa));
                    };
                    var leftIdentity = function (fb) {
                        return Data_Eq.eq(dictEq)(Data_Align.align(dictAlignable.Align0())(Control_Category.identity(Control_Category.categoryFn))(Data_Align.nil(dictAlignable))(fb))(Data_Functor.map((dictAlignable.Align0()).Functor0())(Data_These.That.create)(fb));
                    };
                    return function __do() {
                        Effect_Console.log("Checking 'Left Identity' law for Alignable")();
                        Test_QuickCheck["quickCheck'"](Test_QuickCheck.testableFunction(dictArbitrary1)(Test_QuickCheck.testableBoolean))(1000)(leftIdentity)();
                        Effect_Console.log("Checking 'Right Identity' law for Alignable")();
                        return Test_QuickCheck["quickCheck'"](Test_QuickCheck.testableFunction(dictArbitrary)(Test_QuickCheck.testableBoolean))(1000)(rightIdentity)();
                    };
                };
            };
        };
    };
};
module.exports = {
    checkAlignable: checkAlignable
};
