// Generated by purs version 0.14.5
"use strict";
var Control_Alt = require("../Control.Alt/index.js");
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Control_Monad_Error_Class = require("../Control.Monad.Error.Class/index.js");
var Control_Monad_Reader_Class = require("../Control.Monad.Reader.Class/index.js");
var Control_Monad_Rec_Class = require("../Control.Monad.Rec.Class/index.js");
var Control_Monad_State_Class = require("../Control.Monad.State.Class/index.js");
var Control_Monad_Trans_Class = require("../Control.Monad.Trans.Class/index.js");
var Control_Monad_Writer_Class = require("../Control.Monad.Writer.Class/index.js");
var Control_Plus = require("../Control.Plus/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Monoid = require("../Data.Monoid/index.js");
var Data_Semigroup = require("../Data.Semigroup/index.js");
var Data_Tuple = require("../Data.Tuple/index.js");
var Effect_Aff = require("../Effect.Aff/index.js");
var Effect_Aff_Class = require("../Effect.Aff.Class/index.js");
var Effect_Class = require("../Effect.Class/index.js");
var X = function (x) {
    return x;
};
var Request = (function () {
    function Request(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Request.create = function (value0) {
        return function (value1) {
            return new Request(value0, value1);
        };
    };
    return Request;
})();
var Respond = (function () {
    function Respond(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Respond.create = function (value0) {
        return function (value1) {
            return new Respond(value0, value1);
        };
    };
    return Respond;
})();
var M = (function () {
    function M(value0) {
        this.value0 = value0;
    };
    M.create = function (value0) {
        return new M(value0);
    };
    return M;
})();
var Pure = (function () {
    function Pure(value0) {
        this.value0 = value0;
    };
    Pure.create = function (value0) {
        return new Pure(value0);
    };
    return Pure;
})();
var observe = function (dictMonad) {
    return function (p0) {
        var go = function (p) {
            if (p instanceof Request) {
                return Control_Applicative.pure(dictMonad.Applicative0())(new Request(p.value0, (function () {
                    var $143 = observe(dictMonad);
                    return function ($144) {
                        return $143(p.value1($144));
                    };
                })()));
            };
            if (p instanceof Respond) {
                return Control_Applicative.pure(dictMonad.Applicative0())(new Respond(p.value0, (function () {
                    var $145 = observe(dictMonad);
                    return function ($146) {
                        return $145(p.value1($146));
                    };
                })()));
            };
            if (p instanceof M) {
                return Control_Bind.bind(dictMonad.Bind1())(p.value0)(go);
            };
            if (p instanceof Pure) {
                return Control_Applicative.pure(dictMonad.Applicative0())(new Pure(p.value0));
            };
            throw new Error("Failed pattern match at Pipes.Internal (line 173, column 12 - line 177, column 40): " + [ p.constructor.name ]);
        };
        return new M(go(p0));
    };
};
var proxyMFunctor = {
    hoist: function (dictMonad) {
        return function (nat) {
            return function (p0) {
                var go = function (p) {
                    if (p instanceof Request) {
                        return new Request(p.value0, function (x) {
                            return go(p.value1(x));
                        });
                    };
                    if (p instanceof Respond) {
                        return new Respond(p.value0, function (x) {
                            return go(p.value1(x));
                        });
                    };
                    if (p instanceof M) {
                        return new M(nat(Control_Bind.bind(dictMonad.Bind1())(p.value0)(function (p$prime) {
                            return Control_Applicative.pure(dictMonad.Applicative0())(go(p$prime));
                        })));
                    };
                    if (p instanceof Pure) {
                        return new Pure(p.value0);
                    };
                    throw new Error("Failed pattern match at Pipes.Internal (line 72, column 16 - line 76, column 37): " + [ p.constructor.name ]);
                };
                return go(observe(dictMonad)(p0));
            };
        };
    }
};
var monadTransProxy = {
    lift: function (dictMonad) {
        return function (m) {
            return new M(Data_Functor.map(((dictMonad.Bind1()).Apply0()).Functor0())(Pure.create)(m));
        };
    }
};
var functorProxy = function (dictMonad) {
    return {
        map: function (f) {
            return function (p0) {
                var go = function (p) {
                    if (p instanceof Request) {
                        return new Request(p.value0, function (x) {
                            return go(p.value1(x));
                        });
                    };
                    if (p instanceof Respond) {
                        return new Respond(p.value0, function (x) {
                            return go(p.value1(x));
                        });
                    };
                    if (p instanceof M) {
                        return new M(Control_Bind.bind(dictMonad.Bind1())(p.value0)(function (v) {
                            return Control_Applicative.pure(dictMonad.Applicative0())(go(v));
                        }));
                    };
                    if (p instanceof Pure) {
                        return new Pure(f(p.value0));
                    };
                    throw new Error("Failed pattern match at Pipes.Internal (line 28, column 12 - line 32, column 41): " + [ p.constructor.name ]);
                };
                return go(p0);
            };
        }
    };
};
var proxyAlt = function (dictMonadPlus) {
    return {
        alt: function (v) {
            return function (v1) {
                if (v instanceof Request) {
                    return new Request(v.value0, function (a) {
                        return Control_Alt.alt(proxyAlt(dictMonadPlus))(v.value1(a))(v1);
                    });
                };
                if (v instanceof Respond) {
                    return new Respond(v.value0, function (b$prime) {
                        return Control_Alt.alt(proxyAlt(dictMonadPlus))(v.value1(b$prime))(v1);
                    });
                };
                if (v instanceof Pure) {
                    return new Pure(v.value0);
                };
                if (v instanceof M) {
                    return new M(Control_Alt.alt(((dictMonadPlus.Alternative1()).Plus1()).Alt0())(Control_Bind.bind((dictMonadPlus.Monad0()).Bind1())(v.value0)(function (p$prime) {
                        return Control_Applicative.pure((dictMonadPlus.Alternative1()).Applicative0())(Control_Alt.alt(proxyAlt(dictMonadPlus))(p$prime)(v1));
                    }))(Control_Applicative.pure((dictMonadPlus.Alternative1()).Applicative0())(v1)));
                };
                throw new Error("Failed pattern match at Pipes.Internal (line 132, column 1 - line 138, column 63): " + [ v.constructor.name, v1.constructor.name ]);
            };
        },
        Functor0: function () {
            return functorProxy(dictMonadPlus.Monad0());
        }
    };
};
var proxyPlus = function (dictMonadPlus) {
    return {
        empty: Control_Monad_Trans_Class.lift(monadTransProxy)(dictMonadPlus.Monad0())(Control_Plus.empty((dictMonadPlus.Alternative1()).Plus1())),
        Alt0: function () {
            return proxyAlt(dictMonadPlus);
        }
    };
};
var semigroupProxy = function (dictMonad) {
    return function (dictSemigroup) {
        return {
            append: function (p1) {
                return function (p2) {
                    var go = function (p) {
                        if (p instanceof Request) {
                            return new Request(p.value0, function (x) {
                                return go(p.value1(x));
                            });
                        };
                        if (p instanceof Respond) {
                            return new Respond(p.value0, function (x) {
                                return go(p.value1(x));
                            });
                        };
                        if (p instanceof M) {
                            return new M(Control_Bind.bind(dictMonad.Bind1())(p.value0)(function (v) {
                                return Control_Applicative.pure(dictMonad.Applicative0())(go(v));
                            }));
                        };
                        if (p instanceof Pure) {
                            return Data_Functor.map(functorProxy(dictMonad))(function (v) {
                                return Data_Semigroup.append(dictSemigroup)(p.value0)(v);
                            })(p2);
                        };
                        throw new Error("Failed pattern match at Pipes.Internal (line 60, column 12 - line 64, column 41): " + [ p.constructor.name ]);
                    };
                    return go(p1);
                };
            }
        };
    };
};
var monoidProxy = function (dictMonad) {
    return function (dictMonoid) {
        return {
            mempty: new Pure(Data_Monoid.mempty(dictMonoid)),
            Semigroup0: function () {
                return semigroupProxy(dictMonad)(dictMonoid.Semigroup0());
            }
        };
    };
};
var closed = function ($copy_v) {
    var $tco_result;
    function $tco_loop(v) {
        $copy_v = v;
        return;
    };
    while (!false) {
        $tco_result = $tco_loop($copy_v);
    };
    return $tco_result;
};
var applyProxy = function (dictMonad) {
    return {
        apply: function (pf0) {
            return function (px) {
                var go = function (pf) {
                    if (pf instanceof Request) {
                        return new Request(pf.value0, function (x) {
                            return go(pf.value1(x));
                        });
                    };
                    if (pf instanceof Respond) {
                        return new Respond(pf.value0, function (x) {
                            return go(pf.value1(x));
                        });
                    };
                    if (pf instanceof M) {
                        return new M(Control_Bind.bind(dictMonad.Bind1())(pf.value0)(function (v) {
                            return Control_Applicative.pure(dictMonad.Applicative0())(go(v));
                        }));
                    };
                    if (pf instanceof Pure) {
                        return Data_Functor.map(functorProxy(dictMonad))(pf.value0)(px);
                    };
                    throw new Error("Failed pattern match at Pipes.Internal (line 36, column 13 - line 40, column 33): " + [ pf.constructor.name ]);
                };
                return go(pf0);
            };
        },
        Functor0: function () {
            return functorProxy(dictMonad);
        }
    };
};
var bindProxy = function (dictMonad) {
    return {
        bind: function (p0) {
            return function (f) {
                var go = function (p) {
                    if (p instanceof Request) {
                        return new Request(p.value0, function (x) {
                            return go(p.value1(x));
                        });
                    };
                    if (p instanceof Respond) {
                        return new Respond(p.value0, function (x) {
                            return go(p.value1(x));
                        });
                    };
                    if (p instanceof M) {
                        return new M(Control_Bind.bind(dictMonad.Bind1())(p.value0)(function (v) {
                            return Control_Applicative.pure(dictMonad.Applicative0())(go(v));
                        }));
                    };
                    if (p instanceof Pure) {
                        return f(p.value0);
                    };
                    throw new Error("Failed pattern match at Pipes.Internal (line 47, column 12 - line 51, column 28): " + [ p.constructor.name ]);
                };
                return go(p0);
            };
        },
        Apply0: function () {
            return applyProxy(dictMonad);
        }
    };
};
var proxyMMonad = {
    embed: function (dictMonad) {
        return function (f) {
            var go = function (p) {
                if (p instanceof Request) {
                    return new Request(p.value0, function (x) {
                        return go(p.value1(x));
                    });
                };
                if (p instanceof Respond) {
                    return new Respond(p.value0, function (x) {
                        return go(p.value1(x));
                    });
                };
                if (p instanceof M) {
                    return Control_Bind.bind(bindProxy(dictMonad))(f(p.value0))(go);
                };
                if (p instanceof Pure) {
                    return new Pure(p.value0);
                };
                throw new Error("Failed pattern match at Pipes.Internal (line 81, column 16 - line 85, column 37): " + [ p.constructor.name ]);
            };
            return go;
        };
    },
    MFunctor0: function () {
        return proxyMFunctor;
    },
    MonadTrans1: function () {
        return monadTransProxy;
    }
};
var applicativeProxy = function (dictMonad) {
    return {
        pure: Pure.create,
        Apply0: function () {
            return applyProxy(dictMonad);
        }
    };
};
var monadProxy = function (dictMonad) {
    return {
        Applicative0: function () {
            return applicativeProxy(dictMonad);
        },
        Bind1: function () {
            return bindProxy(dictMonad);
        }
    };
};
var monadRecProxy = function (dictMonad) {
    return {
        tailRecM: function (f) {
            return function (a0) {
                var go = function (v) {
                    if (v instanceof Pure && v.value0 instanceof Control_Monad_Rec_Class.Loop) {
                        return go(f(v.value0.value0));
                    };
                    if (v instanceof Pure && v.value0 instanceof Control_Monad_Rec_Class.Done) {
                        return new Pure(v.value0.value0);
                    };
                    if (v instanceof M) {
                        return M.create(Control_Bind.bind(dictMonad.Bind1())(v.value0)(function (v1) {
                            return Control_Applicative.pure(dictMonad.Applicative0())(go(v1));
                        }));
                    };
                    if (v instanceof Request) {
                        return new Request(v.value0, function (x) {
                            return go(v.value1(x));
                        });
                    };
                    if (v instanceof Respond) {
                        return new Respond(v.value0, function (x) {
                            return go(v.value1(x));
                        });
                    };
                    throw new Error("Failed pattern match at Pipes.Internal (line 163, column 10 - line 168, column 52): " + [ v.constructor.name ]);
                };
                return go(f(a0));
            };
        },
        Monad0: function () {
            return monadProxy(dictMonad);
        }
    };
};
var proxyMonadAsk = function (dictMonadAsk) {
    return {
        ask: Control_Monad_Trans_Class.lift(monadTransProxy)(dictMonadAsk.Monad0())(Control_Monad_Reader_Class.ask(dictMonadAsk)),
        Monad0: function () {
            return monadProxy(dictMonadAsk.Monad0());
        }
    };
};
var proxyMonadReader = function (dictMonadReader) {
    return {
        local: function (f) {
            var go = function (p) {
                if (p instanceof Request) {
                    return new Request(p.value0, function (a) {
                        return go(p.value1(a));
                    });
                };
                if (p instanceof Respond) {
                    return new Respond(p.value0, function (b$prime) {
                        return go(p.value1(b$prime));
                    });
                };
                if (p instanceof Pure) {
                    return new Pure(p.value0);
                };
                if (p instanceof M) {
                    return new M(Control_Bind.bind(((dictMonadReader.MonadAsk0()).Monad0()).Bind1())(Control_Monad_Reader_Class.local(dictMonadReader)(f)(p.value0))(function (r) {
                        return Control_Applicative.pure(((dictMonadReader.MonadAsk0()).Monad0()).Applicative0())(go(r));
                    }));
                };
                throw new Error("Failed pattern match at Pipes.Internal (line 99, column 18 - line 103, column 68): " + [ p.constructor.name ]);
            };
            return go;
        },
        MonadAsk0: function () {
            return proxyMonadAsk(dictMonadReader.MonadAsk0());
        }
    };
};
var proxyMonadEffect = function (dictMonadEffect) {
    return {
        liftEffect: function (m) {
            return new M(Effect_Class.liftEffect(dictMonadEffect)(function __do() {
                var r = m();
                return new Pure(r);
            }));
        },
        Monad0: function () {
            return monadProxy(dictMonadEffect.Monad0());
        }
    };
};
var proxyMonadAff = function (dictMonadAff) {
    return {
        liftAff: function (m) {
            return new M(Effect_Aff_Class.liftAff(dictMonadAff)(Control_Bind.bind(Effect_Aff.bindAff)(m)(function (r) {
                return Control_Applicative.pure(Effect_Aff.applicativeAff)(new Pure(r));
            })));
        },
        MonadEffect0: function () {
            return proxyMonadEffect(dictMonadAff.MonadEffect0());
        }
    };
};
var proxyMonadState = function (dictMonadState) {
    return {
        state: (function () {
            var $147 = Control_Monad_Trans_Class.lift(monadTransProxy)(dictMonadState.Monad0());
            var $148 = Control_Monad_State_Class.state(dictMonadState);
            return function ($149) {
                return $147($148($149));
            };
        })(),
        Monad0: function () {
            return monadProxy(dictMonadState.Monad0());
        }
    };
};
var proxyMonadTell = function (dictMonoid) {
    return function (dictMonadTell) {
        return {
            tell: (function () {
                var $150 = Control_Monad_Trans_Class.lift(monadTransProxy)(dictMonadTell.Monad1());
                var $151 = Control_Monad_Writer_Class.tell(dictMonadTell);
                return function ($152) {
                    return $150($151($152));
                };
            })(),
            Semigroup0: dictMonadTell.Semigroup0,
            Monad1: function () {
                return monadProxy(dictMonadTell.Monad1());
            }
        };
    };
};
var proxyMonadWriter = function (dictMonoid) {
    return function (dictMonadWriter) {
        return {
            listen: function (p0) {
                var go = function (p) {
                    return function (w) {
                        if (p instanceof Request) {
                            return new Request(p.value0, function (a) {
                                return go(p.value1(a))(w);
                            });
                        };
                        if (p instanceof Respond) {
                            return new Respond(p.value0, function (b$prime) {
                                return go(p.value1(b$prime))(w);
                            });
                        };
                        if (p instanceof Pure) {
                            return new Pure(new Data_Tuple.Tuple(p.value0, w));
                        };
                        if (p instanceof M) {
                            return new M(Control_Bind.bind(((dictMonadWriter.MonadTell1()).Monad1()).Bind1())(Control_Monad_Writer_Class.listen(dictMonadWriter)(p.value0))(function (v) {
                                return Control_Applicative.pure(((dictMonadWriter.MonadTell1()).Monad1()).Applicative0())(go(v.value0)(Data_Semigroup.append((dictMonadWriter.MonadTell1()).Semigroup0())(w)(v.value1)));
                            }));
                        };
                        throw new Error("Failed pattern match at Pipes.Internal (line 114, column 18 - line 120, column 60): " + [ p.constructor.name ]);
                    };
                };
                return go(p0)(Data_Monoid.mempty(dictMonadWriter.Monoid0()));
            },
            pass: function (p0) {
                var go = function (p) {
                    return function (w) {
                        if (p instanceof Request) {
                            return new Request(p.value0, function (a) {
                                return go(p.value1(a))(w);
                            });
                        };
                        if (p instanceof Respond) {
                            return new Respond(p.value0, function (b$prime) {
                                return go(p.value1(b$prime))(w);
                            });
                        };
                        if (p instanceof Pure) {
                            return new M(Control_Monad_Writer_Class.pass(dictMonadWriter)(Control_Applicative.pure(((dictMonadWriter.MonadTell1()).Monad1()).Applicative0())(new Data_Tuple.Tuple(new Pure(p.value0.value0), function (v) {
                                return p.value0.value1(w);
                            }))));
                        };
                        if (p instanceof M) {
                            return new M(Control_Bind.bind(((dictMonadWriter.MonadTell1()).Monad1()).Bind1())(Control_Monad_Writer_Class.listen(dictMonadWriter)(p.value0))(function (v) {
                                return Control_Applicative.pure(((dictMonadWriter.MonadTell1()).Monad1()).Applicative0())(go(v.value0)(Data_Semigroup.append((dictMonadWriter.MonadTell1()).Semigroup0())(w)(v.value1)));
                            }));
                        };
                        throw new Error("Failed pattern match at Pipes.Internal (line 124, column 18 - line 130, column 64): " + [ p.constructor.name ]);
                    };
                };
                return go(p0)(Data_Monoid.mempty(dictMonadWriter.Monoid0()));
            },
            Monoid0: dictMonadWriter.Monoid0,
            MonadTell1: function () {
                return proxyMonadTell(dictMonadWriter.Monoid0())(dictMonadWriter.MonadTell1());
            }
        };
    };
};
var proxyMonadThrow = function (dictMonadThrow) {
    return {
        throwError: (function () {
            var $153 = Control_Monad_Trans_Class.lift(monadTransProxy)(dictMonadThrow.Monad0());
            var $154 = Control_Monad_Error_Class.throwError(dictMonadThrow);
            return function ($155) {
                return $153($154($155));
            };
        })(),
        Monad0: function () {
            return monadProxy(dictMonadThrow.Monad0());
        }
    };
};
var proxyMonadError = function (dictMonadError) {
    return {
        catchError: function (v) {
            return function (v1) {
                if (v instanceof Request) {
                    return new Request(v.value0, function (a) {
                        return Control_Monad_Error_Class.catchError(proxyMonadError(dictMonadError))(v.value1(a))(v1);
                    });
                };
                if (v instanceof Respond) {
                    return new Respond(v.value0, function (b$prime) {
                        return Control_Monad_Error_Class.catchError(proxyMonadError(dictMonadError))(v.value1(b$prime))(v1);
                    });
                };
                if (v instanceof Pure) {
                    return new Pure(v.value0);
                };
                if (v instanceof M) {
                    return new M(Control_Monad_Error_Class.catchError(dictMonadError)(Control_Bind.bind(((dictMonadError.MonadThrow0()).Monad0()).Bind1())(v.value0)(function (p$prime) {
                        return Control_Applicative.pure(((dictMonadError.MonadThrow0()).Monad0()).Applicative0())(Control_Monad_Error_Class.catchError(proxyMonadError(dictMonadError))(p$prime)(v1));
                    }))((function () {
                        var $156 = Control_Applicative.pure(((dictMonadError.MonadThrow0()).Monad0()).Applicative0());
                        return function ($157) {
                            return $156(v1($157));
                        };
                    })()));
                };
                throw new Error("Failed pattern match at Pipes.Internal (line 152, column 1 - line 158, column 93): " + [ v.constructor.name, v1.constructor.name ]);
            };
        },
        MonadThrow0: function () {
            return proxyMonadThrow(dictMonadError.MonadThrow0());
        }
    };
};
var proxyAlternative = function (dictMonadPlus) {
    return {
        Applicative0: function () {
            return applicativeProxy(dictMonadPlus.Monad0());
        },
        Plus1: function () {
            return proxyPlus(dictMonadPlus);
        }
    };
};
module.exports = {
    Request: Request,
    Respond: Respond,
    M: M,
    Pure: Pure,
    observe: observe,
    X: X,
    closed: closed,
    functorProxy: functorProxy,
    applyProxy: applyProxy,
    applicativeProxy: applicativeProxy,
    bindProxy: bindProxy,
    monadProxy: monadProxy,
    monoidProxy: monoidProxy,
    semigroupProxy: semigroupProxy,
    monadTransProxy: monadTransProxy,
    proxyMFunctor: proxyMFunctor,
    proxyMMonad: proxyMMonad,
    proxyMonadEffect: proxyMonadEffect,
    proxyMonadAff: proxyMonadAff,
    proxyMonadAsk: proxyMonadAsk,
    proxyMonadReader: proxyMonadReader,
    proxyMonadState: proxyMonadState,
    proxyMonadTell: proxyMonadTell,
    proxyMonadWriter: proxyMonadWriter,
    proxyAlt: proxyAlt,
    proxyPlus: proxyPlus,
    proxyAlternative: proxyAlternative,
    proxyMonadThrow: proxyMonadThrow,
    proxyMonadError: proxyMonadError,
    monadRecProxy: monadRecProxy
};
