// Generated by purs version 0.14.5
"use strict";
var Aeson = require("../Aeson/index.js");
var Aeson_Decode = require("../Aeson.Decode/index.js");
var Aeson_Encode = require("../Aeson.Encode/index.js");
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Apply = require("../Control.Apply/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Control_Lazy = require("../Control.Lazy/index.js");
var Control_Monad_Error_Class = require("../Control.Monad.Error.Class/index.js");
var Control_Monad_Except_Trans = require("../Control.Monad.Except.Trans/index.js");
var Control_Monad_Reader_Trans = require("../Control.Monad.Reader.Trans/index.js");
var Data_Argonaut_Decode_Error = require("../Data.Argonaut.Decode.Error/index.js");
var Data_Array = require("../Data.Array/index.js");
var Data_Bifunctor = require("../Data.Bifunctor/index.js");
var Data_BigInt = require("../Data.BigInt/index.js");
var Data_Either = require("../Data.Either/index.js");
var Data_Enum = require("../Data.Enum/index.js");
var Data_Eq = require("../Data.Eq/index.js");
var Data_Foldable = require("../Data.Foldable/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Functor_Contravariant = require("../Data.Functor.Contravariant/index.js");
var Data_Generic_Rep = require("../Data.Generic.Rep/index.js");
var Data_JSDate = require("../Data.JSDate/index.js");
var Data_Map_Internal = require("../Data.Map.Internal/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Newtype = require("../Data.Newtype/index.js");
var Data_Op = require("../Data.Op/index.js");
var Data_Ord = require("../Data.Ord/index.js");
var Data_Ordering = require("../Data.Ordering/index.js");
var Data_Ring = require("../Data.Ring/index.js");
var Data_Semiring = require("../Data.Semiring/index.js");
var Data_Show = require("../Data.Show/index.js");
var Data_Show_Generic = require("../Data.Show.Generic/index.js");
var Data_Tuple = require("../Data.Tuple/index.js");
var Effect = require("../Effect/index.js");
var Effect_Class = require("../Effect.Class/index.js");
var FromData = require("../FromData/index.js");
var Helpers = require("../Helpers/index.js");
var $$Math = require("../Math/index.js");
var QueryM_Ogmios = require("../QueryM.Ogmios/index.js");
var Serialization_Address = require("../Serialization.Address/index.js");
var ToData = require("../ToData/index.js");
var TypeLevel_Nat = require("../TypeLevel.Nat/index.js");
var TypeLevel_RowList_Unordered_Indexed = require("../TypeLevel.RowList.Unordered.Indexed/index.js");
var Types_BigNum = require("../Types.BigNum/index.js");
var CannotFindSlotInEraSummaries = (function () {
    function CannotFindSlotInEraSummaries(value0) {
        this.value0 = value0;
    };
    CannotFindSlotInEraSummaries.create = function (value0) {
        return new CannotFindSlotInEraSummaries(value0);
    };
    return CannotFindSlotInEraSummaries;
})();
var StartingSlotGreaterThanSlot = (function () {
    function StartingSlotGreaterThanSlot(value0) {
        this.value0 = value0;
    };
    StartingSlotGreaterThanSlot.create = function (value0) {
        return new StartingSlotGreaterThanSlot(value0);
    };
    return StartingSlotGreaterThanSlot;
})();
var EndTimeLessThanTime = (function () {
    function EndTimeLessThanTime(value0) {
        this.value0 = value0;
    };
    EndTimeLessThanTime.create = function (value0) {
        return new EndTimeLessThanTime(value0);
    };
    return EndTimeLessThanTime;
})();
var CannotGetBigIntFromNumber = (function () {
    function CannotGetBigIntFromNumber() {

    };
    CannotGetBigIntFromNumber.value = new CannotGetBigIntFromNumber();
    return CannotGetBigIntFromNumber;
})();
var RelTime = function (x) {
    return x;
};
var RelSlot = function (x) {
    return x;
};
var POSIXTime = function (x) {
    return x;
};
var ModTime = function (x) {
    return x;
};
var NegInf = (function () {
    function NegInf() {

    };
    NegInf.value = new NegInf();
    return NegInf;
})();
var Finite = (function () {
    function Finite(value0) {
        this.value0 = value0;
    };
    Finite.create = function (value0) {
        return new Finite(value0);
    };
    return Finite;
})();
var PosInf = (function () {
    function PosInf() {

    };
    PosInf.value = new PosInf();
    return PosInf;
})();
var LowerBound = (function () {
    function LowerBound(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    LowerBound.create = function (value0) {
        return function (value1) {
            return new LowerBound(value0, value1);
        };
    };
    return LowerBound;
})();
var UpperBound = (function () {
    function UpperBound(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    UpperBound.create = function (value0) {
        return function (value1) {
            return new UpperBound(value0, value1);
        };
    };
    return UpperBound;
})();
var HaskInterval = function (x) {
    return x;
};
var Interval = function (x) {
    return x;
};
var OnchainPOSIXTimeRange = function (x) {
    return x;
};
var AbsTime = function (x) {
    return x;
};
var CannotFindTimeInEraSummaries = (function () {
    function CannotFindTimeInEraSummaries(value0) {
        this.value0 = value0;
    };
    CannotFindTimeInEraSummaries.create = function (value0) {
        return new CannotFindTimeInEraSummaries(value0);
    };
    return CannotFindTimeInEraSummaries;
})();
var PosixTimeBeforeSystemStart = (function () {
    function PosixTimeBeforeSystemStart(value0) {
        this.value0 = value0;
    };
    PosixTimeBeforeSystemStart.create = function (value0) {
        return new PosixTimeBeforeSystemStart(value0);
    };
    return PosixTimeBeforeSystemStart;
})();
var StartTimeGreaterThanTime = (function () {
    function StartTimeGreaterThanTime(value0) {
        this.value0 = value0;
    };
    StartTimeGreaterThanTime.create = function (value0) {
        return new StartTimeGreaterThanTime(value0);
    };
    return StartTimeGreaterThanTime;
})();
var EndSlotLessThanSlotOrModNonZero = (function () {
    function EndSlotLessThanSlotOrModNonZero(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    EndSlotLessThanSlotOrModNonZero.create = function (value0) {
        return function (value1) {
            return new EndSlotLessThanSlotOrModNonZero(value0, value1);
        };
    };
    return EndSlotLessThanSlotOrModNonZero;
})();
var CannotGetBigIntFromNumber$prime = (function () {
    function CannotGetBigIntFromNumber$prime() {

    };
    CannotGetBigIntFromNumber$prime.value = new CannotGetBigIntFromNumber$prime();
    return CannotGetBigIntFromNumber$prime;
})();
var CannotGetBigNumFromBigInt$prime = (function () {
    function CannotGetBigNumFromBigInt$prime() {

    };
    CannotGetBigNumFromBigInt$prime.value = new CannotGetBigNumFromBigInt$prime();
    return CannotGetBigNumFromBigInt$prime;
})();
var PosixTimeToSlotError$prime = (function () {
    function PosixTimeToSlotError$prime(value0) {
        this.value0 = value0;
    };
    PosixTimeToSlotError$prime.create = function (value0) {
        return new PosixTimeToSlotError$prime(value0);
    };
    return PosixTimeToSlotError$prime;
})();
var SlotToPosixTimeError$prime = (function () {
    function SlotToPosixTimeError$prime(value0) {
        this.value0 = value0;
    };
    SlotToPosixTimeError$prime.create = function (value0) {
        return new SlotToPosixTimeError$prime(value0);
    };
    return SlotToPosixTimeError$prime;
})();
var toDataPOSIXTime = ToData.toDataBigInt;
var showRelTime = {
    show: function (v) {
        return Helpers.showWithParens(Data_BigInt.showBigInt)("RelTime")(v);
    }
};
var showRelSlot = {
    show: function (v) {
        return Helpers.showWithParens(Data_BigInt.showBigInt)("RelSlot")(v);
    }
};
var showPOSIXTime = {
    show: function (v) {
        return Helpers.showWithParens(Data_BigInt.showBigInt)("POSIXTime")(v);
    }
};
var showModTime = {
    show: function (v) {
        return Helpers.showWithParens(Data_BigInt.showBigInt)("ModTime")(v);
    }
};
var showAbsTime = {
    show: function (v) {
        return Helpers.showWithParens(Data_BigInt.showBigInt)("AbsTime")(v);
    }
};
var semiringPOSIXTime = Data_BigInt.semiringBigInt;
var ordRelTime = Data_BigInt.ordBigInt;
var ordRelSlot = Data_BigInt.ordBigInt;
var ordPOSIXTime = Data_BigInt.ordBigInt;
var ordModTime = Data_BigInt.ordBigInt;
var ordAbsTime = Data_BigInt.ordBigInt;
var newtypeRelTime_ = {
    Coercible0: function () {
        return undefined;
    }
};
var newtypeRelSlot_ = {
    Coercible0: function () {
        return undefined;
    }
};
var newtypePOSIXTime_ = {
    Coercible0: function () {
        return undefined;
    }
};
var newtypeOnchainPOSIXTimeRa = {
    Coercible0: function () {
        return undefined;
    }
};
var newtypeModTime_ = {
    Coercible0: function () {
        return undefined;
    }
};
var newtypeInterval_ = {
    Coercible0: function () {
        return undefined;
    }
};
var newtypeHaskInterval_ = {
    Coercible0: function () {
        return undefined;
    }
};
var newtypeAbsTime_ = {
    Coercible0: function () {
        return undefined;
    }
};
var hasPlutusSchemaUpperBound = {};
var hasPlutusSchemaLowerBound = {};
var hasPlutusSchemaInterval$34I = {};
var hasPlutusSchemaExtended$34N = {};
var genericUpperBound_ = {
    to: function (x) {
        return new UpperBound(x.value0, x.value1);
    },
    from: function (x) {
        return new Data_Generic_Rep.Product(x.value0, x.value1);
    }
};
var genericToOnChainPosixTime = {
    to: function (x) {
        if (x instanceof Data_Generic_Rep.Inl) {
            return new PosixTimeToSlotError$prime(x.value0);
        };
        if (x instanceof Data_Generic_Rep.Inr) {
            return new SlotToPosixTimeError$prime(x.value0);
        };
        throw new Error("Failed pattern match at Types.Interval (line 1030, column 1 - line 1030, column 55): " + [ x.constructor.name ]);
    },
    from: function (x) {
        if (x instanceof PosixTimeToSlotError$prime) {
            return new Data_Generic_Rep.Inl(x.value0);
        };
        if (x instanceof SlotToPosixTimeError$prime) {
            return new Data_Generic_Rep.Inr(x.value0);
        };
        throw new Error("Failed pattern match at Types.Interval (line 1030, column 1 - line 1030, column 55): " + [ x.constructor.name ]);
    }
};
var genericSlotToPosixTimeErr = {
    to: function (x) {
        if (x instanceof Data_Generic_Rep.Inl) {
            return new CannotFindSlotInEraSummaries(x.value0);
        };
        if (x instanceof Data_Generic_Rep.Inr && x.value0 instanceof Data_Generic_Rep.Inl) {
            return new StartingSlotGreaterThanSlot(x.value0.value0);
        };
        if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0 instanceof Data_Generic_Rep.Inl)) {
            return new EndTimeLessThanTime(x.value0.value0.value0);
        };
        if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0 instanceof Data_Generic_Rep.Inr)) {
            return CannotGetBigIntFromNumber.value;
        };
        throw new Error("Failed pattern match at Types.Interval (line 504, column 1 - line 504, column 47): " + [ x.constructor.name ]);
    },
    from: function (x) {
        if (x instanceof CannotFindSlotInEraSummaries) {
            return new Data_Generic_Rep.Inl(x.value0);
        };
        if (x instanceof StartingSlotGreaterThanSlot) {
            return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(x.value0));
        };
        if (x instanceof EndTimeLessThanTime) {
            return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(x.value0)));
        };
        if (x instanceof CannotGetBigIntFromNumber) {
            return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(Data_Generic_Rep.NoArguments.value)));
        };
        throw new Error("Failed pattern match at Types.Interval (line 504, column 1 - line 504, column 47): " + [ x.constructor.name ]);
    }
};
var showSlotToPosixTimeError = {
    show: Data_Show_Generic.genericShow(genericSlotToPosixTimeErr)(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Serialization_Address.showSlot))({
        reflectSymbol: function () {
            return "CannotFindSlotInEraSummaries";
        }
    }))(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Serialization_Address.showSlot))({
        reflectSymbol: function () {
            return "StartingSlotGreaterThanSlot";
        }
    }))(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Data_Show.showNumber))({
        reflectSymbol: function () {
            return "EndTimeLessThanTime";
        }
    }))(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsNoArguments)({
        reflectSymbol: function () {
            return "CannotGetBigIntFromNumber";
        }
    })))))
};
var genericRelTime_ = {
    to: function (x) {
        return x;
    },
    from: function (x) {
        return x;
    }
};
var genericRelSlot_ = {
    to: function (x) {
        return x;
    },
    from: function (x) {
        return x;
    }
};
var genericPosixTimeToSlotErr = {
    to: function (x) {
        if (x instanceof Data_Generic_Rep.Inl) {
            return new CannotFindTimeInEraSummaries(x.value0);
        };
        if (x instanceof Data_Generic_Rep.Inr && x.value0 instanceof Data_Generic_Rep.Inl) {
            return new PosixTimeBeforeSystemStart(x.value0.value0);
        };
        if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0 instanceof Data_Generic_Rep.Inl)) {
            return new StartTimeGreaterThanTime(x.value0.value0.value0);
        };
        if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0 instanceof Data_Generic_Rep.Inl))) {
            return new EndSlotLessThanSlotOrModNonZero(x.value0.value0.value0.value0.value0, x.value0.value0.value0.value0.value1);
        };
        if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl)))) {
            return CannotGetBigIntFromNumber$prime.value;
        };
        if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr)))) {
            return CannotGetBigNumFromBigInt$prime.value;
        };
        throw new Error("Failed pattern match at Types.Interval (line 741, column 1 - line 741, column 47): " + [ x.constructor.name ]);
    },
    from: function (x) {
        if (x instanceof CannotFindTimeInEraSummaries) {
            return new Data_Generic_Rep.Inl(x.value0);
        };
        if (x instanceof PosixTimeBeforeSystemStart) {
            return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(x.value0));
        };
        if (x instanceof StartTimeGreaterThanTime) {
            return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(x.value0)));
        };
        if (x instanceof EndSlotLessThanSlotOrModNonZero) {
            return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(new Data_Generic_Rep.Product(x.value0, x.value1)))));
        };
        if (x instanceof CannotGetBigIntFromNumber$prime) {
            return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value)))));
        };
        if (x instanceof CannotGetBigNumFromBigInt$prime) {
            return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(Data_Generic_Rep.NoArguments.value)))));
        };
        throw new Error("Failed pattern match at Types.Interval (line 741, column 1 - line 741, column 47): " + [ x.constructor.name ]);
    }
};
var showPosixTimeToSlotError = {
    show: Data_Show_Generic.genericShow(genericPosixTimeToSlotErr)(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(showAbsTime))({
        reflectSymbol: function () {
            return "CannotFindTimeInEraSummaries";
        }
    }))(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(showPOSIXTime))({
        reflectSymbol: function () {
            return "PosixTimeBeforeSystemStart";
        }
    }))(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(showAbsTime))({
        reflectSymbol: function () {
            return "StartTimeGreaterThanTime";
        }
    }))(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsProduct(Data_Show_Generic.genericShowArgsArgument(Serialization_Address.showSlot))(Data_Show_Generic.genericShowArgsArgument(showModTime)))({
        reflectSymbol: function () {
            return "EndSlotLessThanSlotOrModNonZero";
        }
    }))(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsNoArguments)({
        reflectSymbol: function () {
            return "CannotGetBigIntFromNumber'";
        }
    }))(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsNoArguments)({
        reflectSymbol: function () {
            return "CannotGetBigNumFromBigInt'";
        }
    })))))))
};
var showToOnChainPosixTimeRan = {
    show: Data_Show_Generic.genericShow(genericToOnChainPosixTime)(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(showPosixTimeToSlotError))({
        reflectSymbol: function () {
            return "PosixTimeToSlotError'";
        }
    }))(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(showSlotToPosixTimeError))({
        reflectSymbol: function () {
            return "SlotToPosixTimeError'";
        }
    })))
};
var genericPOSIXTime_ = {
    to: function (x) {
        return x;
    },
    from: function (x) {
        return x;
    }
};
var genericOnchainPOSIXTimeRa = {
    to: function (x) {
        return x;
    },
    from: function (x) {
        return x;
    }
};
var genericModTime_ = {
    to: function (x) {
        return x;
    },
    from: function (x) {
        return x;
    }
};
var genericLowerBound_ = {
    to: function (x) {
        return new LowerBound(x.value0, x.value1);
    },
    from: function (x) {
        return new Data_Generic_Rep.Product(x.value0, x.value1);
    }
};
var genericInterval_ = {
    to: function (x) {
        return x;
    },
    from: function (x) {
        return x;
    }
};
var genericHaskInterval_ = {
    to: function (x) {
        return x;
    },
    from: function (x) {
        return x;
    }
};
var genericExtended_ = {
    to: function (x) {
        if (x instanceof Data_Generic_Rep.Inl) {
            return NegInf.value;
        };
        if (x instanceof Data_Generic_Rep.Inr && x.value0 instanceof Data_Generic_Rep.Inl) {
            return new Finite(x.value0.value0);
        };
        if (x instanceof Data_Generic_Rep.Inr && x.value0 instanceof Data_Generic_Rep.Inr) {
            return PosInf.value;
        };
        throw new Error("Failed pattern match at Types.Interval (line 162, column 1 - line 162, column 39): " + [ x.constructor.name ]);
    },
    from: function (x) {
        if (x instanceof NegInf) {
            return new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value);
        };
        if (x instanceof Finite) {
            return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(x.value0));
        };
        if (x instanceof PosInf) {
            return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(Data_Generic_Rep.NoArguments.value));
        };
        throw new Error("Failed pattern match at Types.Interval (line 162, column 1 - line 162, column 39): " + [ x.constructor.name ]);
    }
};
var showExtended = function (dictShow) {
    return {
        show: Data_Show_Generic.genericShow(genericExtended_)(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsNoArguments)({
            reflectSymbol: function () {
                return "NegInf";
            }
        }))(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(dictShow))({
            reflectSymbol: function () {
                return "Finite";
            }
        }))(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsNoArguments)({
            reflectSymbol: function () {
                return "PosInf";
            }
        }))))
    };
};
var showLowerBound = function (dictShow) {
    return {
        show: Data_Show_Generic.genericShow(genericLowerBound_)(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsProduct(Data_Show_Generic.genericShowArgsArgument(showExtended(dictShow)))(Data_Show_Generic.genericShowArgsArgument(Data_Show.showBoolean)))({
            reflectSymbol: function () {
                return "LowerBound";
            }
        }))
    };
};
var showUpperBound = function (dictShow) {
    return {
        show: Data_Show_Generic.genericShow(genericUpperBound_)(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsProduct(Data_Show_Generic.genericShowArgsArgument(showExtended(dictShow)))(Data_Show_Generic.genericShowArgsArgument(Data_Show.showBoolean)))({
            reflectSymbol: function () {
                return "UpperBound";
            }
        }))
    };
};
var showInterval = function (dictShow) {
    return {
        show: Data_Show_Generic.genericShow(genericInterval_)(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
            reflectSymbol: function () {
                return "from";
            }
        })(Data_Show.showRecordFieldsCons({
            reflectSymbol: function () {
                return "to";
            }
        })(Data_Show.showRecordFieldsNil)(showUpperBound(dictShow)))(showLowerBound(dictShow)))))({
            reflectSymbol: function () {
                return "Interval";
            }
        }))
    };
};
var showOnchainPOSIXTimeRange = {
    show: Data_Show_Generic.genericShow(genericOnchainPOSIXTimeRa)(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(showInterval(showPOSIXTime)))({
        reflectSymbol: function () {
            return "OnchainPOSIXTimeRange";
        }
    }))
};
var toDataExtended = function (dictToData) {
    return {
        toData: ToData.genericToData(genericExtended_)(ToData.toDataWithSchemaSum(ToData.toDataWithSchemaConstruct({
            reflectSymbol: function () {
                return "NegInf";
            }
        })(ToData.toDataArgsNoArguments({
            reflectSymbol: function () {
                return "NegInf";
            }
        }))()()(TypeLevel_RowList_Unordered_Indexed.getIndexWithLabelConsI1()()({
            reflectSymbol: function () {
                return "NegInf";
            }
        })(TypeLevel_Nat.knownNatZ))(TypeLevel_Nat.knownNatZ))(ToData.toDataWithSchemaSum(ToData.toDataWithSchemaConstruct({
            reflectSymbol: function () {
                return "Finite";
            }
        })(ToData.toDataArgsArgument(dictToData)({
            reflectSymbol: function () {
                return "Finite";
            }
        }))()()(TypeLevel_RowList_Unordered_Indexed.getIndexWithLabelConsI(TypeLevel_RowList_Unordered_Indexed.getIndexWithLabelConsI1()()({
            reflectSymbol: function () {
                return "Finite";
            }
        })(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatZ)))()()({
            reflectSymbol: function () {
                return "Finite";
            }
        })(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatZ)))(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatZ)))(ToData.toDataWithSchemaConstruct({
            reflectSymbol: function () {
                return "PosInf";
            }
        })(ToData.toDataArgsNoArguments({
            reflectSymbol: function () {
                return "PosInf";
            }
        }))()()(TypeLevel_RowList_Unordered_Indexed.getIndexWithLabelConsI(TypeLevel_RowList_Unordered_Indexed.getIndexWithLabelConsI(TypeLevel_RowList_Unordered_Indexed.getIndexWithLabelConsI1()()({
            reflectSymbol: function () {
                return "PosInf";
            }
        })(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatZ))))()()({
            reflectSymbol: function () {
                return "PosInf";
            }
        })(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatZ))))()()({
            reflectSymbol: function () {
                return "PosInf";
            }
        })(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatZ))))(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatZ))))))
    };
};
var toDataLowerBound = function (dictToData) {
    return {
        toData: ToData.genericToData(genericLowerBound_)(ToData.toDataWithSchemaConstruct({
            reflectSymbol: function () {
                return "LowerBound";
            }
        })(ToData.toDataArgsProduct(ToData.toDataArgsArgument(toDataExtended(dictToData))({
            reflectSymbol: function () {
                return "LowerBound";
            }
        }))(ToData.toDataArgsArgument(ToData.toDataBoolean)({
            reflectSymbol: function () {
                return "LowerBound";
            }
        })))()()(TypeLevel_RowList_Unordered_Indexed.getIndexWithLabelConsI1()()({
            reflectSymbol: function () {
                return "LowerBound";
            }
        })(TypeLevel_Nat.knownNatZ))(TypeLevel_Nat.knownNatZ))
    };
};
var toDataUpperBound = function (dictToData) {
    return {
        toData: ToData.genericToData(genericUpperBound_)(ToData.toDataWithSchemaConstruct({
            reflectSymbol: function () {
                return "UpperBound";
            }
        })(ToData.toDataArgsProduct(ToData.toDataArgsArgument(toDataExtended(dictToData))({
            reflectSymbol: function () {
                return "UpperBound";
            }
        }))(ToData.toDataArgsArgument(ToData.toDataBoolean)({
            reflectSymbol: function () {
                return "UpperBound";
            }
        })))()()(TypeLevel_RowList_Unordered_Indexed.getIndexWithLabelConsI1()()({
            reflectSymbol: function () {
                return "UpperBound";
            }
        })(TypeLevel_Nat.knownNatZ))(TypeLevel_Nat.knownNatZ))
    };
};
var toDataInterval = function (dictToData) {
    return {
        toData: ToData.genericToData(genericInterval_)(ToData.toDataWithSchemaConstruct({
            reflectSymbol: function () {
                return "Interval";
            }
        })(ToData.toDataArgsArgumentRecord(ToData.toDataArgsRecord({
            reflectSymbol: function () {
                return "Interval";
            }
        })(ToData.toDataArgsRL(ToData.toDataArgsRLHelperCons(toDataLowerBound(dictToData))(ToData.toDataArgsRLHelperCons(toDataUpperBound(dictToData))(ToData.toDataArgsRLHelperNilRow)()()()({
            reflectSymbol: function () {
                return "to";
            }
        })({
            reflectSymbol: function () {
                return "Interval";
            }
        })()()()()(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatZ)))()()()({
            reflectSymbol: function () {
                return "from";
            }
        })({
            reflectSymbol: function () {
                return "Interval";
            }
        })()()()()(TypeLevel_Nat.knownNatZ)))()))()()(TypeLevel_RowList_Unordered_Indexed.getIndexWithLabelConsI1()()({
            reflectSymbol: function () {
                return "Interval";
            }
        })(TypeLevel_Nat.knownNatZ))(TypeLevel_Nat.knownNatZ))
    };
};
var toDataOnchainPOSIXTimeRan = toDataInterval(toDataPOSIXTime);
var genericAbsTime_ = {
    to: function (x) {
        return x;
    },
    from: function (x) {
        return x;
    }
};
var functorExtended = {
    map: function (f) {
        return function (m) {
            if (m instanceof NegInf) {
                return NegInf.value;
            };
            if (m instanceof Finite) {
                return new Finite(f(m.value0));
            };
            if (m instanceof PosInf) {
                return PosInf.value;
            };
            throw new Error("Failed pattern match at Types.Interval (line 166, column 1 - line 166, column 33): " + [ m.constructor.name ]);
        };
    }
};
var functorLowerBound = {
    map: function (f) {
        return function (m) {
            return new LowerBound(Data_Functor.map(functorExtended)(f)(m.value0), m.value1);
        };
    }
};
var functorUpperBound = {
    map: function (f) {
        return function (m) {
            return new UpperBound(Data_Functor.map(functorExtended)(f)(m.value0), m.value1);
        };
    }
};
var functorHaskInterval = {
    map: function (f) {
        return function (m) {
            return {
                ivFrom: Data_Functor.map(functorLowerBound)(f)(m.ivFrom),
                ivTo: Data_Functor.map(functorUpperBound)(f)(m.ivTo)
            };
        };
    }
};
var functorInterval = {
    map: function (f) {
        return function (m) {
            return {
                from: Data_Functor.map(functorLowerBound)(f)(m.from),
                to: Data_Functor.map(functorUpperBound)(f)(m.to)
            };
        };
    }
};
var fromDataPOSIXTime = FromData.fromDataBigInt;
var fromDataExtended = function (dictFromData) {
    return {
        fromData: FromData.genericFromData(genericExtended_)(FromData.fromDataWithSchemaSum(FromData.fromDataWithSchemaConstru({
            reflectSymbol: function () {
                return "NegInf";
            }
        })()()(TypeLevel_RowList_Unordered_Indexed.getIndexWithLabelConsI1()()({
            reflectSymbol: function () {
                return "NegInf";
            }
        })(TypeLevel_Nat.knownNatZ))(FromData.fromDataArgsNoArguments)(TypeLevel_Nat.knownNatZ))(FromData.fromDataWithSchemaSum(FromData.fromDataWithSchemaConstru({
            reflectSymbol: function () {
                return "Finite";
            }
        })()()(TypeLevel_RowList_Unordered_Indexed.getIndexWithLabelConsI(TypeLevel_RowList_Unordered_Indexed.getIndexWithLabelConsI1()()({
            reflectSymbol: function () {
                return "Finite";
            }
        })(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatZ)))()()({
            reflectSymbol: function () {
                return "Finite";
            }
        })(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatZ)))(FromData.fromDataArgsArgument(dictFromData))(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatZ)))(FromData.fromDataWithSchemaConstru({
            reflectSymbol: function () {
                return "PosInf";
            }
        })()()(TypeLevel_RowList_Unordered_Indexed.getIndexWithLabelConsI(TypeLevel_RowList_Unordered_Indexed.getIndexWithLabelConsI(TypeLevel_RowList_Unordered_Indexed.getIndexWithLabelConsI1()()({
            reflectSymbol: function () {
                return "PosInf";
            }
        })(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatZ))))()()({
            reflectSymbol: function () {
                return "PosInf";
            }
        })(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatZ))))()()({
            reflectSymbol: function () {
                return "PosInf";
            }
        })(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatZ))))(FromData.fromDataArgsNoArguments)(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatZ))))))
    };
};
var fromDataLowerBound = function (dictFromData) {
    return {
        fromData: FromData.genericFromData(genericLowerBound_)(FromData.fromDataWithSchemaConstru({
            reflectSymbol: function () {
                return "LowerBound";
            }
        })()()(TypeLevel_RowList_Unordered_Indexed.getIndexWithLabelConsI1()()({
            reflectSymbol: function () {
                return "LowerBound";
            }
        })(TypeLevel_Nat.knownNatZ))(FromData.fromDataArgsProduct(FromData.fromDataArgsArgument(fromDataExtended(dictFromData)))(FromData.fromDataArgsArgument(FromData.fromDataBoolean)))(TypeLevel_Nat.knownNatZ))
    };
};
var fromDataUpperBound = function (dictFromData) {
    return {
        fromData: FromData.genericFromData(genericUpperBound_)(FromData.fromDataWithSchemaConstru({
            reflectSymbol: function () {
                return "UpperBound";
            }
        })()()(TypeLevel_RowList_Unordered_Indexed.getIndexWithLabelConsI1()()({
            reflectSymbol: function () {
                return "UpperBound";
            }
        })(TypeLevel_Nat.knownNatZ))(FromData.fromDataArgsProduct(FromData.fromDataArgsArgument(fromDataExtended(dictFromData)))(FromData.fromDataArgsArgument(FromData.fromDataBoolean)))(TypeLevel_Nat.knownNatZ))
    };
};
var fromDataInterval = function (dictFromData) {
    return {
        fromData: function (i) {
            return FromData.genericFromData(genericInterval_)(FromData.fromDataWithSchemaConstru({
                reflectSymbol: function () {
                    return "Interval";
                }
            })()()(TypeLevel_RowList_Unordered_Indexed.getIndexWithLabelConsI1()()({
                reflectSymbol: function () {
                    return "Interval";
                }
            })(TypeLevel_Nat.knownNatZ))(FromData.fromDataArgsArgumentRecor(FromData.fromDataArgsRLCons(fromDataLowerBound(dictFromData))(FromData.fromDataArgsRLCons(fromDataUpperBound(dictFromData))(FromData.fromDataArgsRLNilRow)()()({
                reflectSymbol: function () {
                    return "to";
                }
            }))()()({
                reflectSymbol: function () {
                    return "from";
                }
            }))()()())(TypeLevel_Nat.knownNatZ))(i);
        }
    };
};
var fromDataOnchainPOSIXTimeR = fromDataInterval(fromDataPOSIXTime);
var eqSlotToPosixTimeError = {
    eq: function (x) {
        return function (y) {
            if (x instanceof CannotFindSlotInEraSummaries && y instanceof CannotFindSlotInEraSummaries) {
                return Data_Eq.eq(Serialization_Address.eqSlot)(x.value0)(y.value0);
            };
            if (x instanceof StartingSlotGreaterThanSlot && y instanceof StartingSlotGreaterThanSlot) {
                return Data_Eq.eq(Serialization_Address.eqSlot)(x.value0)(y.value0);
            };
            if (x instanceof EndTimeLessThanTime && y instanceof EndTimeLessThanTime) {
                return x.value0 === y.value0;
            };
            if (x instanceof CannotGetBigIntFromNumber && y instanceof CannotGetBigIntFromNumber) {
                return true;
            };
            return false;
        };
    }
};
var eqRelTime = Data_BigInt.eqBigInt;
var eqRelSlot = Data_BigInt.eqBigInt;
var eqPOSIXTime = Data_BigInt.eqBigInt;
var eqModTime = Data_BigInt.eqBigInt;
var eqExtended = function (dictEq) {
    return {
        eq: function (x) {
            return function (y) {
                if (x instanceof NegInf && y instanceof NegInf) {
                    return true;
                };
                if (x instanceof Finite && y instanceof Finite) {
                    return Data_Eq.eq(dictEq)(x.value0)(y.value0);
                };
                if (x instanceof PosInf && y instanceof PosInf) {
                    return true;
                };
                return false;
            };
        }
    };
};
var eqLowerBound = function (dictEq) {
    return {
        eq: function (x) {
            return function (y) {
                return Data_Eq.eq(eqExtended(dictEq))(x.value0)(y.value0) && x.value1 === y.value1;
            };
        }
    };
};
var eqUpperBound = function (dictEq) {
    return {
        eq: function (x) {
            return function (y) {
                return Data_Eq.eq(eqExtended(dictEq))(x.value0)(y.value0) && x.value1 === y.value1;
            };
        }
    };
};
var eqHaskInterval = function (dictEq) {
    return Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()({
        reflectSymbol: function () {
            return "ivTo";
        }
    })(eqUpperBound(dictEq)))()({
        reflectSymbol: function () {
            return "ivFrom";
        }
    })(eqLowerBound(dictEq)));
};
var eqInterval = function (dictEq) {
    return Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()({
        reflectSymbol: function () {
            return "to";
        }
    })(eqUpperBound(dictEq)))()({
        reflectSymbol: function () {
            return "from";
        }
    })(eqLowerBound(dictEq)));
};
var eqOnchainPOSIXTimeRange = eqInterval(eqPOSIXTime);
var ordExtended = function (dictOrd) {
    return {
        compare: function (x) {
            return function (y) {
                if (x instanceof NegInf && y instanceof NegInf) {
                    return Data_Ordering.EQ.value;
                };
                if (x instanceof NegInf) {
                    return Data_Ordering.LT.value;
                };
                if (y instanceof NegInf) {
                    return Data_Ordering.GT.value;
                };
                if (x instanceof Finite && y instanceof Finite) {
                    return Data_Ord.compare(dictOrd)(x.value0)(y.value0);
                };
                if (x instanceof Finite) {
                    return Data_Ordering.LT.value;
                };
                if (y instanceof Finite) {
                    return Data_Ordering.GT.value;
                };
                if (x instanceof PosInf && y instanceof PosInf) {
                    return Data_Ordering.EQ.value;
                };
                throw new Error("Failed pattern match at Types.Interval (line 165, column 1 - line 165, column 42): " + [ x.constructor.name, y.constructor.name ]);
            };
        },
        Eq0: function () {
            return eqExtended(dictOrd.Eq0());
        }
    };
};
var ordLowerBound = function (dictOrd) {
    return {
        compare: function (v) {
            return function (v1) {
                var v3 = Data_Ord.compare(ordExtended(dictOrd))(v.value0)(v1.value0);
                if (v3 instanceof Data_Ordering.LT) {
                    return Data_Ordering.LT.value;
                };
                if (v3 instanceof Data_Ordering.GT) {
                    return Data_Ordering.GT.value;
                };
                if (v3 instanceof Data_Ordering.EQ) {
                    return Data_Ord.compare(Data_Ord.ordBoolean)(v1.value1)(v.value1);
                };
                throw new Error("Failed pattern match at Types.Interval (line 196, column 53 - line 201, column 28): " + [ v3.constructor.name ]);
            };
        },
        Eq0: function () {
            return eqLowerBound(dictOrd.Eq0());
        }
    };
};
var ordUpperBound = function (dictOrd) {
    return {
        compare: function (x) {
            return function (y) {
                var v = Data_Ord.compare(ordExtended(dictOrd))(x.value0)(y.value0);
                if (v instanceof Data_Ordering.LT) {
                    return Data_Ordering.LT.value;
                };
                if (v instanceof Data_Ordering.GT) {
                    return Data_Ordering.GT.value;
                };
                return Data_Ord.compare(Data_Ord.ordBoolean)(x.value1)(y.value1);
            };
        },
        Eq0: function () {
            return eqUpperBound(dictOrd.Eq0());
        }
    };
};
var eqAbsTime = Data_BigInt.eqBigInt;
var eqPosixTimeToSlotError = {
    eq: function (x) {
        return function (y) {
            if (x instanceof CannotFindTimeInEraSummaries && y instanceof CannotFindTimeInEraSummaries) {
                return Data_Eq.eq(eqAbsTime)(x.value0)(y.value0);
            };
            if (x instanceof PosixTimeBeforeSystemStart && y instanceof PosixTimeBeforeSystemStart) {
                return Data_Eq.eq(eqPOSIXTime)(x.value0)(y.value0);
            };
            if (x instanceof StartTimeGreaterThanTime && y instanceof StartTimeGreaterThanTime) {
                return Data_Eq.eq(eqAbsTime)(x.value0)(y.value0);
            };
            if (x instanceof EndSlotLessThanSlotOrModNonZero && y instanceof EndSlotLessThanSlotOrModNonZero) {
                return Data_Eq.eq(Serialization_Address.eqSlot)(x.value0)(y.value0) && Data_Eq.eq(eqModTime)(x.value1)(y.value1);
            };
            if (x instanceof CannotGetBigIntFromNumber$prime && y instanceof CannotGetBigIntFromNumber$prime) {
                return true;
            };
            if (x instanceof CannotGetBigNumFromBigInt$prime && y instanceof CannotGetBigNumFromBigInt$prime) {
                return true;
            };
            return false;
        };
    }
};
var eqToOnChainPosixTimeRange = {
    eq: function (x) {
        return function (y) {
            if (x instanceof PosixTimeToSlotError$prime && y instanceof PosixTimeToSlotError$prime) {
                return Data_Eq.eq(eqPosixTimeToSlotError)(x.value0)(y.value0);
            };
            if (x instanceof SlotToPosixTimeError$prime && y instanceof SlotToPosixTimeError$prime) {
                return Data_Eq.eq(eqSlotToPosixTimeError)(x.value0)(y.value0);
            };
            return false;
        };
    }
};
var encodeAesonRelTime = Aeson.encodeAesonBigInt;
var encodeAesonRelSlot = Aeson.encodeAesonBigInt;
var encodeAesonPOSIXTime = Aeson.encodeAesonBigInt;
var encodeAesonModTime = Aeson.encodeAesonBigInt;
var encodeAesonExtended = function (dictEncodeAeson) {
    return {
        "encodeAeson'": (function () {
            var $641 = Aeson["encodeAeson'"](Aeson.encodeAesonAeson);
            var $642 = Control_Lazy.defer(Control_Lazy.lazyFn)(Data_Function["const"](function (v) {
                if (v instanceof NegInf) {
                    return Aeson.encodeAeson(Aeson.encodeAesonRecord(Aeson.gEncodeAesonCons(Aeson.encodeAesonString)(Aeson.gEncodeAesonNil)({
                        reflectSymbol: function () {
                            return "tag";
                        }
                    })())())({
                        tag: "NegInf"
                    });
                };
                if (v instanceof Finite) {
                    return Aeson_Encode.encodeTagged("Finite")(v.value0)(Aeson_Encode.value(dictEncodeAeson));
                };
                if (v instanceof PosInf) {
                    return Aeson.encodeAeson(Aeson.encodeAesonRecord(Aeson.gEncodeAesonCons(Aeson.encodeAesonString)(Aeson.gEncodeAesonNil)({
                        reflectSymbol: function () {
                            return "tag";
                        }
                    })())())({
                        tag: "PosInf"
                    });
                };
                throw new Error("Failed pattern match at Types.Interval (line 1095, column 17 - line 1098, column 50): " + [ v.constructor.name ]);
            }));
            return function ($643) {
                return $641($642($643));
            };
        })()
    };
};
var encodeAesonLowerBound = function (dictEncodeAeson) {
    return {
        "encodeAeson'": (function () {
            var $644 = Aeson["encodeAeson'"](Aeson.encodeAesonAeson);
            var $645 = Control_Lazy.defer(Control_Lazy.lazyFn)(Data_Function["const"](Aeson_Encode.encode(Data_Functor_Contravariant.cmap(Data_Op.contravariantOp)(function (v) {
                return new Data_Tuple.Tuple(v.value0, v.value1);
            })(Aeson_Encode.tuple(Aeson_Encode.tupleDivided(Aeson_Encode.toTupleEncoderEncoder)(Aeson_Encode.value(encodeAesonExtended(dictEncodeAeson)))(Aeson_Encode.value(Aeson.encodeAesonBoolean)))))));
            return function ($646) {
                return $644($645($646));
            };
        })()
    };
};
var encodeAesonUpperBound = function (dictEncodeAeson) {
    return {
        "encodeAeson'": (function () {
            var $647 = Aeson["encodeAeson'"](Aeson.encodeAesonAeson);
            var $648 = Control_Lazy.defer(Control_Lazy.lazyFn)(Data_Function["const"](Aeson_Encode.encode(Data_Functor_Contravariant.cmap(Data_Op.contravariantOp)(function (v) {
                return new Data_Tuple.Tuple(v.value0, v.value1);
            })(Aeson_Encode.tuple(Aeson_Encode.tupleDivided(Aeson_Encode.toTupleEncoderEncoder)(Aeson_Encode.value(encodeAesonExtended(dictEncodeAeson)))(Aeson_Encode.value(Aeson.encodeAesonBoolean)))))));
            return function ($649) {
                return $647($648($649));
            };
        })()
    };
};
var encodeAesonHaskInterval = function (dictEncodeAeson) {
    return {
        "encodeAeson'": (function () {
            var $650 = Aeson["encodeAeson'"](Aeson.encodeAesonAeson);
            var $651 = Control_Lazy.defer(Control_Lazy.lazyFn)(Data_Function["const"](Aeson_Encode.encode(Data_Functor_Contravariant.cmap(Data_Op.contravariantOp)(Data_Newtype.unwrap())(Aeson_Encode.record()(Aeson_Encode.rowListEncoderEncoderCons({
                reflectSymbol: function () {
                    return "ivFrom";
                }
            })()()()()(Aeson_Encode.rowListEncoderEncoderCons({
                reflectSymbol: function () {
                    return "ivTo";
                }
            })()()()()(Aeson_Encode.rowListEncoderNil)))({
                ivFrom: Aeson_Encode.value(encodeAesonLowerBound(dictEncodeAeson)),
                ivTo: Aeson_Encode.value(encodeAesonUpperBound(dictEncodeAeson))
            })))));
            return function ($652) {
                return $650($651($652));
            };
        })()
    };
};
var encodeAesonInterval = function (dictEncodeAeson) {
    return {
        "encodeAeson'": function (v) {
            return Aeson["encodeAeson'"](encodeAesonHaskInterval(dictEncodeAeson))({
                ivFrom: v.from,
                ivTo: v.to
            });
        }
    };
};
var encodeAesonAbsTime = Aeson.encodeAesonBigInt;
var decodeAesonRelTime = Aeson.decodeAesonBigInt;
var decodeAesonRelSlot = Aeson.decodeAesonBigInt;
var decodeAesonPOSIXTime = Aeson.decodeAesonBigInt;
var decodeAesonModTime = Aeson.decodeAesonBigInt;
var decodeAesonExtended = function (dictDecodeAeson) {
    return {
        decodeAeson: Control_Lazy.defer(Control_Lazy.lazyFn)(Data_Function["const"](Aeson_Decode.decode(Aeson_Decode.sumType("Extended")(Data_Map_Internal.fromFoldable(Data_Ord.ordString)(Data_Foldable.foldableArray)([ new Data_Tuple.Tuple("NegInf", Control_Applicative.pure(Control_Monad_Reader_Trans.applicativeReaderT(Data_Either.applicativeEither))(NegInf.value)), new Data_Tuple.Tuple("Finite", Aeson_Decode.content(Data_Functor.map(Control_Monad_Reader_Trans.functorReaderT(Data_Either.functorEither))(Finite.create)(Aeson_Decode.value(dictDecodeAeson)))), new Data_Tuple.Tuple("PosInf", Control_Applicative.pure(Control_Monad_Reader_Trans.applicativeReaderT(Data_Either.applicativeEither))(PosInf.value)) ])))))
    };
};
var decodeAesonLowerBound = function (dictDecodeAeson) {
    return {
        decodeAeson: Control_Lazy.defer(Control_Lazy.lazyFn)(Data_Function["const"](Aeson_Decode.decode(Aeson_Decode.tuple(Aeson_Decode.tupleApply(Aeson_Decode.toTupleDecoderDecoder)(Aeson_Decode.tupleMap(Aeson_Decode.toTupleDecoderDecoder)(LowerBound.create)(Aeson_Decode.value(decodeAesonExtended(dictDecodeAeson))))(Aeson_Decode.value(Aeson.decodeAesonBoolean))))))
    };
};
var decodeAesonUpperBound = function (dictDecodeAeson) {
    return {
        decodeAeson: Control_Lazy.defer(Control_Lazy.lazyFn)(Data_Function["const"](Aeson_Decode.decode(Aeson_Decode.tuple(Aeson_Decode.tupleApply(Aeson_Decode.toTupleDecoderDecoder)(Aeson_Decode.tupleMap(Aeson_Decode.toTupleDecoderDecoder)(UpperBound.create)(Aeson_Decode.value(decodeAesonExtended(dictDecodeAeson))))(Aeson_Decode.value(Aeson.decodeAesonBoolean))))))
    };
};
var decodeAesonHaskInterval = function (dictDecodeAeson) {
    return {
        decodeAeson: Control_Lazy.defer(Control_Lazy.lazyFn)(Data_Function["const"](Aeson_Decode.decode(Data_Functor.map(Control_Monad_Reader_Trans.functorReaderT(Data_Either.functorEither))(HaskInterval)(Aeson_Decode.record()(Aeson_Decode.rowListDecoderDecoderCons({
            reflectSymbol: function () {
                return "ivFrom";
            }
        })()()()()(Aeson_Decode.rowListDecoderDecoderCons({
            reflectSymbol: function () {
                return "ivTo";
            }
        })()()()()(Aeson_Decode.rowListDecoderNil)))("Interval")({
            ivFrom: Aeson_Decode.value(decodeAesonLowerBound(dictDecodeAeson)),
            ivTo: Aeson_Decode.value(decodeAesonUpperBound(dictDecodeAeson))
        })))))
    };
};
var decodeAesonInterval = function (dictDecodeAeson) {
    return {
        decodeAeson: function (a) {
            return Control_Bind.bind(Data_Either.bindEither)(Aeson.decodeAeson(decodeAesonHaskInterval(dictDecodeAeson))(a))(function (v) {
                return Control_Applicative.pure(Data_Either.applicativeEither)({
                    from: v.ivFrom,
                    to: v.ivTo
                });
            });
        }
    };
};
var decodeAesonAbsTime = Aeson.decodeAesonBigInt;
var upperBound = function (a) {
    return new UpperBound(new Finite(a), true);
};
var toOnChainPosixTimeRangeErrorStr = "ToOnChainPosixTimeRangeError";
var strictUpperBound = function (a) {
    return new UpperBound(new Finite(a), false);
};
var strictLowerBound = function (a) {
    return new LowerBound(new Finite(a), false);
};
var slotToPosixTimeErrorStr = "slotToPosixTimeError";
var encodeAesonSlotToPosixTim = {
    "encodeAeson'": function (v) {
        if (v instanceof CannotFindSlotInEraSummaries) {
            return Aeson["encodeAeson'"](Aeson.encodeAesonRecord(Aeson.gEncodeAesonCons(Aeson.encodeAesonArray(Serialization_Address.encodeAesonSlot))(Aeson.gEncodeAesonCons(Aeson.encodeAesonString)(Aeson.gEncodeAesonCons(Aeson.encodeAesonString)(Aeson.gEncodeAesonNil)({
                reflectSymbol: function () {
                    return "errorType";
                }
            })())({
                reflectSymbol: function () {
                    return "error";
                }
            })())({
                reflectSymbol: function () {
                    return "args";
                }
            })())())(Helpers.mkErrorRecord(slotToPosixTimeErrorStr)("cannotFindSlotInEraSummaries")([ v.value0 ]));
        };
        if (v instanceof StartingSlotGreaterThanSlot) {
            return Aeson["encodeAeson'"](Aeson.encodeAesonRecord(Aeson.gEncodeAesonCons(Aeson.encodeAesonArray(Serialization_Address.encodeAesonSlot))(Aeson.gEncodeAesonCons(Aeson.encodeAesonString)(Aeson.gEncodeAesonCons(Aeson.encodeAesonString)(Aeson.gEncodeAesonNil)({
                reflectSymbol: function () {
                    return "errorType";
                }
            })())({
                reflectSymbol: function () {
                    return "error";
                }
            })())({
                reflectSymbol: function () {
                    return "args";
                }
            })())())(Helpers.mkErrorRecord(slotToPosixTimeErrorStr)("startingSlotGreaterThanSlot")([ v.value0 ]));
        };
        if (v instanceof EndTimeLessThanTime) {
            return Aeson["encodeAeson'"](Aeson.encodeAesonRecord(Aeson.gEncodeAesonCons(Aeson.encodeAesonArray(Aeson.encodeAesonNumber))(Aeson.gEncodeAesonCons(Aeson.encodeAesonString)(Aeson.gEncodeAesonCons(Aeson.encodeAesonString)(Aeson.gEncodeAesonNil)({
                reflectSymbol: function () {
                    return "errorType";
                }
            })())({
                reflectSymbol: function () {
                    return "error";
                }
            })())({
                reflectSymbol: function () {
                    return "args";
                }
            })())())(Helpers.mkErrorRecord(slotToPosixTimeErrorStr)("endTimeLessThanTime")([ v.value0 ]));
        };
        if (v instanceof CannotGetBigIntFromNumber) {
            return Aeson["encodeAeson'"](Aeson.encodeAesonRecord(Aeson.gEncodeAesonCons(Aeson.encodeAesonAeson)(Aeson.gEncodeAesonCons(Aeson.encodeAesonString)(Aeson.gEncodeAesonCons(Aeson.encodeAesonString)(Aeson.gEncodeAesonNil)({
                reflectSymbol: function () {
                    return "errorType";
                }
            })())({
                reflectSymbol: function () {
                    return "error";
                }
            })())({
                reflectSymbol: function () {
                    return "args";
                }
            })())())(Helpers.mkErrorRecord(slotToPosixTimeErrorStr)("cannotGetBigIntFromNumber")(Aeson.aesonNull));
        };
        throw new Error("Failed pattern match at Types.Interval (line 513, column 1 - line 533, column 16): " + [ v.constructor.name ]);
    }
};
var slotFromRelSlot = function (v) {
    return function (v1) {
        var startSlot = Types_BigNum.toBigIntUnsafe(Data_Newtype.unwrap()((Data_Newtype.unwrap()(v.start)).slot));
        var slot = Data_Semiring.add(Data_BigInt.semiringBigInt)(startSlot)(v1.value0);
        var endSlot = Data_Maybe.maybe(Data_Semiring.add(Data_BigInt.semiringBigInt)(slot)(Data_Semiring.one(Data_BigInt.semiringBigInt)))((function () {
            var $653 = Data_Newtype.unwrap();
            var $654 = Data_Newtype.unwrap();
            return function ($655) {
                return Types_BigNum.toBigIntUnsafe($653((function (v2) {
                    return v2.slot;
                })($654($655))));
            };
        })())(v.end);
        return Control_Bind.bind(Data_Either.bindEither)(Helpers.liftM(Control_Monad_Error_Class.monadErrorEither)(CannotGetBigNumFromBigInt$prime.value)(Types_BigNum.fromBigInt(slot)))(function (bnSlot) {
            return Control_Bind.discard(Control_Bind.discardUnit)(Data_Either.bindEither)(Control_Applicative.unless(Data_Either.applicativeEither)(Data_Ord.lessThan(Data_BigInt.ordBigInt)(slot)(endSlot) || Data_Eq.eq(Data_BigInt.eqBigInt)(slot)(endSlot) && Data_Eq.eq(Data_BigInt.eqBigInt)(v1.value1)(Data_Semiring.zero(Data_BigInt.semiringBigInt)))(Control_Monad_Error_Class.throwError(Control_Monad_Error_Class.monadThrowEither)(new EndSlotLessThanSlotOrModNonZero(Data_Newtype.wrap()(bnSlot), v1.value1))))(function () {
                return Control_Applicative.pure(Data_Either.applicativeEither)(Data_Newtype.wrap()(bnSlot));
            });
        });
    };
};
var relTimeFromAbsTime = function (v) {
    return function (v1) {
        var startTime = Data_Newtype.unwrap()((Data_Newtype.unwrap()(v.start)).time) * QueryM_Ogmios.slotLengthFactor;
        return Control_Bind.discard(Control_Bind.discardUnit)(Data_Either.bindEither)(Control_Applicative.unless(Data_Either.applicativeEither)(startTime <= Data_BigInt.toNumber(v1))(Control_Monad_Error_Class.throwError(Control_Monad_Error_Class.monadThrowEither)(new StartTimeGreaterThanTime(v1))))(function () {
            var relTime = Data_BigInt.toNumber(v1) - startTime;
            return Data_Functor.map(Data_Either.functorEither)(Data_Newtype.wrap())(Data_Either.note(CannotGetBigIntFromNumber$prime.value)(Data_BigInt.fromNumber($$Math.trunc(relTime))));
        });
    };
};
var relSlotFromSlot = function (v) {
    return function (v1) {
        var startSlot = Types_BigNum.toBigIntUnsafe(Data_Newtype.unwrap()((Data_Newtype.unwrap()(v.start)).slot));
        var biSlot = Types_BigNum.toBigIntUnsafe(v1);
        return Control_Bind.discard(Control_Bind.discardUnit)(Data_Either.bindEither)(Control_Applicative.unless(Data_Either.applicativeEither)(Data_Ord.lessThanOrEq(Data_BigInt.ordBigInt)(startSlot)(biSlot))(Control_Monad_Error_Class.throwError(Control_Monad_Error_Class.monadThrowEither)(new StartingSlotGreaterThanSlot(v1))))(function () {
            return Control_Applicative.pure(Data_Either.applicativeEither)(Data_Newtype.wrap()(Data_Ring.sub(Data_BigInt.ringBigInt)(biSlot)(startSlot)));
        });
    };
};
var posixTimeToSlotErrorStr = "posixTimeToSlotError";
var encodeAesonPosixTimeToSlo = {
    "encodeAeson'": function (v) {
        if (v instanceof CannotFindTimeInEraSummaries) {
            return Aeson["encodeAeson'"](Aeson.encodeAesonRecord(Aeson.gEncodeAesonCons(Aeson.encodeAesonArray(encodeAesonAbsTime))(Aeson.gEncodeAesonCons(Aeson.encodeAesonString)(Aeson.gEncodeAesonCons(Aeson.encodeAesonString)(Aeson.gEncodeAesonNil)({
                reflectSymbol: function () {
                    return "errorType";
                }
            })())({
                reflectSymbol: function () {
                    return "error";
                }
            })())({
                reflectSymbol: function () {
                    return "args";
                }
            })())())(Helpers.mkErrorRecord(posixTimeToSlotErrorStr)("cannotFindTimeInEraSummaries")([ v.value0 ]));
        };
        if (v instanceof PosixTimeBeforeSystemStart) {
            return Aeson["encodeAeson'"](Aeson.encodeAesonRecord(Aeson.gEncodeAesonCons(Aeson.encodeAesonArray(encodeAesonPOSIXTime))(Aeson.gEncodeAesonCons(Aeson.encodeAesonString)(Aeson.gEncodeAesonCons(Aeson.encodeAesonString)(Aeson.gEncodeAesonNil)({
                reflectSymbol: function () {
                    return "errorType";
                }
            })())({
                reflectSymbol: function () {
                    return "error";
                }
            })())({
                reflectSymbol: function () {
                    return "args";
                }
            })())())(Helpers.mkErrorRecord(posixTimeToSlotErrorStr)("posixTimeBeforeSystemStart")([ v.value0 ]));
        };
        if (v instanceof StartTimeGreaterThanTime) {
            return Aeson["encodeAeson'"](Aeson.encodeAesonRecord(Aeson.gEncodeAesonCons(Aeson.encodeAesonArray(encodeAesonAbsTime))(Aeson.gEncodeAesonCons(Aeson.encodeAesonString)(Aeson.gEncodeAesonCons(Aeson.encodeAesonString)(Aeson.gEncodeAesonNil)({
                reflectSymbol: function () {
                    return "errorType";
                }
            })())({
                reflectSymbol: function () {
                    return "error";
                }
            })())({
                reflectSymbol: function () {
                    return "args";
                }
            })())())(Helpers.mkErrorRecord(posixTimeToSlotErrorStr)("startTimeGreaterThanTime")([ v.value0 ]));
        };
        if (v instanceof EndSlotLessThanSlotOrModNonZero) {
            return Aeson["encodeAeson'"](Aeson.encodeAesonRecord(Aeson.gEncodeAesonCons(Aeson.encodeAesonArray(Aeson.encodeAesonAeson))(Aeson.gEncodeAesonCons(Aeson.encodeAesonString)(Aeson.gEncodeAesonCons(Aeson.encodeAesonString)(Aeson.gEncodeAesonNil)({
                reflectSymbol: function () {
                    return "errorType";
                }
            })())({
                reflectSymbol: function () {
                    return "error";
                }
            })())({
                reflectSymbol: function () {
                    return "args";
                }
            })())())(Helpers.mkErrorRecord(posixTimeToSlotErrorStr)("endSlotLessThanSlotOrModNonZero")([ Aeson.encodeAeson(Serialization_Address.encodeAesonSlot)(v.value0), Aeson.encodeAeson(encodeAesonModTime)(v.value1) ]));
        };
        if (v instanceof CannotGetBigIntFromNumber$prime) {
            return Aeson["encodeAeson'"](Aeson.encodeAesonRecord(Aeson.gEncodeAesonCons(Aeson.encodeAesonAeson)(Aeson.gEncodeAesonCons(Aeson.encodeAesonString)(Aeson.gEncodeAesonCons(Aeson.encodeAesonString)(Aeson.gEncodeAesonNil)({
                reflectSymbol: function () {
                    return "errorType";
                }
            })())({
                reflectSymbol: function () {
                    return "error";
                }
            })())({
                reflectSymbol: function () {
                    return "args";
                }
            })())())(Helpers.mkErrorRecord(posixTimeToSlotErrorStr)("cannotGetBigIntFromNumber'")(Aeson.aesonNull));
        };
        if (v instanceof CannotGetBigNumFromBigInt$prime) {
            return Aeson["encodeAeson'"](Aeson.encodeAesonRecord(Aeson.gEncodeAesonCons(Aeson.encodeAesonAeson)(Aeson.gEncodeAesonCons(Aeson.encodeAesonString)(Aeson.gEncodeAesonCons(Aeson.encodeAesonString)(Aeson.gEncodeAesonNil)({
                reflectSymbol: function () {
                    return "errorType";
                }
            })())({
                reflectSymbol: function () {
                    return "error";
                }
            })())({
                reflectSymbol: function () {
                    return "args";
                }
            })())())(Helpers.mkErrorRecord(posixTimeToSlotErrorStr)("cannotGetBigNumFromBigInt'")(Aeson.aesonNull));
        };
        throw new Error("Failed pattern match at Types.Interval (line 750, column 1 - line 780, column 16): " + [ v.constructor.name ]);
    }
};
var encodeAesonToOnChainPosix = {
    "encodeAeson'": function (v) {
        if (v instanceof PosixTimeToSlotError$prime) {
            return Aeson["encodeAeson'"](Aeson.encodeAesonRecord(Aeson.gEncodeAesonCons(Aeson.encodeAesonArray(encodeAesonPosixTimeToSlo))(Aeson.gEncodeAesonCons(Aeson.encodeAesonString)(Aeson.gEncodeAesonCons(Aeson.encodeAesonString)(Aeson.gEncodeAesonNil)({
                reflectSymbol: function () {
                    return "errorType";
                }
            })())({
                reflectSymbol: function () {
                    return "error";
                }
            })())({
                reflectSymbol: function () {
                    return "args";
                }
            })())())(Helpers.mkErrorRecord(toOnChainPosixTimeRangeErrorStr)("posixTimeToSlotError'")([ v.value0 ]));
        };
        if (v instanceof SlotToPosixTimeError$prime) {
            return Aeson["encodeAeson'"](Aeson.encodeAesonRecord(Aeson.gEncodeAesonCons(Aeson.encodeAesonArray(encodeAesonSlotToPosixTim))(Aeson.gEncodeAesonCons(Aeson.encodeAesonString)(Aeson.gEncodeAesonCons(Aeson.encodeAesonString)(Aeson.gEncodeAesonNil)({
                reflectSymbol: function () {
                    return "errorType";
                }
            })())({
                reflectSymbol: function () {
                    return "error";
                }
            })())({
                reflectSymbol: function () {
                    return "args";
                }
            })())())(Helpers.mkErrorRecord(toOnChainPosixTimeRangeErrorStr)("slotToPosixTimeError'")([ v.value0 ]));
        };
        throw new Error("Failed pattern match at Types.Interval (line 1113, column 1 - line 1123, column 14): " + [ v.constructor.name ]);
    }
};
var mkInterval = function (from$prime) {
    return function (to$prime) {
        return {
            from: from$prime,
            to: to$prime
        };
    };
};
var never = mkInterval(new LowerBound(PosInf.value, true))(new UpperBound(NegInf.value, true));
var to = function (s) {
    return mkInterval(new LowerBound(NegInf.value, true))(upperBound(s));
};
var maxSlot = Data_Newtype.wrap()(Types_BigNum.maxValue);
var slotRangeToTransactionValidity = function (v) {
    var validityStartInterval = (function () {
        if (v.from.value0 instanceof Finite && v.from.value1) {
            return Control_Applicative.pure(Data_Maybe.applicativeMaybe)(v.from.value0.value0);
        };
        if (v.from.value0 instanceof Finite && !v.from.value1) {
            return Data_Functor.map(Data_Maybe.functorMaybe)(Serialization_Address.Slot)(Types_BigNum.add(v.from.value0.value0)(Types_BigNum.one));
        };
        if (v.from.value0 instanceof NegInf) {
            return Data_Maybe.Nothing.value;
        };
        if (v.from.value0 instanceof PosInf) {
            return Control_Applicative.pure(Data_Maybe.applicativeMaybe)(maxSlot);
        };
        throw new Error("Failed pattern match at Types.Interval (line 1000, column 27 - line 1004, column 30): " + [ v.from.value0.constructor.name, v.from.value1.constructor.name ]);
    })();
    var timeToLive = (function () {
        if (v.to.value0 instanceof Finite && v.to.value1) {
            return Data_Functor.map(Data_Maybe.functorMaybe)(Serialization_Address.Slot)(Types_BigNum.add(v.to.value0.value0)(Types_BigNum.one));
        };
        if (v.to.value0 instanceof Finite && !v.to.value1) {
            return Control_Applicative.pure(Data_Maybe.applicativeMaybe)(v.to.value0.value0);
        };
        if (v.to.value0 instanceof NegInf) {
            return Control_Applicative.pure(Data_Maybe.applicativeMaybe)(Types_BigNum.zero);
        };
        if (v.to.value0 instanceof PosInf) {
            return Data_Maybe.Nothing.value;
        };
        throw new Error("Failed pattern match at Types.Interval (line 1010, column 16 - line 1014, column 25): " + [ v.to.value0.constructor.name, v.to.value1.constructor.name ]);
    })();
    return {
        validityStartInterval: validityStartInterval,
        timeToLive: timeToLive
    };
};
var lowerBound = function (a) {
    return new LowerBound(new Finite(a), true);
};
var isEmpty$prime = function (dictEnum) {
    return function (v) {
        var openInterval = !v.from.value1 && !v.to.value1;
        var checkEnds = function (v3) {
            return function (v4) {
                if (v3 instanceof Finite && v4 instanceof Finite) {
                    return Data_Eq.eq(Data_Ordering.eqOrdering)(Data_Ord.compare(Data_Maybe.ordMaybe(dictEnum.Ord0()))(Data_Enum.succ(dictEnum)(v3.value0))(new Data_Maybe.Just(v4.value0)))(Data_Ordering.EQ.value);
                };
                return false;
            };
        };
        var v3 = Data_Ord.compare(ordExtended(dictEnum.Ord0()))(v.from.value0)(v.to.value0);
        if (v3 instanceof Data_Ordering.LT) {
            if (openInterval) {
                return checkEnds(v.from.value0)(v.to.value0);
            };
            return false;
        };
        if (v3 instanceof Data_Ordering.GT) {
            return true;
        };
        if (v3 instanceof Data_Ordering.EQ) {
            return !(v.from.value1 && v.to.value1);
        };
        throw new Error("Failed pattern match at Types.Interval (line 405, column 3 - line 408, column 27): " + [ v3.constructor.name ]);
    };
};
var isEmpty = function (dictOrd) {
    return function (dictSemiring) {
        return function (v) {
            var openInterval = !v.from.value1 && !v.to.value1;
            var checkEnds = function (v3) {
                return function (v4) {
                    if (v3 instanceof Finite && v4 instanceof Finite) {
                        return Data_Eq.eq(Data_Ordering.eqOrdering)(Data_Ord.compare(dictOrd)(Data_Semiring.add(dictSemiring)(v3.value0)(Data_Semiring.one(dictSemiring)))(v4.value0))(Data_Ordering.EQ.value);
                    };
                    return false;
                };
            };
            var v3 = Data_Ord.compare(ordExtended(dictOrd))(v.from.value0)(v.to.value0);
            if (v3 instanceof Data_Ordering.LT) {
                if (openInterval) {
                    return checkEnds(v.from.value0)(v.to.value0);
                };
                return false;
            };
            if (v3 instanceof Data_Ordering.GT) {
                return true;
            };
            if (v3 instanceof Data_Ordering.EQ) {
                return !(v.from.value1 && v.to.value1);
            };
            throw new Error("Failed pattern match at Types.Interval (line 425, column 3 - line 428, column 27): " + [ v3.constructor.name ]);
        };
    };
};
var interval = function (s) {
    return function (s$prime) {
        return mkInterval(lowerBound(s))(upperBound(s$prime));
    };
};
var singleton = function (s) {
    return interval(s)(s);
};
var intersection = function (dictOrd) {
    return function (v) {
        return function (v1) {
            return mkInterval(Data_Ord.max(ordLowerBound(dictOrd))(v.from)(v1.from))(Data_Ord.min(ordUpperBound(dictOrd))(v.to)(v1.to));
        };
    };
};
var overlaps = function (dictOrd) {
    return function (dictSemiring) {
        return function (l) {
            return function (r) {
                return !isEmpty(dictOrd)(dictSemiring)(intersection(dictOrd)(l)(r));
            };
        };
    };
};
var overlaps$prime = function (dictEnum) {
    return function (l) {
        return function (r) {
            return !isEmpty$prime(dictEnum)(intersection(dictEnum.Ord0())(l)(r));
        };
    };
};
var meetSemilatticeInterval = function (dictOrd) {
    return {
        meet: intersection(dictOrd)
    };
};
var meetSemilatticeOnchainPOS = meetSemilatticeInterval(ordPOSIXTime);
var hull = function (dictOrd) {
    return function (v) {
        return function (v1) {
            return mkInterval(Data_Ord.min(ordLowerBound(dictOrd))(v.from)(v1.from))(Data_Ord.max(ordUpperBound(dictOrd))(v.to)(v1.to));
        };
    };
};
var joinSemilatticeInterval = function (dictOrd) {
    return {
        join: hull(dictOrd)
    };
};
var boundedJoinSemilatticeInt = function (dictOrd) {
    return {
        bottom: never,
        JoinSemilattice0: function () {
            return joinSemilatticeInterval(dictOrd);
        }
    };
};
var boundedJoinSemilatticeOnc = boundedJoinSemilatticeInt(ordPOSIXTime);
var joinSemilatticeOnchainPOS = joinSemilatticeInterval(ordPOSIXTime);
var getSlotLength = function (v) {
    return Data_Newtype.unwrap()((Data_Newtype.unwrap()(v.parameters)).slotLength);
};
var relSlotFromRelTime = function (eraSummary) {
    return function (v) {
        var slotLength = getSlotLength(eraSummary);
        var relSlot = Data_Functor.map(Data_Maybe.functorMaybe)(Data_Newtype.wrap())(Data_BigInt.fromNumber($$Math.trunc(Data_BigInt.toNumber(v) / slotLength)));
        var modTime = Data_Functor.map(Data_Maybe.functorMaybe)(Data_Newtype.wrap())(Data_BigInt.fromNumber($$Math.remainder(Data_BigInt.toNumber(v))(slotLength)));
        return Control_Apply.apply(Data_Maybe.applyMaybe)(Data_Functor.map(Data_Maybe.functorMaybe)(Data_Tuple.Tuple.create)(relSlot))(modTime);
    };
};
var relTimeFromRelSlot = function (eraSummary) {
    return function (v) {
        var slotLength = getSlotLength(eraSummary);
        return Data_Functor.map(Data_Maybe.functorMaybe)(Data_Newtype.wrap())(Data_BigInt.fromNumber(Data_BigInt.toNumber(v) * slotLength));
    };
};
var from = function (s) {
    return mkInterval(lowerBound(s))(new UpperBound(PosInf.value, true));
};
var findTimeEraSummary = function (v) {
    return function (v1) {
        var pred = function (v2) {
            var numberAt = Data_BigInt.toNumber(v1);
            return Data_Newtype.unwrap()((Data_Newtype.unwrap()(v2.start)).time) * QueryM_Ogmios.slotLengthFactor <= numberAt && Data_Maybe.maybe(true)((function () {
                var $656 = Data_Ord.lessThan(Data_Ord.ordNumber)(numberAt);
                var $657 = Data_Semiring.mul(Data_Semiring.semiringNumber)(QueryM_Ogmios.slotLengthFactor);
                var $658 = Data_Newtype.unwrap();
                var $659 = Data_Newtype.unwrap();
                return function ($660) {
                    return $656($657($658((function (v3) {
                        return v3.time;
                    })($659($660)))));
                };
            })())(v2.end);
        };
        return Data_Either.note(new CannotFindTimeInEraSummaries(v1))(Data_Array.find(pred)(v));
    };
};
var posixTimeToSlot = function (eraSummaries) {
    return function (sysStart) {
        return function (v) {
            return Control_Monad_Except_Trans.runExceptT(Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Effect.monadEffect))(Effect_Class.liftEffect(Control_Monad_Except_Trans.monadEffectExceptT(Effect_Class.monadEffectEffect))(Data_JSDate.parse(Data_Newtype.unwrap()(sysStart))))(function (sysStartD) {
                return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Effect.monadEffect))(Helpers.liftM(Control_Monad_Except_Trans.monadErrorExceptT(Effect.monadEffect))(CannotGetBigIntFromNumber$prime.value)(Data_BigInt.fromNumber(Data_JSDate.getTime(sysStartD))))(function (sysStartPosix) {
                    return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Except_Trans.bindExceptT(Effect.monadEffect))(Control_Applicative.unless(Control_Monad_Except_Trans.applicativeExceptT(Effect.monadEffect))(Data_Ord.lessThanOrEq(Data_BigInt.ordBigInt)(sysStartPosix)(v))(Control_Monad_Error_Class.throwError(Control_Monad_Except_Trans.monadThrowExceptT(Effect.monadEffect))(new PosixTimeBeforeSystemStart(v))))(function () {
                        var absTime = Data_Newtype.wrap()(Data_Ring.sub(Data_BigInt.ringBigInt)(v)(sysStartPosix));
                        return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Effect.monadEffect))(Helpers.liftEither(Control_Monad_Except_Trans.monadErrorExceptT(Effect.monadEffect))(findTimeEraSummary(eraSummaries)(absTime)))(function (currentEra) {
                            return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Effect.monadEffect))(Helpers.liftEither(Control_Monad_Except_Trans.monadErrorExceptT(Effect.monadEffect))(relTimeFromAbsTime(currentEra)(absTime)))(function (relTime) {
                                return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Effect.monadEffect))(Helpers.liftM(Control_Monad_Except_Trans.monadErrorExceptT(Effect.monadEffect))(CannotGetBigIntFromNumber$prime.value)(relSlotFromRelTime(currentEra)(relTime)))(function (relSlotMod) {
                                    return Helpers.liftEither(Control_Monad_Except_Trans.monadErrorExceptT(Effect.monadEffect))(slotFromRelSlot(currentEra)(relSlotMod));
                                });
                            });
                        });
                    });
                });
            }));
        };
    };
};
var posixTimeRangeToSlotRange = function (eraSummaries) {
    return function (sysStart) {
        return function (v) {
            var convertBounds = function (v1) {
                if (v1 instanceof Finite) {
                    return Data_Functor.mapFlipped(Effect.functorEffect)(posixTimeToSlot(eraSummaries)(sysStart)(v1.value0))(Data_Functor.map(Data_Either.functorEither)(Finite.create));
                };
                if (v1 instanceof NegInf) {
                    return Control_Applicative.pure(Effect.applicativeEffect)(new Data_Either.Right(NegInf.value));
                };
                if (v1 instanceof PosInf) {
                    return Control_Applicative.pure(Effect.applicativeEffect)(new Data_Either.Right(PosInf.value));
                };
                throw new Error("Failed pattern match at Types.Interval (line 946, column 3 - line 948, column 60): " + [ v1.constructor.name ]);
            };
            return Control_Monad_Except_Trans.runExceptT(Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Effect.monadEffect))(Control_Monad_Except_Trans.ExceptT(convertBounds(v.from.value0)))(function (s$prime) {
                return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Effect.monadEffect))(Control_Monad_Except_Trans.ExceptT(convertBounds(v.to.value0)))(function (e$prime) {
                    return Helpers.liftEither(Control_Monad_Except_Trans.monadErrorExceptT(Effect.monadEffect))(Data_Either.Right.create({
                        from: new LowerBound(s$prime, v.from.value1),
                        to: new UpperBound(e$prime, v.to.value1)
                    }));
                });
            }));
        };
    };
};
var posixTimeRangeToTransactionValidity = function (es) {
    return function (ss) {
        var $661 = Data_Functor.map(Effect.functorEffect)(Data_Functor.map(Data_Either.functorEither)(slotRangeToTransactionValidity));
        var $662 = posixTimeRangeToSlotRange(es)(ss);
        return function ($663) {
            return $661($662($663));
        };
    };
};
var findSlotEraSummary = function (v) {
    return function (slot) {
        var biSlot = Types_BigNum.toBigIntUnsafe(Data_Newtype.unwrap()(slot));
        var pred = function (v1) {
            return Data_Ord.lessThanOrEq(Data_BigInt.ordBigInt)(Types_BigNum.toBigIntUnsafe(Data_Newtype.unwrap()((Data_Newtype.unwrap()(v1.start)).slot)))(biSlot) && Data_Maybe.maybe(true)((function () {
                var $664 = Data_Ord.lessThan(Data_BigInt.ordBigInt)(biSlot);
                var $665 = Data_Newtype.unwrap();
                var $666 = Data_Newtype.unwrap();
                return function ($667) {
                    return $664(Types_BigNum.toBigIntUnsafe($665((function (v2) {
                        return v2.slot;
                    })($666($667)))));
                };
            })())(v1.end);
        };
        return Data_Either.note(new CannotFindSlotInEraSummaries(slot))(Data_Array.find(pred)(v));
    };
};
var extractArg = function (dictDecodeAeson) {
    return function (o) {
        return Control_Bind.bind(Data_Either.bindEither)(Aeson.getField(Aeson.decodeAesonArray(dictDecodeAeson))(o)("args"))(function (args) {
            return Control_Bind.discard(Control_Bind.discardUnit)(Data_Either.bindEither)(Control_Applicative.when(Data_Either.applicativeEither)(Data_Array.length(args) !== 1)(Control_Monad_Error_Class.throwError(Control_Monad_Error_Class.monadThrowEither)(new Data_Argonaut_Decode_Error.TypeMismatch("Incorrect args"))))(function () {
                return Data_Either.note(new Data_Argonaut_Decode_Error.TypeMismatch("Could not extract head"))(Data_Array.head(args));
            });
        });
    };
};
var decodeAesonPosixTimeToSlo = {
    decodeAeson: QueryM_Ogmios.aesonObject(function (o) {
        return Control_Bind.bind(Data_Either.bindEither)(Aeson.getField(Aeson.decodeAesonString)(o)("errorType"))(function (errorType) {
            return Control_Bind.discard(Control_Bind.discardUnit)(Data_Either.bindEither)(Control_Applicative.unless(Data_Either.applicativeEither)(errorType === posixTimeToSlotErrorStr)(Control_Monad_Error_Class.throwError(Control_Monad_Error_Class.monadThrowEither)(new Data_Argonaut_Decode_Error.TypeMismatch("Expected PosixTimeToSlotError"))))(function () {
                return Control_Bind.bind(Data_Either.bindEither)(Aeson.getField(Aeson.decodeAesonString)(o)("error"))(function (v) {
                    if (v === "cannotFindTimeInEraSummaries") {
                        return Control_Bind.bind(Data_Either.bindEither)(extractArg(decodeAesonAbsTime)(o))(function (arg) {
                            return Control_Applicative.pure(Data_Either.applicativeEither)(new CannotFindTimeInEraSummaries(arg));
                        });
                    };
                    if (v === "posixTimeBeforeSystemStart") {
                        return Control_Bind.bind(Data_Either.bindEither)(extractArg(decodeAesonPOSIXTime)(o))(function (arg) {
                            return Control_Applicative.pure(Data_Either.applicativeEither)(new PosixTimeBeforeSystemStart(arg));
                        });
                    };
                    if (v === "startTimeGreaterThanTime") {
                        return Control_Bind.bind(Data_Either.bindEither)(extractArg(decodeAesonAbsTime)(o))(function (arg) {
                            return Control_Applicative.pure(Data_Either.applicativeEither)(new StartTimeGreaterThanTime(arg));
                        });
                    };
                    if (v === "endSlotLessThanSlotOrModNonZero") {
                        return Control_Bind.bind(Data_Either.bindEither)(Aeson.getField(Aeson.decodeAesonArray(Aeson.decodeAesonAeson))(o)("args"))(function (args) {
                            return Control_Bind.discard(Control_Bind.discardUnit)(Data_Either.bindEither)(Control_Applicative.when(Data_Either.applicativeEither)(Data_Array.length(args) !== 2)(Control_Monad_Error_Class.throwError(Control_Monad_Error_Class.monadThrowEither)(new Data_Argonaut_Decode_Error.TypeMismatch("Incorrect args"))))(function () {
                                return Control_Bind.bind(Data_Either.bindEither)(Control_Bind.bindFlipped(Data_Either.bindEither)(Aeson.decodeAeson(Serialization_Address.decodeAesonSlot))(Data_Either.note(new Data_Argonaut_Decode_Error.TypeMismatch("Could not extract first element"))(Data_Array.index(args)(0))))(function (as) {
                                    return Control_Bind.bind(Data_Either.bindEither)(Control_Bind.bindFlipped(Data_Either.bindEither)(Aeson.decodeAeson(decodeAesonModTime))(Data_Either.note(new Data_Argonaut_Decode_Error.TypeMismatch("Could not extract second element"))(Data_Array.index(args)(1))))(function (mt) {
                                        return Control_Applicative.pure(Data_Either.applicativeEither)(new EndSlotLessThanSlotOrModNonZero(as, mt));
                                    });
                                });
                            });
                        });
                    };
                    if (v === "cannotGetBigIntFromNumber'") {
                        return Control_Bind.bind(Data_Either.bindEither)(Aeson.getField(Aeson.decodeAesonAeson)(o)("args"))(function (args) {
                            return Control_Bind.discard(Control_Bind.discardUnit)(Data_Either.bindEither)(Control_Applicative.unless(Data_Either.applicativeEither)(Aeson.isNull(args))(Control_Monad_Error_Class.throwError(Control_Monad_Error_Class.monadThrowEither)(new Data_Argonaut_Decode_Error.TypeMismatch("Non-empty args"))))(function () {
                                return Control_Applicative.pure(Data_Either.applicativeEither)(CannotGetBigIntFromNumber$prime.value);
                            });
                        });
                    };
                    if (v === "cannotGetBigNumFromBigInt'") {
                        return Control_Bind.bind(Data_Either.bindEither)(Aeson.getField(Aeson.decodeAesonAeson)(o)("args"))(function (args) {
                            return Control_Bind.discard(Control_Bind.discardUnit)(Data_Either.bindEither)(Control_Applicative.unless(Data_Either.applicativeEither)(Aeson.isNull(args))(Control_Monad_Error_Class.throwError(Control_Monad_Error_Class.monadThrowEither)(new Data_Argonaut_Decode_Error.TypeMismatch("Non-empty args"))))(function () {
                                return Control_Applicative.pure(Data_Either.applicativeEither)(CannotGetBigNumFromBigInt$prime.value);
                            });
                        });
                    };
                    return Control_Monad_Error_Class.throwError(Control_Monad_Error_Class.monadThrowEither)(new Data_Argonaut_Decode_Error.TypeMismatch("Unknown error message"));
                });
            });
        });
    })
};
var decodeAesonSlotToPosixTim = {
    decodeAeson: QueryM_Ogmios.aesonObject(function (o) {
        return Control_Bind.bind(Data_Either.bindEither)(Aeson.getField(Aeson.decodeAesonString)(o)("errorType"))(function (errorType) {
            return Control_Bind.discard(Control_Bind.discardUnit)(Data_Either.bindEither)(Control_Applicative.unless(Data_Either.applicativeEither)(errorType === slotToPosixTimeErrorStr)(Control_Monad_Error_Class.throwError(Control_Monad_Error_Class.monadThrowEither)(new Data_Argonaut_Decode_Error.TypeMismatch("Expected SlotToPosixTimeError"))))(function () {
                return Control_Bind.bind(Data_Either.bindEither)(Aeson.getField(Aeson.decodeAesonString)(o)("error"))(function (v) {
                    if (v === "cannotFindSlotInEraSummaries") {
                        return Control_Bind.bind(Data_Either.bindEither)(extractArg(Serialization_Address.decodeAesonSlot)(o))(function (arg) {
                            return Control_Applicative.pure(Data_Either.applicativeEither)(new CannotFindSlotInEraSummaries(arg));
                        });
                    };
                    if (v === "startingSlotGreaterThanSlot") {
                        return Control_Bind.bind(Data_Either.bindEither)(extractArg(Serialization_Address.decodeAesonSlot)(o))(function (arg) {
                            return Control_Applicative.pure(Data_Either.applicativeEither)(new StartingSlotGreaterThanSlot(arg));
                        });
                    };
                    if (v === "endTimeLessThanTime") {
                        return Control_Bind.bind(Data_Either.bindEither)(extractArg(Aeson.decodeAesonNumber)(o))(function (arg) {
                            return Control_Applicative.pure(Data_Either.applicativeEither)(new EndTimeLessThanTime(arg));
                        });
                    };
                    if (v === "cannotGetBigIntFromNumber") {
                        return Control_Bind.bind(Data_Either.bindEither)(Aeson.getField(Aeson.decodeAesonAeson)(o)("args"))(function (args) {
                            return Control_Bind.discard(Control_Bind.discardUnit)(Data_Either.bindEither)(Control_Applicative.unless(Data_Either.applicativeEither)(Aeson.isNull(args))(Control_Monad_Error_Class.throwError(Control_Monad_Error_Class.monadThrowEither)(new Data_Argonaut_Decode_Error.TypeMismatch("Non-empty args"))))(function () {
                                return Control_Applicative.pure(Data_Either.applicativeEither)(CannotGetBigIntFromNumber.value);
                            });
                        });
                    };
                    return Control_Monad_Error_Class.throwError(Control_Monad_Error_Class.monadThrowEither)(new Data_Argonaut_Decode_Error.TypeMismatch("Unknown error message"));
                });
            });
        });
    })
};
var decodeAesonToOnChainPosix = {
    decodeAeson: QueryM_Ogmios.aesonObject(function (o) {
        return Control_Bind.bind(Data_Either.bindEither)(Aeson.getField(Aeson.decodeAesonString)(o)("errorType"))(function (errorType) {
            return Control_Bind.discard(Control_Bind.discardUnit)(Data_Either.bindEither)(Control_Applicative.unless(Data_Either.applicativeEither)(errorType === toOnChainPosixTimeRangeErrorStr)(Control_Monad_Error_Class.throwError(Control_Monad_Error_Class.monadThrowEither)(new Data_Argonaut_Decode_Error.TypeMismatch("Expected ToOnChainPosixTimeRangeError"))))(function () {
                return Control_Bind.bind(Data_Either.bindEither)(Aeson.getField(Aeson.decodeAesonString)(o)("error"))(function (v) {
                    if (v === "posixTimeToSlotError'") {
                        return Control_Bind.bind(Data_Either.bindEither)(extractArg(decodeAesonPosixTimeToSlo)(o))(function (arg) {
                            return Control_Applicative.pure(Data_Either.applicativeEither)(new PosixTimeToSlotError$prime(arg));
                        });
                    };
                    if (v === "slotToPosixTimeError'") {
                        return Control_Bind.bind(Data_Either.bindEither)(extractArg(decodeAesonSlotToPosixTim)(o))(function (arg) {
                            return Control_Applicative.pure(Data_Either.applicativeEither)(new SlotToPosixTimeError$prime(arg));
                        });
                    };
                    return Control_Monad_Error_Class.throwError(Control_Monad_Error_Class.monadThrowEither)(new Data_Argonaut_Decode_Error.TypeMismatch("Unknown error message"));
                });
            });
        });
    })
};
var contains = function (dictOrd) {
    return function (v) {
        return function (v1) {
            return Data_Ord.lessThanOrEq(ordLowerBound(dictOrd))(v.from)(v1.from) && Data_Ord.lessThanOrEq(ordUpperBound(dictOrd))(v1.to)(v.to);
        };
    };
};
var member = function (dictOrd) {
    return function (a) {
        return function (i) {
            return contains(dictOrd)(i)(singleton(a));
        };
    };
};
var beginningOfTime = Data_Maybe.fromJust()(Data_BigInt.fromString("1596059091000"));
var before = function (dictOrd) {
    return function (h) {
        return function (v) {
            return Data_Ord.lessThan(ordLowerBound(dictOrd))(lowerBound(h))(v.from);
        };
    };
};
var always = mkInterval(new LowerBound(NegInf.value, true))(new UpperBound(PosInf.value, true));
var boundedMeetSemilatticeInt = function (dictOrd) {
    return {
        top: always,
        MeetSemilattice0: function () {
            return meetSemilatticeInterval(dictOrd);
        }
    };
};
var boundedMeetSemilatticeOnc = boundedMeetSemilatticeInt(ordPOSIXTime);
var after = function (dictOrd) {
    return function (h) {
        return function (v) {
            return Data_Ord.greaterThan(ordUpperBound(dictOrd))(upperBound(h))(v.to);
        };
    };
};
var absTimeFromRelTime = function (v) {
    return function (v1) {
        var startTime = Data_Newtype.unwrap()((Data_Newtype.unwrap()(v.start)).time) * QueryM_Ogmios.slotLengthFactor;
        var absTime = startTime + Data_BigInt.toNumber(v1);
        var endTime = Data_Maybe.maybe(absTime + 1)((function () {
            var $668 = Data_Semiring.mul(Data_Semiring.semiringNumber)(QueryM_Ogmios.slotLengthFactor);
            var $669 = Data_Newtype.unwrap();
            var $670 = Data_Newtype.unwrap();
            return function ($671) {
                return $668($669((function (v2) {
                    return v2.time;
                })($670($671))));
            };
        })())(v.end);
        return Control_Bind.discard(Control_Bind.discardUnit)(Data_Either.bindEither)(Control_Applicative.unless(Data_Either.applicativeEither)(absTime <= endTime)(Control_Monad_Error_Class.throwError(Control_Monad_Error_Class.monadThrowEither)(new EndTimeLessThanTime(absTime))))(function () {
            return Data_Functor.map(Data_Either.functorEither)(Data_Newtype.wrap())(Helpers.liftM(Control_Monad_Error_Class.monadErrorEither)(CannotGetBigIntFromNumber.value)(Data_BigInt.fromNumber(absTime)));
        });
    };
};
var slotToPosixTime = function (eraSummaries) {
    return function (sysStart) {
        return function (slot) {
            var _transTime = Data_Semiring.mul(Data_BigInt.semiringBigInt)(Data_BigInt.fromInt(1000));
            return Control_Monad_Except_Trans.runExceptT(Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Effect.monadEffect))(Effect_Class.liftEffect(Control_Monad_Except_Trans.monadEffectExceptT(Effect_Class.monadEffectEffect))(Data_JSDate.parse(Data_Newtype.unwrap()(sysStart))))(function (sysStartD) {
                return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Effect.monadEffect))(Helpers.liftEither(Control_Monad_Except_Trans.monadErrorExceptT(Effect.monadEffect))(findSlotEraSummary(eraSummaries)(slot)))(function (currentEra) {
                    return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Effect.monadEffect))(Helpers.liftEither(Control_Monad_Except_Trans.monadErrorExceptT(Effect.monadEffect))(relSlotFromSlot(currentEra)(slot)))(function (relSlot) {
                        return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Effect.monadEffect))(Helpers.liftM(Control_Monad_Except_Trans.monadErrorExceptT(Effect.monadEffect))(CannotGetBigIntFromNumber.value)(relTimeFromRelSlot(currentEra)(relSlot)))(function (relTime) {
                            return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Effect.monadEffect))(Helpers.liftEither(Control_Monad_Except_Trans.monadErrorExceptT(Effect.monadEffect))(absTimeFromRelTime(currentEra)(relTime)))(function (absTime) {
                                return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Effect.monadEffect))(Helpers.liftM(Control_Monad_Except_Trans.monadErrorExceptT(Effect.monadEffect))(CannotGetBigIntFromNumber.value)(Data_BigInt.fromNumber(Data_JSDate.getTime(sysStartD))))(function (sysStartPosix) {
                                    return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Effect.monadEffect))(Data_Newtype.wrap()(Data_Semiring.add(Data_BigInt.semiringBigInt)(sysStartPosix)(Data_Newtype.unwrap()(absTime))));
                                });
                            });
                        });
                    });
                });
            }));
        };
    };
};
var slotRangeToPosixTimeRange = function (eraSummaries) {
    return function (sysStart) {
        return function (v) {
            var convertBounds = function (v1) {
                if (v1 instanceof Finite) {
                    return Data_Functor.mapFlipped(Effect.functorEffect)(slotToPosixTime(eraSummaries)(sysStart)(v1.value0))(Data_Functor.map(Data_Either.functorEither)(Finite.create));
                };
                if (v1 instanceof NegInf) {
                    return Control_Applicative.pure(Effect.applicativeEffect)(new Data_Either.Right(NegInf.value));
                };
                if (v1 instanceof PosInf) {
                    return Control_Applicative.pure(Effect.applicativeEffect)(new Data_Either.Right(PosInf.value));
                };
                throw new Error("Failed pattern match at Types.Interval (line 971, column 3 - line 973, column 65): " + [ v1.constructor.name ]);
            };
            return Control_Monad_Except_Trans.runExceptT(Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Effect.monadEffect))(Control_Monad_Except_Trans.ExceptT(convertBounds(v.from.value0)))(function (s$prime) {
                return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Effect.monadEffect))(Control_Monad_Except_Trans.ExceptT(convertBounds(v.to.value0)))(function (e$prime) {
                    return Helpers.liftEither(Control_Monad_Except_Trans.monadErrorExceptT(Effect.monadEffect))(Data_Either.Right.create({
                        from: new LowerBound(s$prime, v.from.value1),
                        to: new UpperBound(e$prime, v.to.value1)
                    }));
                });
            }));
        };
    };
};
var toOnchainPosixTimeRange = function (es) {
    return function (ss) {
        return function (ptr) {
            return Control_Monad_Except_Trans.runExceptT(Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Effect.monadEffect))(Control_Monad_Except_Trans.ExceptT(Data_Functor.mapFlipped(Effect.functorEffect)(posixTimeRangeToTransactionValidity(es)(ss)(ptr))(Data_Bifunctor.lmap(Data_Bifunctor.bifunctorEither)(PosixTimeToSlotError$prime.create))))(function (v) {
                if (v.validityStartInterval instanceof Data_Maybe.Nothing && v.timeToLive instanceof Data_Maybe.Nothing) {
                    return Helpers.liftEither(Control_Monad_Except_Trans.monadErrorExceptT(Effect.monadEffect))(Data_Either.Right.create(Data_Newtype.wrap()(always)));
                };
                if (v.validityStartInterval instanceof Data_Maybe.Just && v.timeToLive instanceof Data_Maybe.Nothing) {
                    return Control_Monad_Except_Trans.ExceptT(Data_Functor.mapFlipped(Effect.functorEffect)(slotToPosixTime(es)(ss)(v.validityStartInterval.value0))(Data_Bifunctor.bimap(Data_Bifunctor.bifunctorEither)(SlotToPosixTimeError$prime.create)((function () {
                        var $672 = Data_Newtype.wrap();
                        return function ($673) {
                            return $672(from($673));
                        };
                    })())));
                };
                if (v.validityStartInterval instanceof Data_Maybe.Nothing && v.timeToLive instanceof Data_Maybe.Just) {
                    return Control_Monad_Except_Trans.ExceptT(Data_Functor.mapFlipped(Effect.functorEffect)(slotToPosixTime(es)(ss)(v.timeToLive.value0))(Data_Bifunctor.bimap(Data_Bifunctor.bifunctorEither)(SlotToPosixTimeError$prime.create)((function () {
                        var $674 = Data_Newtype.wrap();
                        return function ($675) {
                            return $674(to($675));
                        };
                    })())));
                };
                if (v.validityStartInterval instanceof Data_Maybe.Just && v.timeToLive instanceof Data_Maybe.Just) {
                    return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Effect.monadEffect))(Control_Monad_Except_Trans.ExceptT(Data_Functor.mapFlipped(Effect.functorEffect)(slotToPosixTime(es)(ss)(v.validityStartInterval.value0))(Data_Bifunctor.lmap(Data_Bifunctor.bifunctorEither)(SlotToPosixTimeError$prime.create))))(function (t1) {
                        return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Effect.monadEffect))(Control_Monad_Except_Trans.ExceptT(Data_Functor.mapFlipped(Effect.functorEffect)(slotToPosixTime(es)(ss)(v.timeToLive.value0))(Data_Bifunctor.lmap(Data_Bifunctor.bifunctorEither)(SlotToPosixTimeError$prime.create))))(function (t2) {
                            return Helpers.liftEither(Control_Monad_Except_Trans.monadErrorExceptT(Effect.monadEffect))(Data_Either.Right.create(Data_Newtype.wrap()(interval(t1)(t2))));
                        });
                    });
                };
                throw new Error("Failed pattern match at Types.Interval (line 1157, column 3 - line 1166, column 49): " + [ v.validityStartInterval.constructor.name, v.timeToLive.constructor.name ]);
            }));
        };
    };
};
module.exports = {
    AbsTime: AbsTime,
    NegInf: NegInf,
    Finite: Finite,
    PosInf: PosInf,
    Interval: Interval,
    LowerBound: LowerBound,
    ModTime: ModTime,
    OnchainPOSIXTimeRange: OnchainPOSIXTimeRange,
    POSIXTime: POSIXTime,
    CannotFindTimeInEraSummaries: CannotFindTimeInEraSummaries,
    PosixTimeBeforeSystemStart: PosixTimeBeforeSystemStart,
    StartTimeGreaterThanTime: StartTimeGreaterThanTime,
    EndSlotLessThanSlotOrModNonZero: EndSlotLessThanSlotOrModNonZero,
    "CannotGetBigIntFromNumber'": CannotGetBigIntFromNumber$prime,
    "CannotGetBigNumFromBigInt'": CannotGetBigNumFromBigInt$prime,
    RelSlot: RelSlot,
    RelTime: RelTime,
    CannotFindSlotInEraSummaries: CannotFindSlotInEraSummaries,
    StartingSlotGreaterThanSlot: StartingSlotGreaterThanSlot,
    EndTimeLessThanTime: EndTimeLessThanTime,
    CannotGetBigIntFromNumber: CannotGetBigIntFromNumber,
    "PosixTimeToSlotError'": PosixTimeToSlotError$prime,
    "SlotToPosixTimeError'": SlotToPosixTimeError$prime,
    UpperBound: UpperBound,
    after: after,
    always: always,
    before: before,
    beginningOfTime: beginningOfTime,
    contains: contains,
    findSlotEraSummary: findSlotEraSummary,
    findTimeEraSummary: findTimeEraSummary,
    from: from,
    getSlotLength: getSlotLength,
    hull: hull,
    intersection: intersection,
    interval: interval,
    isEmpty: isEmpty,
    "isEmpty'": isEmpty$prime,
    lowerBound: lowerBound,
    maxSlot: maxSlot,
    member: member,
    mkInterval: mkInterval,
    never: never,
    overlaps: overlaps,
    "overlaps'": overlaps$prime,
    posixTimeRangeToSlotRange: posixTimeRangeToSlotRange,
    posixTimeRangeToTransactionValidity: posixTimeRangeToTransactionValidity,
    posixTimeToSlot: posixTimeToSlot,
    singleton: singleton,
    slotRangeToPosixTimeRange: slotRangeToPosixTimeRange,
    slotToPosixTime: slotToPosixTime,
    strictLowerBound: strictLowerBound,
    strictUpperBound: strictUpperBound,
    to: to,
    toOnchainPosixTimeRange: toOnchainPosixTimeRange,
    upperBound: upperBound,
    "hasPlutusSchemaExtended\"N": hasPlutusSchemaExtended$34N,
    toDataExtended: toDataExtended,
    fromDataExtended: fromDataExtended,
    genericExtended_: genericExtended_,
    eqExtended: eqExtended,
    ordExtended: ordExtended,
    functorExtended: functorExtended,
    showExtended: showExtended,
    hasPlutusSchemaLowerBound: hasPlutusSchemaLowerBound,
    toDataLowerBound: toDataLowerBound,
    fromDataLowerBound: fromDataLowerBound,
    genericLowerBound_: genericLowerBound_,
    eqLowerBound: eqLowerBound,
    functorLowerBound: functorLowerBound,
    showLowerBound: showLowerBound,
    ordLowerBound: ordLowerBound,
    hasPlutusSchemaUpperBound: hasPlutusSchemaUpperBound,
    toDataUpperBound: toDataUpperBound,
    fromDataUpperBound: fromDataUpperBound,
    genericUpperBound_: genericUpperBound_,
    eqUpperBound: eqUpperBound,
    ordUpperBound: ordUpperBound,
    functorUpperBound: functorUpperBound,
    showUpperBound: showUpperBound,
    genericInterval_: genericInterval_,
    eqInterval: eqInterval,
    functorInterval: functorInterval,
    newtypeInterval_: newtypeInterval_,
    "hasPlutusSchemaInterval\"I": hasPlutusSchemaInterval$34I,
    showInterval: showInterval,
    joinSemilatticeInterval: joinSemilatticeInterval,
    boundedJoinSemilatticeInt: boundedJoinSemilatticeInt,
    meetSemilatticeInterval: meetSemilatticeInterval,
    boundedMeetSemilatticeInt: boundedMeetSemilatticeInt,
    toDataInterval: toDataInterval,
    fromDataInterval: fromDataInterval,
    encodeAesonInterval: encodeAesonInterval,
    decodeAesonInterval: decodeAesonInterval,
    genericPOSIXTime_: genericPOSIXTime_,
    newtypePOSIXTime_: newtypePOSIXTime_,
    eqPOSIXTime: eqPOSIXTime,
    ordPOSIXTime: ordPOSIXTime,
    semiringPOSIXTime: semiringPOSIXTime,
    fromDataPOSIXTime: fromDataPOSIXTime,
    toDataPOSIXTime: toDataPOSIXTime,
    decodeAesonPOSIXTime: decodeAesonPOSIXTime,
    encodeAesonPOSIXTime: encodeAesonPOSIXTime,
    showPOSIXTime: showPOSIXTime,
    genericOnchainPOSIXTimeRa: genericOnchainPOSIXTimeRa,
    newtypeOnchainPOSIXTimeRa: newtypeOnchainPOSIXTimeRa,
    eqOnchainPOSIXTimeRange: eqOnchainPOSIXTimeRange,
    joinSemilatticeOnchainPOS: joinSemilatticeOnchainPOS,
    boundedJoinSemilatticeOnc: boundedJoinSemilatticeOnc,
    meetSemilatticeOnchainPOS: meetSemilatticeOnchainPOS,
    boundedMeetSemilatticeOnc: boundedMeetSemilatticeOnc,
    fromDataOnchainPOSIXTimeR: fromDataOnchainPOSIXTimeR,
    toDataOnchainPOSIXTimeRan: toDataOnchainPOSIXTimeRan,
    showOnchainPOSIXTimeRange: showOnchainPOSIXTimeRange,
    genericSlotToPosixTimeErr: genericSlotToPosixTimeErr,
    eqSlotToPosixTimeError: eqSlotToPosixTimeError,
    showSlotToPosixTimeError: showSlotToPosixTimeError,
    encodeAesonSlotToPosixTim: encodeAesonSlotToPosixTim,
    decodeAesonSlotToPosixTim: decodeAesonSlotToPosixTim,
    genericRelSlot_: genericRelSlot_,
    newtypeRelSlot_: newtypeRelSlot_,
    eqRelSlot: eqRelSlot,
    ordRelSlot: ordRelSlot,
    decodeAesonRelSlot: decodeAesonRelSlot,
    encodeAesonRelSlot: encodeAesonRelSlot,
    showRelSlot: showRelSlot,
    genericRelTime_: genericRelTime_,
    newtypeRelTime_: newtypeRelTime_,
    eqRelTime: eqRelTime,
    ordRelTime: ordRelTime,
    decodeAesonRelTime: decodeAesonRelTime,
    encodeAesonRelTime: encodeAesonRelTime,
    showRelTime: showRelTime,
    genericModTime_: genericModTime_,
    newtypeModTime_: newtypeModTime_,
    eqModTime: eqModTime,
    ordModTime: ordModTime,
    decodeAesonModTime: decodeAesonModTime,
    encodeAesonModTime: encodeAesonModTime,
    showModTime: showModTime,
    genericAbsTime_: genericAbsTime_,
    newtypeAbsTime_: newtypeAbsTime_,
    eqAbsTime: eqAbsTime,
    ordAbsTime: ordAbsTime,
    decodeAesonAbsTime: decodeAesonAbsTime,
    encodeAesonAbsTime: encodeAesonAbsTime,
    showAbsTime: showAbsTime,
    genericPosixTimeToSlotErr: genericPosixTimeToSlotErr,
    eqPosixTimeToSlotError: eqPosixTimeToSlotError,
    showPosixTimeToSlotError: showPosixTimeToSlotError,
    encodeAesonPosixTimeToSlo: encodeAesonPosixTimeToSlo,
    decodeAesonPosixTimeToSlo: decodeAesonPosixTimeToSlo,
    genericToOnChainPosixTime: genericToOnChainPosixTime,
    eqToOnChainPosixTimeRange: eqToOnChainPosixTimeRange,
    showToOnChainPosixTimeRan: showToOnChainPosixTimeRan,
    encodeAesonLowerBound: encodeAesonLowerBound,
    decodeAesonLowerBound: decodeAesonLowerBound,
    encodeAesonUpperBound: encodeAesonUpperBound,
    decodeAesonUpperBound: decodeAesonUpperBound,
    encodeAesonExtended: encodeAesonExtended,
    decodeAesonExtended: decodeAesonExtended,
    encodeAesonToOnChainPosix: encodeAesonToOnChainPosix,
    decodeAesonToOnChainPosix: decodeAesonToOnChainPosix
};
