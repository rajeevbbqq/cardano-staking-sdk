// Generated by purs version 0.14.5
"use strict";
var Data_Profunctor = require("../Data.Profunctor/index.js");
var Data_Profunctor_Choice = require("../Data.Profunctor.Choice/index.js");
var Data_Profunctor_Cochoice = require("../Data.Profunctor.Cochoice/index.js");
var Data_Profunctor_Costrong = require("../Data.Profunctor.Costrong/index.js");
var Data_Profunctor_Strong = require("../Data.Profunctor.Strong/index.js");
var Re = function (x) {
    return x;
};
var profunctorRe = function (dictProfunctor) {
    return {
        dimap: function (f) {
            return function (g) {
                return function (v) {
                    var $25 = Data_Profunctor.dimap(dictProfunctor)(g)(f);
                    return function ($26) {
                        return v($25($26));
                    };
                };
            };
        }
    };
};
var strongRe = function (dictStrong) {
    return {
        unfirst: function (v) {
            var $27 = Data_Profunctor_Strong.first(dictStrong);
            return function ($28) {
                return v($27($28));
            };
        },
        unsecond: function (v) {
            var $29 = Data_Profunctor_Strong.second(dictStrong);
            return function ($30) {
                return v($29($30));
            };
        },
        Profunctor0: function () {
            return profunctorRe(dictStrong.Profunctor0());
        }
    };
};
var newtypeRe = {
    Coercible0: function () {
        return undefined;
    }
};
var costrongRe = function (dictCostrong) {
    return {
        first: function (v) {
            var $31 = Data_Profunctor_Costrong.unfirst(dictCostrong);
            return function ($32) {
                return v($31($32));
            };
        },
        second: function (v) {
            var $33 = Data_Profunctor_Costrong.unsecond(dictCostrong);
            return function ($34) {
                return v($33($34));
            };
        },
        Profunctor0: function () {
            return profunctorRe(dictCostrong.Profunctor0());
        }
    };
};
var cochoiceRe = function (dictCochoice) {
    return {
        left: function (v) {
            var $35 = Data_Profunctor_Cochoice.unleft(dictCochoice);
            return function ($36) {
                return v($35($36));
            };
        },
        right: function (v) {
            var $37 = Data_Profunctor_Cochoice.unright(dictCochoice);
            return function ($38) {
                return v($37($38));
            };
        },
        Profunctor0: function () {
            return profunctorRe(dictCochoice.Profunctor0());
        }
    };
};
var choiceRe = function (dictChoice) {
    return {
        unleft: function (v) {
            var $39 = Data_Profunctor_Choice.left(dictChoice);
            return function ($40) {
                return v($39($40));
            };
        },
        unright: function (v) {
            var $41 = Data_Profunctor_Choice.right(dictChoice);
            return function ($42) {
                return v($41($42));
            };
        },
        Profunctor0: function () {
            return profunctorRe(dictChoice.Profunctor0());
        }
    };
};
module.exports = {
    Re: Re,
    newtypeRe: newtypeRe,
    profunctorRe: profunctorRe,
    choiceRe: choiceRe,
    cochoiceRe: cochoiceRe,
    strongRe: strongRe,
    costrongRe: costrongRe
};
