// Generated by purs version 0.14.5
"use strict";
var Control_Category = require("../Control.Category/index.js");
var Data_Either = require("../Data.Either/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Lens_Internal_Stall = require("../Data.Lens.Internal.Stall/index.js");
var Data_Lens_Types = require("../Data.Lens.Types/index.js");
var Data_Profunctor = require("../Data.Profunctor/index.js");
var Data_Profunctor_Choice = require("../Data.Profunctor.Choice/index.js");
var Data_Profunctor_Strong = require("../Data.Profunctor.Strong/index.js");
var withAffineTraversal = function (l) {
    return function (f) {
        var v = l(new Data_Lens_Internal_Stall.Stall(Data_Function["const"](Control_Category.identity(Control_Category.categoryFn)), Data_Either.Right.create));
        return f(v.value0)(v.value1);
    };
};
var affineTraversal$prime = function (to) {
    return function (dictStrong) {
        return function (dictChoice) {
            return function (pab) {
                return Data_Profunctor.dimap(dictChoice.Profunctor0())(to)(function (v) {
                    return Data_Either.either(Control_Category.identity(Control_Category.categoryFn))(v.value0)(v.value1);
                })(Data_Profunctor_Strong.second(dictStrong)(Data_Profunctor_Choice.right(dictChoice)(pab)));
            };
        };
    };
};
var affineTraversal = function (set) {
    return function (pre) {
        return function (dictStrong) {
            return function (dictChoice) {
                return affineTraversal$prime(Data_Profunctor_Strong.fanout(Control_Category.categoryFn)(Data_Profunctor_Strong.strongFn)(set)(pre))(dictStrong)(dictChoice);
            };
        };
    };
};
var cloneAffineTraversal = function (l) {
    return function (dictStrong) {
        return function (dictChoice) {
            return withAffineTraversal(l)(function (x) {
                return function (y) {
                    return function (p) {
                        return affineTraversal(x)(y)(dictStrong)(dictChoice)(p);
                    };
                };
            });
        };
    };
};
module.exports = {
    affineTraversal: affineTraversal,
    "affineTraversal'": affineTraversal$prime,
    withAffineTraversal: withAffineTraversal,
    cloneAffineTraversal: cloneAffineTraversal
};
