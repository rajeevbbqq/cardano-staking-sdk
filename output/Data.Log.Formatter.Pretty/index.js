// Generated by purs version 0.14.5
"use strict";
var Ansi_Codes = require("../Ansi.Codes/index.js");
var Ansi_Output = require("../Ansi.Output/index.js");
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Apply = require("../Control.Apply/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Control_Plus = require("../Control.Plus/index.js");
var Data_Array = require("../Data.Array/index.js");
var Data_Boolean = require("../Data.Boolean/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_JSDate = require("../Data.JSDate/index.js");
var Data_Log_Level = require("../Data.Log.Level/index.js");
var Data_Log_Tag = require("../Data.Log.Tag/index.js");
var Data_Map_Internal = require("../Data.Map.Internal/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Semigroup = require("../Data.Semigroup/index.js");
var Data_Show = require("../Data.Show/index.js");
var Data_String_Common = require("../Data.String.Common/index.js");
var Data_Traversable = require("../Data.Traversable/index.js");
var Data_Unfoldable = require("../Data.Unfoldable/index.js");
var Effect = require("../Effect/index.js");
var Effect_Class = require("../Effect.Class/index.js");
var showBasic = function (dictApplicative) {
    return function (value) {
        return function (label) {
            return Control_Applicative.pure(dictApplicative)(Data_Array.singleton(label + value));
        };
    };
};
var indentEachLine = function (dictFunctor) {
    return Data_Functor.map(dictFunctor)(Data_Semigroup.append(Data_Semigroup.semigroupString)("   "));
};
var color = function ($35) {
    return Ansi_Output.withGraphics(Ansi_Output.foreground($35));
};
var showLevel = function (v) {
    if (v instanceof Data_Log_Level.Trace) {
        return color(Ansi_Codes.Cyan.value)("[TRACE]");
    };
    if (v instanceof Data_Log_Level.Debug) {
        return color(Ansi_Codes.Blue.value)("[DEBUG]");
    };
    if (v instanceof Data_Log_Level.Info) {
        return color(Ansi_Codes.White.value)("[INFO]");
    };
    if (v instanceof Data_Log_Level.Warn) {
        return color(Ansi_Codes.Yellow.value)("[WARN]");
    };
    if (v instanceof Data_Log_Level["Error"]) {
        return color(Ansi_Codes.Red.value)("[ERROR]");
    };
    throw new Error("Failed pattern match at Data.Log.Formatter.Pretty (line 38, column 1 - line 38, column 32): " + [ v.constructor.name ]);
};
var showMainLine = function (dictMonadEffect) {
    return function (v) {
        return Effect_Class.liftEffect(dictMonadEffect)(Data_Functor.mapFlipped(Effect.functorEffect)(Data_JSDate.toISOString(v.timestamp))(function (ts) {
            return Data_String_Common.joinWith(" ")([ showLevel(v.level), color(Ansi_Codes.BrightBlack.value)(ts), color(Ansi_Codes.Cyan.value)(v.message) ]);
        }));
    };
};
var showSpecial = function (dictApplicative) {
    var $36 = showBasic(dictApplicative);
    var $37 = color(Ansi_Codes.Yellow.value);
    return function ($38) {
        return $36($37($38));
    };
};
var showJsDate = function (dictMonadEffect) {
    return function (value) {
        return function (label) {
            return Effect_Class.liftEffect(dictMonadEffect)(Control_Bind.bind(Effect.bindEffect)(Data_JSDate.toISOString(value))(Data_Function.flip(showSpecial(Effect.applicativeEffect))(label)));
        };
    };
};
var bold$prime = Ansi_Output.withGraphics(Ansi_Output.bold);
var tagLines = function (dictMonadEffect) {
    return function (tags) {
        if (Data_Map_Internal.isEmpty(tags)) {
            return Control_Plus.empty(Data_Maybe.plusMaybe);
        };
        if (Data_Boolean.otherwise) {
            return Control_Applicative.pure(Data_Maybe.applicativeMaybe)(Data_Functor.map((((dictMonadEffect.Monad0()).Bind1()).Apply0()).Functor0())(Data_Functor.map(Data_Functor.functorFn)(indentEachLine(Data_Functor.functorArray))(Data_Array.concat))(lineify(dictMonadEffect)(tags)));
        };
        throw new Error("Failed pattern match at Data.Log.Formatter.Pretty (line 50, column 1 - line 50, column 74): " + [ tags.constructor.name ]);
    };
};
var showTag = function (dictMonadEffect) {
    return function (v) {
        if (v instanceof Data_Log_Tag.StringTag) {
            return showBasic((dictMonadEffect.Monad0()).Applicative0())(v.value0);
        };
        if (v instanceof Data_Log_Tag.IntTag) {
            return showSpecial((dictMonadEffect.Monad0()).Applicative0())(Data_Show.show(Data_Show.showInt)(v.value0));
        };
        if (v instanceof Data_Log_Tag.NumberTag) {
            return showSpecial((dictMonadEffect.Monad0()).Applicative0())(Data_Show.show(Data_Show.showNumber)(v.value0));
        };
        if (v instanceof Data_Log_Tag.BooleanTag) {
            return showSpecial((dictMonadEffect.Monad0()).Applicative0())(Data_Show.show(Data_Show.showBoolean)(v.value0));
        };
        if (v instanceof Data_Log_Tag.TagSetTag) {
            return showSubTags(dictMonadEffect)(v.value0);
        };
        if (v instanceof Data_Log_Tag.JSDateTag) {
            return showJsDate(dictMonadEffect)(v.value0);
        };
        throw new Error("Failed pattern match at Data.Log.Formatter.Pretty (line 61, column 1 - line 61, column 72): " + [ v.constructor.name ]);
    };
};
var showSubTags = function (dictMonadEffect) {
    return function (value) {
        return function (label) {
            return Data_Functor.map((((dictMonadEffect.Monad0()).Bind1()).Apply0()).Functor0())(Data_Array.cons(label))(Data_Maybe.fromMaybe(Control_Applicative.pure((dictMonadEffect.Monad0()).Applicative0())([  ]))(tagLines(dictMonadEffect)(value)));
        };
    };
};
var showField = function (dictMonadEffect) {
    return function (v) {
        return showTag(dictMonadEffect)(v.value1)(bold$prime(v.value0) + bold$prime(": "));
    };
};
var lineify = function (dictMonadEffect) {
    return function (tags) {
        return Data_Traversable.sequence(Data_Traversable.traversableArray)((dictMonadEffect.Monad0()).Applicative0())(Data_Functor.map(Data_Functor.functorArray)(showField(dictMonadEffect))(Data_Map_Internal.toUnfoldable(Data_Unfoldable.unfoldableArray)(tags)));
    };
};
var showTags = function (dictMonadEffect) {
    var $39 = tagLines(dictMonadEffect);
    return function ($40) {
        return (function (v) {
            if (v instanceof Data_Maybe.Nothing) {
                return Control_Applicative.pure((dictMonadEffect.Monad0()).Applicative0())("");
            };
            if (v instanceof Data_Maybe.Just) {
                return Data_Functor.mapFlipped((((dictMonadEffect.Monad0()).Bind1()).Apply0()).Functor0())(v.value0)((function () {
                    var $41 = Data_Semigroup.append(Data_Semigroup.semigroupString)("\x0a");
                    var $42 = Data_String_Common.joinWith("\x0a");
                    return function ($43) {
                        return $41($42($43));
                    };
                })());
            };
            throw new Error("Failed pattern match at Data.Log.Formatter.Pretty (line 46, column 25 - line 48, column 56): " + [ v.constructor.name ]);
        })($39($40));
    };
};
var prettyFormatter = function (dictMonadEffect) {
    return function (message) {
        return Control_Apply.apply(((dictMonadEffect.Monad0()).Bind1()).Apply0())(Data_Functor.map((((dictMonadEffect.Monad0()).Bind1()).Apply0()).Functor0())(Data_Semigroup.append(Data_Semigroup.semigroupString))(showMainLine(dictMonadEffect)(message)))(showTags(dictMonadEffect)(message.tags));
    };
};
module.exports = {
    prettyFormatter: prettyFormatter
};
