// Generated by purs version 0.14.5
"use strict";
var Control_Alt = require("../Control.Alt/index.js");
var Control_Plus = require("../Control.Plus/index.js");
var Data_Eq = require("../Data.Eq/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Effect_Console = require("../Effect.Console/index.js");
var Test_QuickCheck = require("../Test.QuickCheck/index.js");
var Test_QuickCheck_Arbitrary = require("../Test.QuickCheck.Arbitrary/index.js");
var Test_QuickCheck_Laws = require("../Test.QuickCheck.Laws/index.js");
var checkPlus = function (dictPlus) {
    return function (dictArbitrary) {
        return function (dictEq) {
            return function (dictEq1) {
                return function (v) {
                    var rightIdentity = function (x) {
                        return Data_Eq.eq(dictEq)(Control_Alt.alt(dictPlus.Alt0())(x)(Control_Plus.empty(dictPlus)))(x);
                    };
                    var leftIdentity = function (x) {
                        return Data_Eq.eq(dictEq)(Control_Alt.alt(dictPlus.Alt0())(Control_Plus.empty(dictPlus))(x))(x);
                    };
                    var annihilation = function (f) {
                        return Data_Eq.eq(dictEq1)(Data_Functor.map((dictPlus.Alt0()).Functor0())(f)(Control_Plus.empty(dictPlus)))(Control_Plus.empty(dictPlus));
                    };
                    return function __do() {
                        Effect_Console.log("Checking 'Left identity' law for Plus")();
                        Test_QuickCheck["quickCheck'"](Test_QuickCheck.testableFunction(dictArbitrary)(Test_QuickCheck.testableBoolean))(1000)(leftIdentity)();
                        Effect_Console.log("Checking 'Right identity' law for Plus")();
                        Test_QuickCheck["quickCheck'"](Test_QuickCheck.testableFunction(dictArbitrary)(Test_QuickCheck.testableBoolean))(1000)(rightIdentity)();
                        Effect_Console.log("Checking 'Annihilation' law for Plus")();
                        return Test_QuickCheck["quickCheck'"](Test_QuickCheck.testableFunction(Test_QuickCheck_Arbitrary.arbFunction(Test_QuickCheck_Laws.coarbitraryA)(Test_QuickCheck_Laws.arbitraryB))(Test_QuickCheck.testableBoolean))(1000)(annihilation)();
                    };
                };
            };
        };
    };
};
module.exports = {
    checkPlus: checkPlus
};
