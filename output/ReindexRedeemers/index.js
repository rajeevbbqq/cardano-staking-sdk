// Generated by purs version 0.14.5
"use strict";
var Cardano_Types_Transaction = require("../Cardano.Types.Transaction/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Control_Monad_Except_Trans = require("../Control.Monad.Except.Trans/index.js");
var Data_Array = require("../Data.Array/index.js");
var Data_BigInt = require("../Data.BigInt/index.js");
var Data_Either = require("../Data.Either/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Show_Generic = require("../Data.Show.Generic/index.js");
var Data_Traversable = require("../Data.Traversable/index.js");
var Data_Tuple = require("../Data.Tuple/index.js");
var Effect_Aff = require("../Effect.Aff/index.js");
var Helpers = require("../Helpers/index.js");
var QueryM = require("../QueryM/index.js");
var Types_RedeemerTag = require("../Types.RedeemerTag/index.js");
var Types_Transaction = require("../Types.Transaction/index.js");
var CannotGetTxOutRefIndexForRedeemer = (function () {
    function CannotGetTxOutRefIndexForRedeemer(value0) {
        this.value0 = value0;
    };
    CannotGetTxOutRefIndexForRedeemer.create = function (value0) {
        return new CannotGetTxOutRefIndexForRedeemer(value0);
    };
    return CannotGetTxOutRefIndexForRedeemer;
})();
var genericReindexErrors_ = {
    to: function (x) {
        return new CannotGetTxOutRefIndexForRedeemer(x);
    },
    from: function (x) {
        return x.value0;
    }
};
var showReindexErrors = {
    show: Data_Show_Generic.genericShow(genericReindexErrors_)(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Cardano_Types_Transaction.showRedeemer))({
        reflectSymbol: function () {
            return "CannotGetTxOutRefIndexForRedeemer";
        }
    }))
};
var reindexSpentScriptRedeemers$prime = function (inputs) {
    return function (redeemersTxIns) {
        var reindex = function (ipts) {
            return function (v) {
                if (v.value0.tag instanceof Types_RedeemerTag.Spend && v.value1 instanceof Data_Maybe.Just) {
                    return Control_Bind.bind(Data_Either.bindEither)(Data_Either.note(new CannotGetTxOutRefIndexForRedeemer(v.value0))(Data_Functor.map(Data_Maybe.functorMaybe)(Data_BigInt.fromInt)(Data_Array.elemIndex(Types_Transaction.eqTransactionInput)(v.value1.value0)(ipts))))(function (index) {
                        return Data_Either.Right.create(new Data_Tuple.Tuple({
                            tag: v.value0.tag,
                            index: index,
                            data: v.value0.data,
                            exUnits: v.value0.exUnits
                        }, new Data_Maybe.Just(v.value1.value0)));
                    });
                };
                return Data_Either.Right.create(new Data_Tuple.Tuple(v.value0, v.value1));
            };
        };
        return Control_Monad_Except_Trans.runExceptT(Helpers.liftEither(Control_Monad_Except_Trans.monadErrorExceptT(QueryM.monadQueryMExtendedAff))(Data_Traversable.traverse(Data_Traversable.traversableArray)(Data_Either.applicativeEither)(reindex(inputs))(redeemersTxIns)));
    };
};
var reindexSpentScriptRedeemers = function (inputs) {
    return function (redeemersTxIns) {
        return Control_Monad_Except_Trans.runExceptT(Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(QueryM.monadQueryMExtendedAff))(Control_Monad_Except_Trans.ExceptT(reindexSpentScriptRedeemers$prime(inputs)(redeemersTxIns)))(function (redeemersTxInsReindexed) {
            return Control_Monad_Except_Trans.except(QueryM.applicativeQueryMExtended(Effect_Aff.applicativeAff))(Data_Either.Right.create(Data_Functor.map(Data_Functor.functorArray)(Data_Tuple.fst)(redeemersTxInsReindexed)));
        }));
    };
};
module.exports = {
    CannotGetTxOutRefIndexForRedeemer: CannotGetTxOutRefIndexForRedeemer,
    reindexSpentScriptRedeemers: reindexSpentScriptRedeemers,
    "reindexSpentScriptRedeemers'": reindexSpentScriptRedeemers$prime,
    genericReindexErrors_: genericReindexErrors_,
    showReindexErrors: showReindexErrors
};
