// Generated by purs version 0.14.5
"use strict";
var BalanceTx_Collateral = require("../BalanceTx.Collateral/index.js");
var BalanceTx_Error = require("../BalanceTx.Error/index.js");
var BalanceTx_ExUnitsAndMinFee = require("../BalanceTx.ExUnitsAndMinFee/index.js");
var BalanceTx_Helpers = require("../BalanceTx.Helpers/index.js");
var BalanceTx_Types = require("../BalanceTx.Types/index.js");
var BalanceTx_UtxoMinAda = require("../BalanceTx.UtxoMinAda/index.js");
var Cardano_Types_Transaction = require("../Cardano.Types.Transaction/index.js");
var Cardano_Types_Value = require("../Cardano.Types.Value/index.js");
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Control_Monad_Error_Class = require("../Control.Monad.Error.Class/index.js");
var Control_Monad_Except_Trans = require("../Control.Monad.Except.Trans/index.js");
var Control_Monad_Logger_Class = require("../Control.Monad.Logger.Class/index.js");
var Control_Monad_Reader_Class = require("../Control.Monad.Reader.Class/index.js");
var Control_Monad_Trans_Class = require("../Control.Monad.Trans.Class/index.js");
var Data_Array = require("../Data.Array/index.js");
var Data_BigInt = require("../Data.BigInt/index.js");
var Data_Either = require("../Data.Either/index.js");
var Data_Eq = require("../Data.Eq/index.js");
var Data_Foldable = require("../Data.Foldable/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Lens_Getter = require("../Data.Lens.Getter/index.js");
var Data_Lens_Internal_Forget = require("../Data.Lens.Internal.Forget/index.js");
var Data_Lens_Setter = require("../Data.Lens.Setter/index.js");
var Data_Log_Tag = require("../Data.Log.Tag/index.js");
var Data_Map_Internal = require("../Data.Map.Internal/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Monoid = require("../Data.Monoid/index.js");
var Data_Newtype = require("../Data.Newtype/index.js");
var Data_Ord = require("../Data.Ord/index.js");
var Data_Profunctor_Strong = require("../Data.Profunctor.Strong/index.js");
var Data_Semigroup = require("../Data.Semigroup/index.js");
var Data_Semiring = require("../Data.Semiring/index.js");
var Data_Set = require("../Data.Set/index.js");
var Data_Show = require("../Data.Show/index.js");
var Data_Traversable = require("../Data.Traversable/index.js");
var Data_Unfoldable = require("../Data.Unfoldable/index.js");
var Effect = require("../Effect/index.js");
var Effect_Aff = require("../Effect.Aff/index.js");
var Effect_Class = require("../Effect.Class/index.js");
var QueryM = require("../QueryM/index.js");
var QueryM_Utxos = require("../QueryM.Utxos/index.js");
var Serialization_Address = require("../Serialization.Address/index.js");
var Types_OutputDatum = require("../Types.OutputDatum/index.js");
var Types_ScriptLookups = require("../Types.ScriptLookups/index.js");
var Types_Transaction = require("../Types.Transaction/index.js");
var Types_UnbalancedTransaction = require("../Types.UnbalancedTransaction/index.js");
var Wallet = require("../Wallet/index.js");
var setTransactionMinFee = function (minFee) {
    return Data_Lens_Setter.set((function () {
        var $50 = BalanceTx_Helpers["_body'"](Data_Profunctor_Strong.strongFn);
        var $51 = Cardano_Types_Transaction["_fee"](Data_Profunctor_Strong.strongFn);
        return function ($52) {
            return $50($51($52));
        };
    })())(minFee);
};
var posValue = function (value) {
    return Cardano_Types_Value.mkValue(Cardano_Types_Value.Coin(Data_Ord.max(Data_BigInt.ordBigInt)(Cardano_Types_Value["valueToCoin'"](value))(Data_Semiring.zero(Data_BigInt.semiringBigInt))))(Cardano_Types_Value.posNonAdaAsset(Cardano_Types_Value.getNonAdaAsset(value)));
};
var mintValue = function (txBody) {
    return Data_Maybe.maybe(Data_Monoid.mempty(Cardano_Types_Value.monoidValue))((function () {
        var $53 = Cardano_Types_Value.mkValue(Data_Monoid.mempty(Cardano_Types_Value.monoidCoin));
        var $54 = Data_Newtype.unwrap();
        return function ($55) {
            return $53($54($55));
        };
    })())(Data_Lens_Getter.viewOn(txBody)(Cardano_Types_Transaction["_mint"](Data_Lens_Internal_Forget.strongForget)));
};
var minFeeValue = function (txBody) {
    return Cardano_Types_Value.mkValue(Data_Lens_Getter.viewOn(txBody)(Cardano_Types_Transaction["_fee"](Data_Lens_Internal_Forget.strongForget)))(Data_Monoid.mempty(Cardano_Types_Value.monoidNonAdaAsset));
};
var getPublicKeyTransactionInput = function (v) {
    return Data_Either.note(BalanceTx_Error.CouldNotConvertScriptOutputToTxInput.value)(Control_Bind.bind(Data_Maybe.bindMaybe)(Serialization_Address.addressPaymentCred((function (v1) {
        return v1.address;
    })(Data_Newtype.unwrap()(v.value1))))(function (paymentCred) {
        return Serialization_Address.withStakeCredential({
            onKeyHash: Data_Function["const"](Control_Applicative.pure(Data_Maybe.applicativeMaybe)(v.value0)),
            onScriptHash: Data_Function["const"](Data_Maybe.Nothing.value)
        })(paymentCred);
    }));
};
var getAmount = (function () {
    var $56 = Data_Newtype.unwrap();
    return function ($57) {
        return (function (v) {
            return v.amount;
        })($56($57));
    };
})();
var getInputValue = function (utxos) {
    return function (v) {
        return Data_Array.foldMap(Cardano_Types_Value.monoidValue)(getAmount)(Data_Array.mapMaybe(Data_Function.flip(Data_Map_Internal.lookup(Types_Transaction.ordTransactionInput))(utxos))(Data_Array.fromFoldable(Data_Set.foldableSet)((function (v1) {
            return v1.inputs;
        })(v))));
    };
};
var logTx = function (dictMonadEffect) {
    return function (dictMonadLogger) {
        return function (msg) {
            return function (utxos) {
                return function (v) {
                    return Data_Foldable.traverse_((dictMonadEffect.Monad0()).Applicative0())(Data_Foldable.foldableArray)(Control_Monad_Logger_Class.trace(dictMonadLogger)(Data_Log_Tag.tag(msg)(Data_Monoid.mempty(Data_Monoid.monoidString))))([ "Input Value: " + Data_Show.show(Cardano_Types_Value.showValue)(getInputValue(utxos)(v.body)), "Output Value: " + Data_Show.show(Cardano_Types_Value.showValue)(Data_Array.foldMap(Cardano_Types_Value.monoidValue)(getAmount)(v.body.outputs)), "Fees: " + Data_Show.show(Cardano_Types_Value.showCoin)(v.body.fee) ]);
                };
            };
        };
    };
};
var totalOutputValue = function (txBody) {
    return Data_Foldable.foldMap(Data_Foldable.foldableArray)(Cardano_Types_Value.monoidValue)(getAmount)(Data_Lens_Getter.viewOn(txBody)(Cardano_Types_Transaction["_outputs"](Data_Lens_Internal_Forget.strongForget)));
};
var collectTransactionInputs = function (originalTxIns) {
    return function (utxos) {
        return function (value) {
            var utxosToTransactionInput = (function () {
                var $58 = Data_Array.mapMaybe(function ($61) {
                    return Data_Either.hush(getPublicKeyTransactionInput($61));
                });
                var $59 = Data_Map_Internal.toUnfoldable(Data_Unfoldable.unfoldableArray);
                return function ($60) {
                    return $58($59($60));
                };
            })();
            var isSufficient = function (txIns$prime) {
                return function (txInsValue) {
                    return !Data_Array["null"](txIns$prime) && Cardano_Types_Value.geq(txInsValue)(value);
                };
            };
            var getTxInsValue = function (utxos$prime) {
                var $62 = Data_Functor.map(Data_Either.functorEither)(Data_Array.foldMap(Cardano_Types_Value.monoidValue)(getAmount));
                var $63 = Data_Traversable.traverse(Data_Traversable.traversableArray)(Data_Either.applicativeEither)(function (x) {
                    return Data_Either.note(new BalanceTx_Error.UtxoLookupFailedFor(x))(Data_Map_Internal.lookup(Types_Transaction.ordTransactionInput)(x)(utxos$prime));
                });
                return function ($64) {
                    return $62($63($64));
                };
            };
            var updatedInputs = Data_Foldable.foldl(Data_Foldable.foldableArray)(function (newTxIns) {
                return function (txIn) {
                    return Control_Bind.bind(Data_Either.bindEither)(newTxIns)(function (txIns) {
                        return Control_Bind.bind(Data_Either.bindEither)(getTxInsValue(utxos)(txIns))(function (txInsValue) {
                            var v = Data_Array.elem(Types_Transaction.eqTransactionInput)(txIn)(txIns) || isSufficient(txIns)(txInsValue);
                            if (v) {
                                return newTxIns;
                            };
                            if (!v) {
                                return Data_Either.Right.create(Data_Array.insert(Types_Transaction.ordTransactionInput)(txIn)(txIns));
                            };
                            throw new Error("Failed pattern match at BalanceTx (line 386, column 11 - line 389, column 46): " + [ v.constructor.name ]);
                        });
                    });
                };
            })(Data_Either.Right.create(Data_Array.fromFoldable(Data_Set.foldableSet)(originalTxIns)))(utxosToTransactionInput(utxos));
            return Control_Bind.bind(Data_Either.bindEither)(Control_Bind.bind(Data_Either.bindEither)(updatedInputs)(getTxInsValue(utxos)))(function (txInsValue) {
                return Control_Bind.bind(Data_Either.bindEither)(updatedInputs)(function (updatedInputs$prime) {
                    var v = isSufficient(updatedInputs$prime)(txInsValue);
                    if (v) {
                        return Control_Applicative.pure(Data_Either.applicativeEither)(Data_Set.fromFoldable(Data_Foldable.foldableArray)(Types_Transaction.ordTransactionInput)(updatedInputs$prime));
                    };
                    if (!v) {
                        return Data_Either.Left.create(new BalanceTx_Error.InsufficientTxInputs(value, txInsValue));
                    };
                    throw new Error("Failed pattern match at BalanceTx (line 374, column 3 - line 378, column 71): " + [ v.constructor.name ]);
                });
            });
        };
    };
};
var buildTransactionChangeOutput = function (changeAddress) {
    return function (utxos) {
        return function (tx) {
            var txBody = Data_Lens_Getter.viewOn(tx)(BalanceTx_Helpers["_body'"](Data_Lens_Internal_Forget.strongForget));
            var totalInputValue = getInputValue(utxos)(txBody);
            var changeValue = posValue(Cardano_Types_Value.minus(Data_Semigroup.append(Cardano_Types_Value.semigroupValue)(totalInputValue)(mintValue(txBody)))(Data_Semigroup.append(Cardano_Types_Value.semigroupValue)(totalOutputValue(txBody))(minFeeValue(txBody))));
            return {
                address: changeAddress,
                amount: changeValue,
                datum: Types_OutputDatum.NoOutputDatum.value,
                scriptRef: Data_Maybe.Nothing.value
            };
        };
    };
};
var addTransactionChangeOutput = function (changeAddress) {
    return function (utxos) {
        return function (unbalancedTx) {
            return BalanceTx_Types.PrebalancedTransaction(Data_Lens_Setter.over((function () {
                var $65 = BalanceTx_Helpers["_body'"](Data_Profunctor_Strong.strongFn);
                var $66 = Cardano_Types_Transaction["_outputs"](Data_Profunctor_Strong.strongFn);
                return function ($67) {
                    return $65($66($67));
                };
            })())(Data_Array.cons(buildTransactionChangeOutput(changeAddress)(utxos)(unbalancedTx)))(unbalancedTx));
        };
    };
};
var addLovelacesToTransactionOutput = function (coinsPerUtxoUnit) {
    return function (txOutput) {
        return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(QueryM.monadQueryMExtendedAff))(Control_Monad_Except_Trans.ExceptT(Effect_Class.liftEffect(QueryM.monadEffectQueryMExtended)(Data_Functor.mapFlipped(Effect.functorEffect)(BalanceTx_UtxoMinAda.utxoMinAdaValue(coinsPerUtxoUnit)(txOutput))(Data_Either.note(BalanceTx_Error.UtxoMinAdaValueCalculationFailed.value)))))(function (txOutputMinAda) {
            var txOutputRec = Data_Newtype.unwrap()(txOutput);
            var newCoin = Cardano_Types_Value.Coin(Data_Ord.max(Data_BigInt.ordBigInt)(Cardano_Types_Value["valueToCoin'"](txOutputRec.amount))(txOutputMinAda));
            return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(QueryM.monadQueryMExtendedAff))(Data_Newtype.wrap()((function () {
                var $38 = {};
                for (var $39 in txOutputRec) {
                    if ({}.hasOwnProperty.call(txOutputRec, $39)) {
                        $38[$39] = txOutputRec[$39];
                    };
                };
                $38.amount = Cardano_Types_Value.mkValue(newCoin)(Cardano_Types_Value.getNonAdaAsset(txOutputRec.amount));
                return $38;
            })()));
        });
    };
};
var addLovelacesToTransactionOutputs = function (unbalancedTx) {
    return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(QueryM.monadQueryMExtendedAff))(Control_Monad_Trans_Class.lift(Control_Monad_Except_Trans.monadTransExceptT)(QueryM.monadQueryMExtendedAff)(Control_Monad_Reader_Class.asks(QueryM.monadAskQueryEnvQueryMExt)((function () {
        var $68 = Data_Newtype.unwrap();
        return function ($69) {
            return (function (v) {
                return v.coinsPerUtxoUnit;
            })($68((function (v) {
                return v.pparams;
            })((function (v) {
                return v.runtime;
            })($69))));
        };
    })())))(function (coinsPerUtxoUnit) {
        return Data_Functor.map(Control_Monad_Except_Trans.functorExceptT(QueryM.functorQueryMExtended(Effect_Aff.functorAff)))(function (txOutputs) {
            return Data_Lens_Setter.set((function () {
                var $70 = BalanceTx_Helpers["_body'"](Data_Profunctor_Strong.strongFn);
                var $71 = Cardano_Types_Transaction["_outputs"](Data_Profunctor_Strong.strongFn);
                return function ($72) {
                    return $70($71($72));
                };
            })())(txOutputs)(unbalancedTx);
        })(Data_Traversable.traverse(Data_Traversable.traversableArray)(Control_Monad_Except_Trans.applicativeExceptT(QueryM.monadQueryMExtendedAff))(addLovelacesToTransactionOutput(coinsPerUtxoUnit))(Data_Lens_Getter.viewOn(unbalancedTx)((function () {
            var $73 = BalanceTx_Helpers["_body'"](Data_Lens_Internal_Forget.strongForget);
            var $74 = Cardano_Types_Transaction["_outputs"](Data_Lens_Internal_Forget.strongForget);
            return function ($75) {
                return $73($74($75));
            };
        })())));
    });
};
var addTransactionInputs = function (changeAddress) {
    return function (utxos) {
        return function (unbalancedTx) {
            var txBody = Data_Lens_Getter.viewOn(unbalancedTx)(BalanceTx_Helpers["_body'"](Data_Lens_Internal_Forget.strongForget));
            var txInputs = Data_Lens_Getter.viewOn(txBody)(Cardano_Types_Transaction["_inputs"](Data_Lens_Internal_Forget.strongForget));
            var nonMintedValue = Cardano_Types_Value.minus(totalOutputValue(txBody))(mintValue(txBody));
            return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(QueryM.monadQueryMExtendedAff))(Control_Monad_Trans_Class.lift(Control_Monad_Except_Trans.monadTransExceptT)(QueryM.monadQueryMExtendedAff)(Control_Monad_Reader_Class.asks(QueryM.monadAskQueryEnvQueryMExt)((function () {
                var $76 = Data_Newtype.unwrap();
                return function ($77) {
                    return (function (v) {
                        return v.coinsPerUtxoUnit;
                    })($76((function (v) {
                        return v.pparams;
                    })((function (v) {
                        return v.runtime;
                    })($77))));
                };
            })())))(function (coinsPerUtxoUnit) {
                return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(QueryM.monadQueryMExtendedAff))(addLovelacesToTransactionOutput(coinsPerUtxoUnit)(buildTransactionChangeOutput(changeAddress)(utxos)(unbalancedTx)))(function (txChangeOutput) {
                    var changeValue = (Data_Newtype.unwrap()(txChangeOutput)).amount;
                    var requiredInputValue = Data_Semigroup.append(Cardano_Types_Value.semigroupValue)(nonMintedValue)(Data_Semigroup.append(Cardano_Types_Value.semigroupValue)(minFeeValue(txBody))(changeValue));
                    return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(QueryM.monadQueryMExtendedAff))(Control_Monad_Except_Trans.except(QueryM.applicativeQueryMExtended(Effect_Aff.applicativeAff))(collectTransactionInputs(txInputs)(utxos)(requiredInputValue)))(function (newTxInputs) {
                        var v = Data_Eq.eq(Data_Set.eqSet(Types_Transaction.eqTransactionInput))(newTxInputs)(txInputs);
                        if (v) {
                            return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(QueryM.monadQueryMExtendedAff))(unbalancedTx);
                        };
                        if (!v) {
                            return addTransactionInputs(changeAddress)(utxos)(Data_Lens_Setter.over((function () {
                                var $78 = BalanceTx_Helpers["_body'"](Data_Profunctor_Strong.strongFn);
                                var $79 = Cardano_Types_Transaction["_inputs"](Data_Profunctor_Strong.strongFn);
                                return function ($80) {
                                    return $78($79($80));
                                };
                            })())(Data_Set.union(Types_Transaction.ordTransactionInput)(newTxInputs))(unbalancedTx));
                        };
                        throw new Error("Failed pattern match at BalanceTx (line 359, column 3 - line 364, column 69): " + [ v.constructor.name ]);
                    });
                });
            });
        };
    };
};
var runBalancer = function (utxos) {
    return function (changeAddress) {
        var mainLoop = function (iteration) {
            return function (minFee) {
                return function (unbalancedTx) {
                    var traceMainLoop = function (dictShow) {
                        return function (meta) {
                            return function (message) {
                                return function (object) {
                                    var tagMessage = "mainLoop (iteration " + (Data_Show.show(Data_Show.showInt)(iteration) + ("): " + meta));
                                    return Control_Monad_Logger_Class.trace(Control_Monad_Logger_Class.monadLoggerExceptT(QueryM.monadLoggerQueryMExtended))(Data_Log_Tag.tag(tagMessage)("^"))(message + (": " + Data_Show.show(dictShow)(object)));
                                };
                            };
                        };
                    };
                    var unbalancedTxWithMinFee = setTransactionMinFee(minFee)(unbalancedTx);
                    return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(QueryM.monadQueryMExtendedAff))(addTransactionInputs(changeAddress)(utxos)(unbalancedTxWithMinFee))(function (unbalancedTxWithInputs) {
                        return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Except_Trans.bindExceptT(QueryM.monadQueryMExtendedAff))(traceMainLoop(Types_ScriptLookups.showUnattachedUnbalancedT)("added transaction inputs")("unbalancedTxWithInputs")(unbalancedTxWithInputs))(function () {
                            var prebalancedTx = addTransactionChangeOutput(changeAddress)(utxos)(unbalancedTxWithInputs);
                            return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Except_Trans.bindExceptT(QueryM.monadQueryMExtendedAff))(traceMainLoop(BalanceTx_Types.showPrebalancedTransactio)("added transaction change output")("prebalancedTx")(prebalancedTx))(function () {
                                return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(QueryM.monadQueryMExtendedAff))(BalanceTx_ExUnitsAndMinFee.evalExUnitsAndMinFee(prebalancedTx)(utxos))(function (v) {
                                    return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Except_Trans.bindExceptT(QueryM.monadQueryMExtendedAff))(traceMainLoop(Types_ScriptLookups.showUnattachedUnbalancedT)("calculated ex units and min fee")("balancedTx")(v.value0))(function () {
                                        var v1 = Data_Eq.eq(Data_BigInt.eqBigInt)(v.value1)(minFee);
                                        if (v1) {
                                            return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(QueryM.monadQueryMExtendedAff))(Control_Monad_Trans_Class.lift(Control_Monad_Except_Trans.monadTransExceptT)(QueryM.monadQueryMExtendedAff)(BalanceTx_ExUnitsAndMinFee.finalizeTransaction(v.value0)(utxos)))(function (finalizedTransaction) {
                                                return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Except_Trans.bindExceptT(QueryM.monadQueryMExtendedAff))(traceMainLoop(BalanceTx_Types.showFinalizedTransaction)("finalized transaction")("finalizedTransaction")(finalizedTransaction))(function () {
                                                    return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(QueryM.monadQueryMExtendedAff))(finalizedTransaction);
                                                });
                                            });
                                        };
                                        if (!v1) {
                                            return mainLoop(iteration + 1 | 0)(v.value1)(unbalancedTxWithInputs);
                                        };
                                        throw new Error("Failed pattern match at BalanceTx (line 221, column 5 - line 230, column 68): " + [ v1.constructor.name ]);
                                    });
                                });
                            });
                        });
                    });
                };
            };
        };
        var $81 = Control_Bind.composeKleisliFlipped(Control_Monad_Except_Trans.bindExceptT(QueryM.monadQueryMExtendedAff))(mainLoop(1)(Data_Semiring.zero(Data_BigInt.semiringBigInt)))(addLovelacesToTransactionOutputs);
        return function ($82) {
            return Control_Monad_Except_Trans.runExceptT($81($82));
        };
    };
};
var balanceTxWithAddress = function (ownAddrs) {
    return function (unbalancedTx) {
        var unbalancedTxWithNetworkId = (function () {
            var transaction = Data_Lens_Getter.viewOn(unbalancedTx)(BalanceTx_Helpers["_transaction'"](Data_Lens_Internal_Forget.strongForget));
            return Control_Bind.bind(QueryM.bindQueryMExtended(Effect_Aff.bindAff))(Data_Maybe.maybe(Control_Monad_Reader_Class.asks(QueryM.monadAskQueryEnvQueryMExt)(function ($83) {
                return (function (v) {
                    return v.networkId;
                })((function (v) {
                    return v.config;
                })($83));
            }))(Control_Applicative.pure(QueryM.applicativeQueryMExtended(Effect_Aff.applicativeAff)))(Data_Lens_Getter.viewOn(transaction)((function () {
                var $84 = Cardano_Types_Transaction["_body"](Data_Lens_Internal_Forget.strongForget);
                var $85 = Cardano_Types_Transaction["_networkId"](Data_Lens_Internal_Forget.strongForget);
                return function ($86) {
                    return $84($85($86));
                };
            })())))(function (networkId) {
                return Control_Applicative.pure(QueryM.applicativeQueryMExtended(Effect_Aff.applicativeAff))(Data_Lens_Setter.setJust((function () {
                    var $87 = Cardano_Types_Transaction["_body"](Data_Profunctor_Strong.strongFn);
                    var $88 = Cardano_Types_Transaction["_networkId"](Data_Profunctor_Strong.strongFn);
                    return function ($89) {
                        return $87($88($89));
                    };
                })())(networkId)(transaction));
            });
        })();
        var setTransactionCollateral = function (changeAddr) {
            return function (transaction) {
                return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(QueryM.monadQueryMExtendedAff))(Control_Monad_Except_Trans.ExceptT(Data_Functor.map(QueryM.functorQueryMExtended(Effect_Aff.functorAff))(Data_Either.note(BalanceTx_Error.CouldNotGetCollateral.value))(QueryM_Utxos.getWalletCollateral)))(function (collateral) {
                    var collaterisedTx = BalanceTx_Collateral.addTxCollateral(collateral)(transaction);
                    return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(QueryM.monadQueryMExtendedAff))(Control_Monad_Reader_Class.asks(Control_Monad_Except_Trans.monadAskExceptT(QueryM.monadAskQueryEnvQueryMExt))((function () {
                        var $90 = Control_Bind.composeKleisli(Data_Maybe.bindMaybe)(function ($92) {
                            return (function (v) {
                                return v.wallet;
                            })((function (v) {
                                return v.runtime;
                            })($92));
                        })(Wallet.cip30Wallet);
                        return function ($91) {
                            return Data_Maybe.isJust($90($91));
                        };
                    })()))(function (isCip30) {
                        if (isCip30) {
                            return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(QueryM.monadQueryMExtendedAff))(collaterisedTx);
                        };
                        return BalanceTx_Collateral.addTxCollateralReturn(collateral)(collaterisedTx)(changeAddr);
                    });
                });
            };
        };
        return Control_Monad_Except_Trans.runExceptT(Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(QueryM.monadQueryMExtendedAff))(Control_Monad_Error_Class.liftMaybe(Control_Monad_Except_Trans.monadThrowExceptT(QueryM.monadQueryMExtendedAff))(BalanceTx_Error.CouldNotGetWalletAddress.value)(Data_Array.head(ownAddrs)))(function (changeAddr) {
            return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(QueryM.monadQueryMExtendedAff))(Control_Monad_Except_Trans.ExceptT(Data_Functor.mapFlipped(QueryM.functorQueryMExtended(Effect_Aff.functorAff))(Data_Traversable.traverse(Data_Traversable.traversableArray)(QueryM.applicativeQueryMExtended(Effect_Aff.applicativeAff))(QueryM_Utxos.utxosAt)(ownAddrs))((function () {
                var $93 = Data_Functor.map(Data_Either.functorEither)(Data_Foldable.foldr(Data_Foldable.foldableArray)(Data_Map_Internal.union(Types_Transaction.ordTransactionInput))(Data_Map_Internal.empty));
                var $94 = Data_Traversable.traverse(Data_Traversable.traversableArray)(Data_Either.applicativeEither)(Data_Either.note(BalanceTx_Error.CouldNotGetUtxos.value));
                return function ($95) {
                    return $93($94($95));
                };
            })())))(function (utxos) {
                return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(QueryM.monadQueryMExtendedAff))((function () {
                    var v = Data_Array["null"](Data_Lens_Getter.viewOn(unbalancedTx)(BalanceTx_Helpers["_redeemersTxIns"](Data_Lens_Internal_Forget.strongForget)));
                    if (v) {
                        return Control_Monad_Trans_Class.lift(Control_Monad_Except_Trans.monadTransExceptT)(QueryM.monadQueryMExtendedAff)(unbalancedTxWithNetworkId);
                    };
                    if (!v) {
                        return Control_Bind.bindFlipped(Control_Monad_Except_Trans.bindExceptT(QueryM.monadQueryMExtendedAff))(setTransactionCollateral(changeAddr))(Control_Monad_Trans_Class.lift(Control_Monad_Except_Trans.monadTransExceptT)(QueryM.monadQueryMExtendedAff)(unbalancedTxWithNetworkId));
                    };
                    throw new Error("Failed pattern match at BalanceTx (line 133, column 5 - line 138, column 79): " + [ v.constructor.name ]);
                })())(function (unbalancedCollTx) {
                    var allUtxos = Data_Map_Internal.union(Types_Transaction.ordTransactionInput)(utxos)(Data_Lens_Getter.viewOn(unbalancedTx)((function () {
                        var $96 = BalanceTx_Helpers["_unbalancedTx"](Data_Lens_Internal_Forget.strongForget);
                        var $97 = Types_UnbalancedTransaction["_utxoIndex"](Data_Lens_Internal_Forget.strongForget);
                        return function ($98) {
                            return $96($97($98));
                        };
                    })()));
                    return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(QueryM.monadQueryMExtendedAff))(Control_Monad_Trans_Class.lift(Control_Monad_Except_Trans.monadTransExceptT)(QueryM.monadQueryMExtendedAff)(QueryM_Utxos.filterLockedUtxos(allUtxos)))(function (availableUtxos) {
                        return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Except_Trans.bindExceptT(QueryM.monadQueryMExtendedAff))(logTx(Control_Monad_Except_Trans.monadEffectExceptT(QueryM.monadEffectQueryMExtended))(Control_Monad_Logger_Class.monadLoggerExceptT(QueryM.monadLoggerQueryMExtended))("unbalancedCollTx")(availableUtxos)(unbalancedCollTx))(function () {
                            return Control_Monad_Except_Trans.ExceptT(runBalancer(availableUtxos)(changeAddr)(Data_Lens_Setter.set(BalanceTx_Helpers["_transaction'"](Data_Profunctor_Strong.strongFn))(unbalancedCollTx)(unbalancedTx)));
                        });
                    });
                });
            });
        }));
    };
};
var balanceTx = function (unbalancedTx) {
    return Control_Bind.bind(QueryM.bindQueryMExtended(Effect_Aff.bindAff))(QueryM.getWalletAddresses)(function (v) {
        if (v instanceof Data_Maybe.Nothing) {
            return Control_Applicative.pure(QueryM.applicativeQueryMExtended(Effect_Aff.applicativeAff))(new Data_Either.Left(BalanceTx_Error.CouldNotGetWalletAddress.value));
        };
        if (v instanceof Data_Maybe.Just) {
            return balanceTxWithAddress(v.value0)(unbalancedTx);
        };
        throw new Error("Failed pattern match at BalanceTx (line 110, column 33 - line 114, column 48): " + [ v.constructor.name ]);
    });
};
module.exports = {
    balanceTx: balanceTx,
    balanceTxWithAddress: balanceTxWithAddress,
    Actual: BalanceTx_Error.Actual,
    CouldNotConvertScriptOutputToTxInput: BalanceTx_Error.CouldNotConvertScriptOutputToTxInput,
    CouldNotGetCollateral: BalanceTx_Error.CouldNotGetCollateral,
    CouldNotGetUtxos: BalanceTx_Error.CouldNotGetUtxos,
    CouldNotGetWalletAddress: BalanceTx_Error.CouldNotGetWalletAddress,
    ExUnitsEvaluationFailed: BalanceTx_Error.ExUnitsEvaluationFailed,
    InsufficientTxInputs: BalanceTx_Error.InsufficientTxInputs,
    ReindexRedeemersError: BalanceTx_Error.ReindexRedeemersError,
    UtxoLookupFailedFor: BalanceTx_Error.UtxoLookupFailedFor,
    UtxoMinAdaValueCalculationFailed: BalanceTx_Error.UtxoMinAdaValueCalculationFailed,
    Expected: BalanceTx_Error.Expected,
    printTxEvaluationFailure: BalanceTx_Error.printTxEvaluationFailure,
    FinalizedTransaction: BalanceTx_Types.FinalizedTransaction
};
