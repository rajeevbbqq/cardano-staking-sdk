// Generated by purs version 0.14.5
"use strict";
var $foreign = require("./foreign.js");
var Control_Applicative = require("../Control.Applicative/index.js");
var Data_Either = require("../Data.Either/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Variant = require("../Data.Variant/index.js");
var Effect = require("../Effect/index.js");
var Effect_Exception = require("../Effect.Exception/index.js");
var FfiHelpers = require("../FfiHelpers/index.js");
var Type_Proxy = require("../Type.Proxy/index.js");
var fromBytes$prime = function (dict) {
    return dict["fromBytes'"];
};
var fromBytes = function (dictFromBytes) {
    var $16 = fromBytes$prime(dictFromBytes);
    return function ($17) {
        return Data_Either.hush($16($17));
    };
};
var fromBytesEffect = function (dictFromBytes) {
    return function (bytes) {
        var v = fromBytes(dictFromBytes)(bytes);
        if (v instanceof Data_Maybe.Nothing) {
            return Effect_Exception["throw"]("from_bytes() call failed");
        };
        if (v instanceof Data_Maybe.Just) {
            return Control_Applicative.pure(Effect.applicativeEffect)(v.value0);
        };
        throw new Error("Failed pattern match at Deserialization.FromBytes (line 76, column 3 - line 78, column 21): " + [ v.constructor.name ]);
    };
};
var _fromBytesError = Type_Proxy["Proxy"].value;
var eh = FfiHelpers.errorHelper(Data_Variant.inj()({
    reflectSymbol: function () {
        return "fromBytesError";
    }
})(_fromBytesError));
var fromBytesDataHash = {
    "fromBytes'": $foreign["_fromBytesDataHash"](eh)
};
var fromBytesMint = {
    "fromBytes'": $foreign["_fromBytesMint"](eh)
};
var fromBytesNativeScript = {
    "fromBytes'": $foreign["_fromBytesNativeScript"](eh)
};
var fromBytesPlutusData = {
    "fromBytes'": $foreign["_fromBytesPlutusData"](eh)
};
var fromBytesTransaction = {
    "fromBytes'": $foreign["_fromBytesTransaction"](eh)
};
var fromBytesTransactionHash = {
    "fromBytes'": $foreign["_fromBytesTransactionHash"](eh)
};
var fromBytesTransactionUnspe = {
    "fromBytes'": $foreign["_fromBytesTransactionUnspentOutput"](eh)
};
var fromBytesTransactionWitne = {
    "fromBytes'": $foreign["_fromBytesTransactionWitnessSet"](eh)
};
var fromBytesVRFKeyHash = {
    "fromBytes'": $foreign["_fromBytesVRFKeyHash"](eh)
};
var fromBytesValue = {
    "fromBytes'": $foreign["_fromBytesValue"](eh)
};
var fromBytesError = (function () {
    var $18 = Data_Variant.inj()({
        reflectSymbol: function () {
            return "fromBytesError";
        }
    })(_fromBytesError);
    return function ($19) {
        return Data_Either.Left.create($18($19));
    };
})();
module.exports = {
    "_fromBytesError": _fromBytesError,
    fromBytesError: fromBytesError,
    "fromBytes'": fromBytes$prime,
    fromBytes: fromBytes,
    fromBytesEffect: fromBytesEffect,
    fromBytesDataHash: fromBytesDataHash,
    fromBytesTransaction: fromBytesTransaction,
    fromBytesTransactionHash: fromBytesTransactionHash,
    fromBytesPlutusData: fromBytesPlutusData,
    fromBytesTransactionUnspe: fromBytesTransactionUnspe,
    fromBytesTransactionWitne: fromBytesTransactionWitne,
    fromBytesNativeScript: fromBytesNativeScript,
    fromBytesMint: fromBytesMint,
    fromBytesVRFKeyHash: fromBytesVRFKeyHash,
    fromBytesValue: fromBytesValue
};
