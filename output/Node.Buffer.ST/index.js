// Generated by purs version 0.14.5
"use strict";
var Control_Bind = require("../Control.Bind/index.js");
var Control_Monad_ST_Internal = require("../Control.Monad.ST.Internal/index.js");
var Node_Buffer_Class = require("../Node.Buffer.Class/index.js");
var Node_Buffer_Internal = require("../Node.Buffer.Internal/index.js");
var mutableBufferST = {
    create: Node_Buffer_Internal.create(Control_Monad_ST_Internal.monadST),
    freeze: Node_Buffer_Internal.copyAll,
    unsafeFreeze: Node_Buffer_Internal.unsafeFreeze(Control_Monad_ST_Internal.monadST),
    thaw: Node_Buffer_Internal.copyAll,
    unsafeThaw: Node_Buffer_Internal.unsafeThaw(Control_Monad_ST_Internal.monadST),
    fromArray: Node_Buffer_Internal.fromArray(Control_Monad_ST_Internal.monadST),
    fromString: Node_Buffer_Internal.fromString(Control_Monad_ST_Internal.monadST),
    fromArrayBuffer: Node_Buffer_Internal.fromArrayBuffer(Control_Monad_ST_Internal.monadST),
    toArrayBuffer: Node_Buffer_Internal.toArrayBuffer(Control_Monad_ST_Internal.monadST),
    read: Node_Buffer_Internal.read(Control_Monad_ST_Internal.monadST),
    readString: Node_Buffer_Internal.readString(Control_Monad_ST_Internal.monadST),
    toString: Node_Buffer_Internal.toString(Control_Monad_ST_Internal.monadST),
    write: Node_Buffer_Internal.write(Control_Monad_ST_Internal.monadST),
    writeString: Node_Buffer_Internal.writeString(Control_Monad_ST_Internal.monadST),
    toArray: Node_Buffer_Internal.toArray(Control_Monad_ST_Internal.monadST),
    getAtOffset: Node_Buffer_Internal.getAtOffset(Control_Monad_ST_Internal.monadST),
    setAtOffset: Node_Buffer_Internal.setAtOffset,
    slice: Node_Buffer_Internal.slice,
    size: Node_Buffer_Internal.size(Control_Monad_ST_Internal.monadST),
    concat: Node_Buffer_Internal.concat,
    "concat'": Node_Buffer_Internal["concat'"](Control_Monad_ST_Internal.monadST),
    copy: Node_Buffer_Internal.copy,
    fill: Node_Buffer_Internal.fill,
    Monad0: function () {
        return Control_Monad_ST_Internal.monadST;
    }
};
var run = function (st) {
    return Control_Bind.bind(Control_Monad_ST_Internal.bindST)(st)(Node_Buffer_Class.unsafeFreeze(mutableBufferST))();
};
module.exports = {
    run: run,
    mutableBufferST: mutableBufferST
};
