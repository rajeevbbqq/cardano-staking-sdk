// Generated by purs version 0.14.5
"use strict";
var Control_Alt = require("../Control.Alt/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Data_Eq = require("../Data.Eq/index.js");
var Effect_Console = require("../Effect.Console/index.js");
var Test_QuickCheck = require("../Test.QuickCheck/index.js");
var Test_QuickCheck_Arbitrary = require("../Test.QuickCheck.Arbitrary/index.js");
var Test_QuickCheck_Laws = require("../Test.QuickCheck.Laws/index.js");
var checkMonadPlus = function (dictMonadPlus) {
    return function (dictArbitrary) {
        return function (dictArbitrary1) {
            return function (dictEq) {
                return function (v) {
                    var distributivity = function (x) {
                        return function (y) {
                            return function (f) {
                                return Data_Eq.eq(dictEq)(Control_Bind.bind((dictMonadPlus.Monad0()).Bind1())(Control_Alt.alt(((dictMonadPlus.Alternative1()).Plus1()).Alt0())(x)(y))(f))(Control_Alt.alt(((dictMonadPlus.Alternative1()).Plus1()).Alt0())(Control_Bind.bind((dictMonadPlus.Monad0()).Bind1())(x)(f))(Control_Bind.bind((dictMonadPlus.Monad0()).Bind1())(y)(f)));
                            };
                        };
                    };
                    return function __do() {
                        Effect_Console.log("Checking 'Distributivity' law for MonadPlus")();
                        return Test_QuickCheck["quickCheck'"](Test_QuickCheck.testableFunction(dictArbitrary)(Test_QuickCheck.testableFunction(dictArbitrary)(Test_QuickCheck.testableFunction(Test_QuickCheck_Arbitrary.arbFunction(Test_QuickCheck_Laws.coarbitraryA)(dictArbitrary1))(Test_QuickCheck.testableBoolean))))(1000)(distributivity)();
                    };
                };
            };
        };
    };
};
module.exports = {
    checkMonadPlus: checkMonadPlus
};
