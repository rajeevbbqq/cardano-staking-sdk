// Generated by purs version 0.14.5
"use strict";
var Data_Argonaut_Core = require("../Data.Argonaut.Core/index.js");
var Data_Foldable = require("../Data.Foldable/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Int = require("../Data.Int/index.js");
var Data_JSDate = require("../Data.JSDate/index.js");
var Data_Log_Level = require("../Data.Log.Level/index.js");
var Data_Log_Tag = require("../Data.Log.Tag/index.js");
var Data_Map_Internal = require("../Data.Map.Internal/index.js");
var Data_Unfoldable = require("../Data.Unfoldable/index.js");
var Foreign_Object = require("../Foreign.Object/index.js");
var levelCode = function (v) {
    if (v instanceof Data_Log_Level.Trace) {
        return 0;
    };
    if (v instanceof Data_Log_Level.Debug) {
        return 1;
    };
    if (v instanceof Data_Log_Level.Info) {
        return 2;
    };
    if (v instanceof Data_Log_Level.Warn) {
        return 3;
    };
    if (v instanceof Data_Log_Level["Error"]) {
        return 4;
    };
    throw new Error("Failed pattern match at Data.Log.Formatter.JSON (line 58, column 1 - line 58, column 29): " + [ v.constructor.name ]);
};
var toJson = function (set) {
    return Data_Argonaut_Core.fromObject(Foreign_Object.fromFoldable(Data_Foldable.foldableArray)(jsonify(set)));
};
var jsonify = function (set) {
    return Data_Map_Internal.toUnfoldable(Data_Unfoldable.unfoldableArray)(Data_Functor.map(Data_Map_Internal.functorMap)(fieldToJson)(set));
};
var fieldToJson = function (v) {
    if (v instanceof Data_Log_Tag.StringTag) {
        return Data_Argonaut_Core.fromString(v.value0);
    };
    if (v instanceof Data_Log_Tag.IntTag) {
        return Data_Argonaut_Core.fromNumber(Data_Int.toNumber(v.value0));
    };
    if (v instanceof Data_Log_Tag.NumberTag) {
        return Data_Argonaut_Core.fromNumber(v.value0);
    };
    if (v instanceof Data_Log_Tag.BooleanTag) {
        return Data_Argonaut_Core.fromBoolean(v.value0);
    };
    if (v instanceof Data_Log_Tag.JSDateTag) {
        return Data_Argonaut_Core.fromNumber(Data_JSDate.getTime(v.value0));
    };
    if (v instanceof Data_Log_Tag.TagSetTag) {
        return toJson(v.value0);
    };
    throw new Error("Failed pattern match at Data.Log.Formatter.JSON (line 50, column 1 - line 50, column 27): " + [ v.constructor.name ]);
};
var buildPayload = function (v) {
    return Data_Log_Tag.fromArray([ Data_Log_Tag.intTag("level")(levelCode(v.level)), Data_Log_Tag.jsDateTag("ts")(v.timestamp), Data_Log_Tag.tag("message")(v.message), (function () {
        var $12 = Data_Map_Internal.isEmpty(v.tags);
        if ($12) {
            return Data_Map_Internal.empty;
        };
        return Data_Log_Tag.tagSetTag("tags")(v.tags);
    })() ]);
};
var jsonFormatter = function ($17) {
    return Data_Argonaut_Core.stringify(toJson(buildPayload($17)));
};
module.exports = {
    jsonFormatter: jsonFormatter
};
