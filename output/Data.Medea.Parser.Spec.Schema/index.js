// Generated by purs version 0.14.5
"use strict";
var Control_Apply = require("../Control.Apply/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Data_Eq = require("../Data.Eq/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Identity = require("../Data.Identity/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Medea_Parser_Permutation = require("../Data.Medea.Parser.Permutation/index.js");
var Data_Medea_Parser_Primitive = require("../Data.Medea.Parser.Primitive/index.js");
var Data_Medea_Parser_Spec_Array = require("../Data.Medea.Parser.Spec.Array/index.js");
var Data_Medea_Parser_Spec_Object = require("../Data.Medea.Parser.Spec.Object/index.js");
var Data_Medea_Parser_Spec_String = require("../Data.Medea.Parser.Spec.String/index.js");
var Data_Medea_Parser_Spec_Type = require("../Data.Medea.Parser.Spec.Type/index.js");
var Text_Parsing_Parser = require("../Text.Parsing.Parser/index.js");
var Text_Parsing_Parser_Combinators = require("../Text.Parsing.Parser.Combinators/index.js");
var Specification = (function () {
    function Specification(value0) {
        this.value0 = value0;
    };
    Specification.create = function (value0) {
        return new Specification(value0);
    };
    return Specification;
})();
var name = function (v) {
    return v.value0.name;
};
var mkSpec = function (n) {
    return function (t) {
        return function (sv) {
            return function (a) {
                return function (o) {
                    return new Specification({
                        name: n,
                        types: t,
                        stringVals: sv,
                        array: a,
                        object: o
                    });
                };
            };
        };
    };
};
var parseSpecification = Control_Bind.bind(Text_Parsing_Parser.bindParserT(Data_Identity.monadIdentity))(Data_Medea_Parser_Primitive.parseLine(0)(Data_Medea_Parser_Primitive.parseKeyVal(Data_Medea_Parser_Primitive.RSchema.value)(Data_Medea_Parser_Primitive.parseIdentifier)))(function (schemaName) {
    return Data_Medea_Parser_Permutation.runPermutation(Text_Parsing_Parser.alternativeParserT(Data_Identity.monadIdentity))(Text_Parsing_Parser.monadParserT(Data_Identity.monadIdentity))(Control_Apply.apply(Data_Medea_Parser_Permutation.applyPermutation(Text_Parsing_Parser.alternativeParserT(Data_Identity.monadIdentity)))(Control_Apply.apply(Data_Medea_Parser_Permutation.applyPermutation(Text_Parsing_Parser.alternativeParserT(Data_Identity.monadIdentity)))(Control_Apply.apply(Data_Medea_Parser_Permutation.applyPermutation(Text_Parsing_Parser.alternativeParserT(Data_Identity.monadIdentity)))(Data_Functor.map(Data_Medea_Parser_Permutation.functorPermutation(Text_Parsing_Parser.functorParserT(Data_Identity.functorIdentity)))(mkSpec(schemaName))(Data_Medea_Parser_Permutation.toPermutationWithDefault(Text_Parsing_Parser.alternativeParserT(Data_Identity.monadIdentity))(Data_Medea_Parser_Spec_Type.defaultSpec)(Text_Parsing_Parser_Combinators["try"](Data_Identity.monadIdentity)(Data_Medea_Parser_Spec_Type.parseSpecification))))(Data_Medea_Parser_Permutation.toPermutationWithDefault(Text_Parsing_Parser.alternativeParserT(Data_Identity.monadIdentity))(Data_Medea_Parser_Spec_String.defaultSpec)(Text_Parsing_Parser_Combinators["try"](Data_Identity.monadIdentity)(Data_Medea_Parser_Spec_String.parseSpecification))))(Data_Medea_Parser_Permutation.toPermutationWithDefault(Text_Parsing_Parser.alternativeParserT(Data_Identity.monadIdentity))(Data_Medea_Parser_Spec_Array.defaultSpec)(Text_Parsing_Parser_Combinators["try"](Data_Identity.monadIdentity)(Data_Medea_Parser_Spec_Array.parseSpecification))))(Data_Medea_Parser_Permutation.toPermutationWithDefault(Text_Parsing_Parser.alternativeParserT(Data_Identity.monadIdentity))(Data_Maybe.Nothing.value)(Data_Functor.map(Text_Parsing_Parser.functorParserT(Data_Identity.functorIdentity))(Data_Maybe.Just.create)(Text_Parsing_Parser_Combinators["try"](Data_Identity.monadIdentity)(Data_Medea_Parser_Spec_Object.parseSpecification)))));
});
var eqSpecification = {
    eq: function (x) {
        return function (y) {
            return Data_Eq.eq(Data_Medea_Parser_Spec_Array.eqSpecification)(x.value0.array)(y.value0.array) && Data_Eq.eq(Data_Medea_Parser_Primitive.eqIdentifier)(x.value0.name)(y.value0.name) && Data_Eq.eq(Data_Maybe.eqMaybe(Data_Medea_Parser_Spec_Object.eqSpecification))(x.value0.object)(y.value0.object) && Data_Eq.eq(Data_Medea_Parser_Spec_String.eqSpecification)(x.value0.stringVals)(y.value0.stringVals) && Data_Eq.eq(Data_Medea_Parser_Spec_Type.eqSpecification)(x.value0.types)(y.value0.types);
        };
    }
};
module.exports = {
    Specification: Specification,
    parseSpecification: parseSpecification,
    mkSpec: mkSpec,
    name: name,
    eqSpecification: eqSpecification
};
