// Generated by purs version 0.14.5
"use strict";
var Control_Alt = require("../Control.Alt/index.js");
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Apply = require("../Control.Apply/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Data_Array = require("../Data.Array/index.js");
var Data_BigInt = require("../Data.BigInt/index.js");
var Data_Either = require("../Data.Either/index.js");
var Data_Eq = require("../Data.Eq/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Generic_Rep = require("../Data.Generic.Rep/index.js");
var Data_List_Types = require("../Data.List.Types/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Newtype = require("../Data.Newtype/index.js");
var Data_NonEmpty = require("../Data.NonEmpty/index.js");
var Data_Ratio = require("../Data.Ratio/index.js");
var Data_Semiring = require("../Data.Semiring/index.js");
var Data_Show = require("../Data.Show/index.js");
var Data_Show_Generic = require("../Data.Show.Generic/index.js");
var Data_Symbol = require("../Data.Symbol/index.js");
var Data_TextDecoder = require("../Data.TextDecoder/index.js");
var Data_Traversable = require("../Data.Traversable/index.js");
var Data_Tuple = require("../Data.Tuple/index.js");
var Data_Unfoldable = require("../Data.Unfoldable/index.js");
var Data_Unit = require("../Data.Unit/index.js");
var Helpers = require("../Helpers/index.js");
var Record = require("../Record/index.js");
var Type_Proxy = require("../Type.Proxy/index.js");
var TypeLevel_Nat = require("../TypeLevel.Nat/index.js");
var Types_BigNum = require("../Types.BigNum/index.js");
var Types_PlutusData = require("../Types.PlutusData/index.js");
var ArgsWantedButGot = (function () {
    function ArgsWantedButGot(value0, value1, value2) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
    };
    ArgsWantedButGot.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return new ArgsWantedButGot(value0, value1, value2);
            };
        };
    };
    return ArgsWantedButGot;
})();
var FromDataFailed = (function () {
    function FromDataFailed(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    FromDataFailed.create = function (value0) {
        return function (value1) {
            return new FromDataFailed(value0, value1);
        };
    };
    return FromDataFailed;
})();
var BigIntToIntFailed = (function () {
    function BigIntToIntFailed(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    BigIntToIntFailed.create = function (value0) {
        return function (value1) {
            return new BigIntToIntFailed(value0, value1);
        };
    };
    return BigIntToIntFailed;
})();
var IndexWantedButGot = (function () {
    function IndexWantedButGot(value0, value1, value2) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
    };
    IndexWantedButGot.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return new IndexWantedButGot(value0, value1, value2);
            };
        };
    };
    return IndexWantedButGot;
})();
var WantedConstrGot = (function () {
    function WantedConstrGot(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    WantedConstrGot.create = function (value0) {
        return function (value1) {
            return new WantedConstrGot(value0, value1);
        };
    };
    return WantedConstrGot;
})();
var genericFromDataError_ = {
    to: function (x) {
        if (x instanceof Data_Generic_Rep.Inl) {
            return new ArgsWantedButGot(x.value0.value0, x.value0.value1.value0, x.value0.value1.value1);
        };
        if (x instanceof Data_Generic_Rep.Inr && x.value0 instanceof Data_Generic_Rep.Inl) {
            return new FromDataFailed(x.value0.value0.value0, x.value0.value0.value1);
        };
        if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0 instanceof Data_Generic_Rep.Inl)) {
            return new BigIntToIntFailed(x.value0.value0.value0.value0, x.value0.value0.value0.value1);
        };
        if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0 instanceof Data_Generic_Rep.Inl))) {
            return new IndexWantedButGot(x.value0.value0.value0.value0.value0, x.value0.value0.value0.value0.value1.value0, x.value0.value0.value0.value0.value1.value1);
        };
        if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0 instanceof Data_Generic_Rep.Inr))) {
            return new WantedConstrGot(x.value0.value0.value0.value0.value0, x.value0.value0.value0.value0.value1);
        };
        throw new Error("Failed pattern match at FromData (line 67, column 1 - line 67, column 42): " + [ x.constructor.name ]);
    },
    from: function (x) {
        if (x instanceof ArgsWantedButGot) {
            return new Data_Generic_Rep.Inl(new Data_Generic_Rep.Product(x.value0, new Data_Generic_Rep.Product(x.value1, x.value2)));
        };
        if (x instanceof FromDataFailed) {
            return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(new Data_Generic_Rep.Product(x.value0, x.value1)));
        };
        if (x instanceof BigIntToIntFailed) {
            return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(new Data_Generic_Rep.Product(x.value0, x.value1))));
        };
        if (x instanceof IndexWantedButGot) {
            return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(new Data_Generic_Rep.Product(x.value0, new Data_Generic_Rep.Product(x.value1, x.value2))))));
        };
        if (x instanceof WantedConstrGot) {
            return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Product(x.value0, x.value1)))));
        };
        throw new Error("Failed pattern match at FromData (line 67, column 1 - line 67, column 42): " + [ x.constructor.name ]);
    }
};
var showFromDataError = {
    show: Data_Show_Generic.genericShow(genericFromDataError_)(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsProduct(Data_Show_Generic.genericShowArgsArgument(Data_Show.showString))(Data_Show_Generic.genericShowArgsProduct(Data_Show_Generic.genericShowArgsArgument(Data_Show.showInt))(Data_Show_Generic.genericShowArgsArgument(Data_Show.showArray(Types_PlutusData.showPlutusData)))))({
        reflectSymbol: function () {
            return "ArgsWantedButGot";
        }
    }))(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsProduct(Data_Show_Generic.genericShowArgsArgument(Data_Show.showString))(Data_Show_Generic.genericShowArgsArgument(Types_PlutusData.showPlutusData)))({
        reflectSymbol: function () {
            return "FromDataFailed";
        }
    }))(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsProduct(Data_Show_Generic.genericShowArgsArgument(Data_Show.showString))(Data_Show_Generic.genericShowArgsArgument(Data_BigInt.showBigInt)))({
        reflectSymbol: function () {
            return "BigIntToIntFailed";
        }
    }))(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsProduct(Data_Show_Generic.genericShowArgsArgument(Data_Show.showString))(Data_Show_Generic.genericShowArgsProduct(Data_Show_Generic.genericShowArgsArgument(Data_Show.showInt))(Data_Show_Generic.genericShowArgsArgument(Data_Show.showInt))))({
        reflectSymbol: function () {
            return "IndexWantedButGot";
        }
    }))(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsProduct(Data_Show_Generic.genericShowArgsArgument(Data_Show.showString))(Data_Show_Generic.genericShowArgsArgument(Types_PlutusData.showPlutusData)))({
        reflectSymbol: function () {
            return "WantedConstrGot";
        }
    }))))))
};
var fromDataVoid = {
    fromData: function (v) {
        return Data_Maybe.Nothing.value;
    }
};
var fromDataUnit = {
    fromData: function (v) {
        if (v instanceof Types_PlutusData.Constr && (v.value1.length === 0 && Data_Eq.eq(Data_BigInt.eqBigInt)(v.value0)(Data_Semiring.zero(Data_BigInt.semiringBigInt)))) {
            return new Data_Maybe.Just(Data_Unit.unit);
        };
        return Data_Maybe.Nothing.value;
    }
};
var fromDataUInt = {
    fromData: function (v) {
        if (v instanceof Types_PlutusData.Integer) {
            return Helpers.bigIntToUInt(v.value0);
        };
        return Data_Maybe.Nothing.value;
    }
};
var fromDataString = {
    fromData: function (v) {
        if (v instanceof Types_PlutusData.Bytes) {
            return Data_Either.hush(Data_TextDecoder.decodeUtf8(Data_Newtype.unwrap()(v.value0)));
        };
        return Data_Maybe.Nothing.value;
    }
};
var fromDataPlutusData = {
    fromData: Data_Maybe.Just.create
};
var fromDataInt = function (dictFail) {
    return {
        fromData: function (v) {
            return Data_Maybe.Nothing.value;
        }
    };
};
var fromDataByteArray = {
    fromData: function (v) {
        if (v instanceof Types_PlutusData.Bytes) {
            return new Data_Maybe.Just(v.value0);
        };
        return Data_Maybe.Nothing.value;
    }
};
var fromDataBoolean = {
    fromData: function (v) {
        if (v instanceof Types_PlutusData.Constr && v.value1.length === 0) {
            if (Data_Eq.eq(Data_BigInt.eqBigInt)(v.value0)(Data_Semiring.zero(Data_BigInt.semiringBigInt))) {
                return new Data_Maybe.Just(false);
            };
            if (Data_Eq.eq(Data_BigInt.eqBigInt)(v.value0)(Data_Semiring.one(Data_BigInt.semiringBigInt))) {
                return new Data_Maybe.Just(true);
            };
        };
        return Data_Maybe.Nothing.value;
    }
};
var fromDataBigNum = {
    fromData: function (v) {
        if (v instanceof Types_PlutusData.Integer) {
            return Types_BigNum.fromBigInt(v.value0);
        };
        return Data_Maybe.Nothing.value;
    }
};
var fromDataBigInt = {
    fromData: function (v) {
        if (v instanceof Types_PlutusData.Integer) {
            return new Data_Maybe.Just(v.value0);
        };
        return Data_Maybe.Nothing.value;
    }
};
var fromDataArgsRLNilRow = {
    fromDataArgsRec: function (dictIsSymbol) {
        return function (v) {
            return function (v1) {
                return function (v2) {
                    return function (v3) {
                        if (v3.length === 0) {
                            return new Data_Either.Right({
                                head: {},
                                tail: [  ]
                            });
                        };
                        return Data_Either.Left.create(new ArgsWantedButGot(Data_Symbol.reflectSymbol(dictIsSymbol)(v1), 0, v3));
                    };
                };
            };
        };
    }
};
var fromDataArgsNoArguments = {
    fromDataArgs: function (dictIsSymbol) {
        return function (v) {
            return function (v1) {
                return function (v2) {
                    if (v2.length === 0) {
                        return new Data_Either.Right({
                            head: Data_Generic_Rep.NoArguments.value,
                            tail: [  ]
                        });
                    };
                    return Data_Either.Left.create(new ArgsWantedButGot(Data_Symbol.reflectSymbol(dictIsSymbol)(v1), 0, v2));
                };
            };
        };
    }
};
var noteB = function (v) {
    return function (v1) {
        if (v1) {
            return Control_Applicative.pure(Data_Either.applicativeEither)(Data_Unit.unit);
        };
        if (!v1) {
            return new Data_Either.Left(v);
        };
        throw new Error("Failed pattern match at FromData (line 72, column 1 - line 72, column 59): " + [ v.constructor.name, v1.constructor.name ]);
    };
};
var fromDataWithSchema = function (dict) {
    return dict.fromDataWithSchema;
};
var genericFromData = function (dictGeneric) {
    return function (dictFromDataWithSchema) {
        return function (pd) {
            return Data_Functor.map(Data_Maybe.functorMaybe)(Data_Generic_Rep.to(dictGeneric))(Data_Either.hush(fromDataWithSchema(dictFromDataWithSchema)(Type_Proxy["Proxy"].value)(Type_Proxy["Proxy"].value)(pd)));
        };
    };
};
var fromDataWithSchemaArgumen = function (dictFromDataWithSchema) {
    return {
        fromDataWithSchema: function (v) {
            return function (v1) {
                return function (pd) {
                    return Data_Functor.map(Data_Either.functorEither)(Data_Generic_Rep.Argument)(fromDataWithSchema(dictFromDataWithSchema)(Type_Proxy["Proxy"].value)(Type_Proxy["Proxy"].value)(pd));
                };
            };
        }
    };
};
var fromDataWithSchemaSum = function (dictFromDataWithSchema) {
    return function (dictFromDataWithSchema1) {
        return {
            fromDataWithSchema: function (v) {
                return function (v1) {
                    return function (pd) {
                        return Control_Alt.alt(Data_Either.altEither)(Data_Functor.map(Data_Either.functorEither)(Data_Generic_Rep.Inl.create)(fromDataWithSchema(dictFromDataWithSchema)(Type_Proxy["Proxy"].value)(Type_Proxy["Proxy"].value)(pd)))(Data_Functor.map(Data_Either.functorEither)(Data_Generic_Rep.Inr.create)(fromDataWithSchema(dictFromDataWithSchema1)(Type_Proxy["Proxy"].value)(Type_Proxy["Proxy"].value)(pd)));
                    };
                };
            }
        };
    };
};
var fromDataArgsRec = function (dict) {
    return dict.fromDataArgsRec;
};
var fromDataArgsArgumentRecor = function (dictFromDataArgsRL) {
    return function (dictHasPlutusSchema) {
        return function (dictValidPlutusSchema) {
            return function (dictGetWithLabel) {
                return {
                    fromDataArgs: function (dictIsSymbol) {
                        return function (v) {
                            return function (v1) {
                                return function (pdArgs) {
                                    return Control_Bind.bind(Data_Either.bindEither)(fromDataArgsRec(dictFromDataArgsRL)(dictIsSymbol)(Type_Proxy["Proxy"].value)(Type_Proxy["Proxy"].value)(Type_Proxy["Proxy"].value)(pdArgs))(function (v2) {
                                        return Control_Applicative.pure(Data_Either.applicativeEither)({
                                            head: v2.head,
                                            tail: v2.tail
                                        });
                                    });
                                };
                            };
                        };
                    }
                };
            };
        };
    };
};
var fromDataArgs = function (dict) {
    return dict.fromDataArgs;
};
var fromDataArgsProduct = function (dictFromDataArgs) {
    return function (dictFromDataArgs1) {
        return {
            fromDataArgs: function (dictIsSymbol) {
                return function (v) {
                    return function (v1) {
                        return function (pdArgs) {
                            return Control_Bind.bind(Data_Either.bindEither)(fromDataArgs(dictFromDataArgs)(dictIsSymbol)(Type_Proxy["Proxy"].value)(Type_Proxy["Proxy"].value)(pdArgs))(function (v2) {
                                return Control_Bind.bind(Data_Either.bindEither)(fromDataArgs(dictFromDataArgs1)(dictIsSymbol)(Type_Proxy["Proxy"].value)(Type_Proxy["Proxy"].value)(v2.tail))(function (v3) {
                                    return Control_Applicative.pure(Data_Either.applicativeEither)({
                                        head: new Data_Generic_Rep.Product(v2.head, v3.head),
                                        tail: v3.tail
                                    });
                                });
                            });
                        };
                    };
                };
            }
        };
    };
};
var fromDataWithSchemaConstru = function (dictIsSymbol) {
    return function (dictHasPlutusSchema) {
        return function (dictValidPlutusSchema) {
            return function (dictGetIndexWithLabel) {
                return function (dictFromDataArgs) {
                    return function (dictKnownNat) {
                        return {
                            fromDataWithSchema: function (v) {
                                return function (v1) {
                                    return function (v2) {
                                        if (v2 instanceof Types_PlutusData.Constr) {
                                            var constrName = Data_Symbol.reflectSymbol(dictGetIndexWithLabel.IsSymbol0())(Type_Proxy["Proxy"].value);
                                            return Control_Bind.bind(Data_Either.bindEither)(Data_Either.note(new BigIntToIntFailed(constrName, v2.value0))(Data_BigInt.toInt(v2.value0)))(function (gotIx) {
                                                return Control_Bind.bind(Data_Either.bindEither)(Control_Applicative.pure(Data_Either.applicativeEither)(TypeLevel_Nat.natVal(dictKnownNat)(Type_Proxy["Proxy"].value)))(function (wantedIx) {
                                                    return Control_Bind.discard(Control_Bind.discardUnit)(Data_Either.bindEither)(noteB(new IndexWantedButGot(constrName, wantedIx, gotIx))(wantedIx === gotIx))(function () {
                                                        return Control_Bind.bind(Data_Either.bindEither)(fromDataArgs(dictFromDataArgs)(dictGetIndexWithLabel.IsSymbol0())(Type_Proxy["Proxy"].value)(Type_Proxy["Proxy"].value)(v2.value1))(function (v3) {
                                                            return Control_Bind.discard(Control_Bind.discardUnit)(Data_Either.bindEither)(noteB(new ArgsWantedButGot(constrName, 0, v3.tail))(Data_Eq.eq(Data_Eq.eqArray(Types_PlutusData.eqPlutusData))(v3.tail)([  ])))(function () {
                                                                return Control_Applicative.pure(Data_Either.applicativeEither)(v3.head);
                                                            });
                                                        });
                                                    });
                                                });
                                            });
                                        };
                                        return Data_Either.Left.create(new WantedConstrGot(Data_Symbol.reflectSymbol(dictGetIndexWithLabel.IsSymbol0())(Type_Proxy["Proxy"].value), v2));
                                    };
                                };
                            }
                        };
                    };
                };
            };
        };
    };
};
var fromData = function (dict) {
    return dict.fromData;
};
var fromDataUnfoldable = function (dictUnfoldable) {
    return function (dictFromData) {
        return function (v) {
            if (v instanceof Types_PlutusData.List) {
                return Data_Functor.map(Data_Maybe.functorMaybe)(Data_Array.toUnfoldable(dictUnfoldable))(Data_Traversable.traverse(Data_Traversable.traversableArray)(Data_Maybe.applicativeMaybe)(fromData(dictFromData))(v.value0));
            };
            return Data_Maybe.Nothing.value;
        };
    };
};
var fromDataArray = function (dictFromData) {
    return {
        fromData: fromDataUnfoldable(Data_Unfoldable.unfoldableArray)(dictFromData)
    };
};
var fromDataList = function (dictFromData) {
    return {
        fromData: fromDataUnfoldable(Data_List_Types.unfoldableList)(dictFromData)
    };
};
var fromDataArgsArgument = function (dictFromData) {
    return {
        fromDataArgs: function (dictIsSymbol) {
            return function (v) {
                return function (v1) {
                    return function (pdArgs) {
                        var constrName = Data_Symbol.reflectSymbol(dictIsSymbol)(Type_Proxy["Proxy"].value);
                        return Control_Bind.bind(Data_Either.bindEither)(Data_Either.note(new ArgsWantedButGot(constrName, 1, pdArgs))(Data_Array.uncons(pdArgs)))(function (v2) {
                            return Control_Bind.bind(Data_Either.bindEither)(Data_Either.note(new FromDataFailed(constrName, v2.head))(fromData(dictFromData)(v2.head)))(function (repArg) {
                                return Control_Applicative.pure(Data_Either.applicativeEither)({
                                    head: repArg,
                                    tail: v2.tail
                                });
                            });
                        });
                    };
                };
            };
        }
    };
};
var fromDataArgsRLCons = function (dictFromData) {
    return function (dictFromDataArgsRL) {
        return function (dictLacks) {
            return function (dictCons) {
                return function (dictIsSymbol) {
                    return {
                        fromDataArgsRec: function (dictIsSymbol1) {
                            return function (v) {
                                return function (c) {
                                    return function (v1) {
                                        return function (pdArgs) {
                                            return Control_Bind.bind(Data_Either.bindEither)(Data_Either.note(new ArgsWantedButGot(Data_Symbol.reflectSymbol(dictIsSymbol1)(c), 1, pdArgs))(Data_Array.uncons(pdArgs)))(function (v2) {
                                                return Control_Bind.bind(Data_Either.bindEither)(Data_Either.note(new FromDataFailed(Data_Symbol.reflectSymbol(dictIsSymbol1)(c), v2.head))(fromData(dictFromData)(v2.head)))(function (field) {
                                                    return Control_Bind.bind(Data_Either.bindEither)(fromDataArgsRec(dictFromDataArgsRL)(dictIsSymbol1)(Type_Proxy["Proxy"].value)(Type_Proxy["Proxy"].value)(Type_Proxy["Proxy"].value)(v2.tail))(function (v3) {
                                                        return Control_Applicative.pure(Data_Either.applicativeEither)({
                                                            head: Record.insert(dictIsSymbol)()()(Type_Proxy["Proxy"].value)(field)(v3.head),
                                                            tail: v3.tail
                                                        });
                                                    });
                                                });
                                            });
                                        };
                                    };
                                };
                            };
                        }
                    };
                };
            };
        };
    };
};
var fromDataCborBytes = {
    fromData: (function () {
        var $253 = Data_Functor.map(Data_Maybe.functorMaybe)(Data_Newtype.wrap());
        var $254 = fromData(fromDataByteArray);
        return function ($255) {
            return $253($254($255));
        };
    })()
};
var fromDataEither = function (dictFromData) {
    return function (dictFromData1) {
        return {
            fromData: function (v) {
                if (v instanceof Types_PlutusData.Constr && v.value1.length === 1) {
                    if (Data_Eq.eq(Data_BigInt.eqBigInt)(v.value0)(Data_Semiring.zero(Data_BigInt.semiringBigInt))) {
                        return Data_Maybe.maybe(Data_Maybe.Nothing.value)(function ($256) {
                            return Data_Maybe.Just.create(Data_Either.Left.create($256));
                        })(fromData(dictFromData)(v["value1"][0]));
                    };
                    if (Data_Eq.eq(Data_BigInt.eqBigInt)(v.value0)(Data_Semiring.one(Data_BigInt.semiringBigInt))) {
                        return Data_Maybe.maybe(Data_Maybe.Nothing.value)(function ($257) {
                            return Data_Maybe.Just.create(Data_Either.Right.create($257));
                        })(fromData(dictFromData1)(v["value1"][0]));
                    };
                };
                return Data_Maybe.Nothing.value;
            }
        };
    };
};
var fromDataMaybe = function (dictFromData) {
    return {
        fromData: function (v) {
            if (v instanceof Types_PlutusData.Constr && (v.value1.length === 1 && Data_Eq.eq(Data_BigInt.eqBigInt)(v.value0)(Data_Semiring.zero(Data_BigInt.semiringBigInt)))) {
                return Data_Maybe.maybe(Data_Maybe.Nothing.value)(function ($258) {
                    return Data_Maybe.Just.create(Data_Maybe.Just.create($258));
                })(fromData(dictFromData)(v["value1"][0]));
            };
            if (v instanceof Types_PlutusData.Constr && (v.value1.length === 0 && Data_Eq.eq(Data_BigInt.eqBigInt)(v.value0)(Data_Semiring.one(Data_BigInt.semiringBigInt)))) {
                return new Data_Maybe.Just(Data_Maybe.Nothing.value);
            };
            return Data_Maybe.Nothing.value;
        }
    };
};
var fromDataNonEmptyArray = function (dictFromData) {
    return {
        fromData: function (d) {
            return Control_Bind.bind(Data_Maybe.bindMaybe)(Control_Bind.bindFlipped(Data_Maybe.bindMaybe)(Data_Array.uncons)(fromData(fromDataArray(dictFromData))(d)))(function (v) {
                return Control_Applicative.pure(Data_Maybe.applicativeMaybe)(new Data_NonEmpty.NonEmpty(v.head, v.tail));
            });
        }
    };
};
var fromDataRatio = function (dictOrd) {
    return function (dictEuclideanRing) {
        return function (dictFromData) {
            return {
                fromData: function (v) {
                    if (v instanceof Types_PlutusData.List && v.value0.length === 2) {
                        return Control_Apply.apply(Data_Maybe.applyMaybe)(Data_Functor.map(Data_Maybe.functorMaybe)(Data_Ratio.reduce(dictOrd)(dictEuclideanRing))(fromData(dictFromData)(v["value0"][0])))(fromData(dictFromData)(v["value0"][1]));
                    };
                    return Data_Maybe.Nothing.value;
                }
            };
        };
    };
};
var fromDataRawBytes = {
    fromData: (function () {
        var $259 = Data_Functor.map(Data_Maybe.functorMaybe)(Data_Newtype.wrap());
        var $260 = fromData(fromDataByteArray);
        return function ($261) {
            return $259($260($261));
        };
    })()
};
var fromDataTuple = function (dictFromData) {
    return function (dictFromData1) {
        return {
            fromData: function (v) {
                if (v instanceof Types_PlutusData.Constr && (v.value1.length === 2 && Data_Eq.eq(Data_BigInt.eqBigInt)(v.value0)(Data_Semiring.zero(Data_BigInt.semiringBigInt)))) {
                    return Control_Apply.apply(Data_Maybe.applyMaybe)(Data_Functor.map(Data_Maybe.functorMaybe)(Data_Tuple.Tuple.create)(fromData(dictFromData)(v["value1"][0])))(fromData(dictFromData1)(v["value1"][1]));
                };
                return Data_Maybe.Nothing.value;
            }
        };
    };
};
module.exports = {
    ArgsWantedButGot: ArgsWantedButGot,
    FromDataFailed: FromDataFailed,
    BigIntToIntFailed: BigIntToIntFailed,
    IndexWantedButGot: IndexWantedButGot,
    WantedConstrGot: WantedConstrGot,
    fromData: fromData,
    fromDataArgs: fromDataArgs,
    fromDataArgsRec: fromDataArgsRec,
    fromDataWithSchema: fromDataWithSchema,
    genericFromData: genericFromData,
    genericFromDataError_: genericFromDataError_,
    showFromDataError: showFromDataError,
    fromDataWithSchemaSum: fromDataWithSchemaSum,
    fromDataWithSchemaConstru: fromDataWithSchemaConstru,
    fromDataWithSchemaArgumen: fromDataWithSchemaArgumen,
    fromDataArgsNoArguments: fromDataArgsNoArguments,
    fromDataArgsArgumentRecor: fromDataArgsArgumentRecor,
    fromDataArgsArgument: fromDataArgsArgument,
    fromDataArgsProduct: fromDataArgsProduct,
    fromDataArgsRLNilRow: fromDataArgsRLNilRow,
    fromDataArgsRLCons: fromDataArgsRLCons,
    fromDataVoid: fromDataVoid,
    fromDataUnit: fromDataUnit,
    fromDataBoolean: fromDataBoolean,
    fromDataMaybe: fromDataMaybe,
    fromDataEither: fromDataEither,
    fromDataInt: fromDataInt,
    fromDataBigInt: fromDataBigInt,
    fromDataBigNum: fromDataBigNum,
    fromDataUInt: fromDataUInt,
    fromDataArray: fromDataArray,
    fromDataNonEmptyArray: fromDataNonEmptyArray,
    fromDataList: fromDataList,
    fromDataTuple: fromDataTuple,
    fromDataByteArray: fromDataByteArray,
    fromDataCborBytes: fromDataCborBytes,
    fromDataRawBytes: fromDataRawBytes,
    fromDataString: fromDataString,
    fromDataRatio: fromDataRatio,
    fromDataPlutusData: fromDataPlutusData
};
