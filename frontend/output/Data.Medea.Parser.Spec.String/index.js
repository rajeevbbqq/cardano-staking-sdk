// Generated by purs version 0.14.5
"use strict";
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Data_Array = require("../Data.Array/index.js");
var Data_Eq = require("../Data.Eq/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Identity = require("../Data.Identity/index.js");
var Data_Medea_Parser_Primitive = require("../Data.Medea.Parser.Primitive/index.js");
var Data_Medea_Parser_Types = require("../Data.Medea.Parser.Types/index.js");
var Data_Show = require("../Data.Show/index.js");
var Data_Show_Generic = require("../Data.Show.Generic/index.js");
var Text_Parsing_Parser = require("../Text.Parsing.Parser/index.js");
var Text_Parsing_Parser_Combinators = require("../Text.Parsing.Parser.Combinators/index.js");
var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");
var Specification = function (x) {
    return x;
};
var toReducedSpec = function (spec) {
    return Data_Functor.map(Data_Functor.functorArray)(Unsafe_Coerce.unsafeCoerce)(spec);
};
var parseSpecification = Control_Bind.bind(Text_Parsing_Parser.bindParserT(Data_Identity.monadIdentity))(Data_Medea_Parser_Primitive.parseLine(4)(Data_Medea_Parser_Primitive.parseReserved(Data_Medea_Parser_Primitive.RStringValues.value)))(function () {
    return Control_Bind.bind(Text_Parsing_Parser.bindParserT(Data_Identity.monadIdentity))(Data_Array.many(Text_Parsing_Parser.alternativeParserT(Data_Identity.monadIdentity))(Text_Parsing_Parser.lazyParserT)(Text_Parsing_Parser_Combinators["try"](Data_Identity.monadIdentity)(Data_Medea_Parser_Primitive.parseLine(8)(Data_Medea_Parser_Primitive.parseString))))(function (items) {
        var $2 = Data_Array["null"](items);
        if ($2) {
            return Text_Parsing_Parser.fail(Data_Identity.monadIdentity)(Data_Show.show(Data_Medea_Parser_Types.showMedeaParseErr)(Data_Medea_Parser_Types.EmptyStringValueSpec.value));
        };
        return Control_Applicative.pure(Text_Parsing_Parser.applicativeParserT(Data_Identity.monadIdentity))(items);
    });
});
var newtypeSpecification = {
    Coercible0: function () {
        return undefined;
    }
};
var genericSpecification = {
    to: function (x) {
        return x;
    },
    from: function (x) {
        return x;
    }
};
var showSpecification = {
    show: Data_Show_Generic.genericShow(genericSpecification)(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Data_Show.showArray(Data_Medea_Parser_Primitive.showMedeaString)))({
        reflectSymbol: function () {
            return "Specification";
        }
    }))
};
var eqSpecification = Data_Eq.eqArray(Data_Medea_Parser_Primitive.eqMedeaString);
var defaultSpec = [  ];
module.exports = {
    Specification: Specification,
    defaultSpec: defaultSpec,
    parseSpecification: parseSpecification,
    toReducedSpec: toReducedSpec,
    eqSpecification: eqSpecification,
    newtypeSpecification: newtypeSpecification,
    genericSpecification: genericSpecification,
    showSpecification: showSpecification
};
