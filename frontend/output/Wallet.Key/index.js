// Generated by purs version 0.14.5
"use strict";
var BalanceTx_Collateral_Select = require("../BalanceTx.Collateral.Select/index.js");
var Cardano_Types_Transaction = require("../Cardano.Types.Transaction/index.js");
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Data_Array = require("../Data.Array/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Lens_Setter = require("../Data.Lens.Setter/index.js");
var Data_List_Types = require("../Data.List.Types/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Monoid = require("../Data.Monoid/index.js");
var Data_Newtype = require("../Data.Newtype/index.js");
var Data_Profunctor_Strong = require("../Data.Profunctor.Strong/index.js");
var Deserialization_WitnessSet = require("../Deserialization.WitnessSet/index.js");
var Effect = require("../Effect/index.js");
var Effect_Aff = require("../Effect.Aff/index.js");
var Effect_Class = require("../Effect.Class/index.js");
var Serialization = require("../Serialization/index.js");
var Serialization_Address = require("../Serialization.Address/index.js");
var PrivateStakeKey = function (x) {
    return x;
};
var PrivatePaymentKey = function (x) {
    return x;
};
var KeyWallet = function (x) {
    return x;
};
var newtypePrivateStakeKey_ = {
    Coercible0: function () {
        return undefined;
    }
};
var newtypePrivatePaymentKey_ = {
    Coercible0: function () {
        return undefined;
    }
};
var newtypeKeyWallet_ = {
    Coercible0: function () {
        return undefined;
    }
};
var privateKeysToKeyWallet = function (payKey) {
    return function (mbStakeKey) {
        var signTx = function (v) {
            return Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(function __do() {
                var txBody = Serialization.convertTxBody(v.body)();
                var hash = Serialization.hashTransaction(txBody)();
                var wit = Data_Functor.map(Effect.functorEffect)(Deserialization_WitnessSet.convertVkeyWitness)(Serialization.makeVkeywitness(hash)(Data_Newtype.unwrap()(payKey)))();
                var witnessSet$prime = Data_Lens_Setter.set(Cardano_Types_Transaction["_vkeys"](Data_Profunctor_Strong.strongFn))(Control_Applicative.pure(Data_Maybe.applicativeMaybe)(Control_Applicative.pure(Control_Applicative.applicativeArray)(wit)))(Data_Monoid.mempty(Cardano_Types_Transaction.monoidTransactionWitnessS));
                return witnessSet$prime;
            });
        };
        var selectCollateral = function (coinsPerUtxoByte) {
            return function (maxCollateralInputs) {
                return function (utxos) {
                    return Data_Functor.map(Effect.functorEffect)(Data_Functor.map(Data_Maybe.functorMaybe)(Data_Array.fromFoldable(Data_List_Types.foldableList)))(BalanceTx_Collateral_Select.selectCollateral(coinsPerUtxoByte)(maxCollateralInputs)(utxos));
                };
            };
        };
        var address = function (network) {
            return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Serialization.publicKeyFromPrivateKey(Data_Newtype.unwrap()(payKey))))(function (pubPayKey) {
                if (mbStakeKey instanceof Data_Maybe.Just) {
                    return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Serialization.publicKeyFromPrivateKey(Data_Newtype.unwrap()(mbStakeKey.value0))))(function (pubStakeKey) {
                        return Control_Applicative.pure(Effect_Aff.applicativeAff)(Serialization_Address.baseAddressToAddress(Serialization_Address.baseAddress({
                            network: network,
                            paymentCred: Serialization_Address.keyHashCredential(Serialization.publicKeyHash(pubPayKey)),
                            delegationCred: Serialization_Address.keyHashCredential(Serialization.publicKeyHash(pubStakeKey))
                        })));
                    });
                };
                if (mbStakeKey instanceof Data_Maybe.Nothing) {
                    return Control_Applicative.pure(Effect_Aff.applicativeAff)((function ($10) {
                        return Serialization_Address.enterpriseAddressToAddress(Serialization_Address.enterpriseAddress((function (v) {
                            return {
                                network: network,
                                paymentCred: v
                            };
                        })(Serialization_Address.keyHashCredential($10))));
                    })(Serialization.publicKeyHash(pubPayKey)));
                };
                throw new Error("Failed pattern match at Wallet.Key (line 89, column 5 - line 103, column 39): " + [ mbStakeKey.constructor.name ]);
            });
        };
        return {
            address: address,
            selectCollateral: selectCollateral,
            signTx: signTx,
            paymentKey: payKey,
            stakeKey: mbStakeKey
        };
    };
};
var keyWalletPrivateStakeKey = (function () {
    var $11 = Data_Newtype.unwrap();
    return function ($12) {
        return (function (v) {
            return v.stakeKey;
        })($11($12));
    };
})();
var keyWalletPrivatePaymentKey = (function () {
    var $13 = Data_Newtype.unwrap();
    return function ($14) {
        return (function (v) {
            return v.paymentKey;
        })($13($14));
    };
})();
module.exports = {
    KeyWallet: KeyWallet,
    PrivatePaymentKey: PrivatePaymentKey,
    PrivateStakeKey: PrivateStakeKey,
    privateKeysToKeyWallet: privateKeysToKeyWallet,
    keyWalletPrivatePaymentKey: keyWalletPrivatePaymentKey,
    keyWalletPrivateStakeKey: keyWalletPrivateStakeKey,
    newtypeKeyWallet_: newtypeKeyWallet_,
    newtypePrivatePaymentKey_: newtypePrivatePaymentKey_,
    newtypePrivateStakeKey_: newtypePrivateStakeKey_
};
