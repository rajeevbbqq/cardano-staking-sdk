// Generated by purs version 0.14.5
"use strict";
var Aeson = require("../Aeson/index.js");
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Data_Argonaut_Decode_Error = require("../Data.Argonaut.Decode.Error/index.js");
var Data_Either = require("../Data.Either/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Generic_Rep = require("../Data.Generic.Rep/index.js");
var Data_Show = require("../Data.Show/index.js");
var Data_Show_Generic = require("../Data.Show.Generic/index.js");
var Data_String_CodePoints = require("../Data.String.CodePoints/index.js");
var Serialization = require("../Serialization/index.js");
var Types_ByteArray = require("../Types.ByteArray/index.js");
var StopClusterRequest = (function () {
    function StopClusterRequest() {

    };
    StopClusterRequest.value = new StopClusterRequest();
    return StopClusterRequest;
})();
var PrivateKeyResponse = function (x) {
    return x;
};
var InitialUTxOsWithStakeKey = (function () {
    function InitialUTxOsWithStakeKey(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    InitialUTxOsWithStakeKey.create = function (value0) {
        return function (value1) {
            return new InitialUTxOsWithStakeKey(value0, value1);
        };
    };
    return InitialUTxOsWithStakeKey;
})();
var StopClusterSuccess = (function () {
    function StopClusterSuccess() {

    };
    StopClusterSuccess.value = new StopClusterSuccess();
    return StopClusterSuccess;
})();
var StopClusterFailure = (function () {
    function StopClusterFailure(value0) {
        this.value0 = value0;
    };
    StopClusterFailure.create = function (value0) {
        return new StopClusterFailure(value0);
    };
    return StopClusterFailure;
})();
var ClusterStartupRequest = function (x) {
    return x;
};
var ClusterIsRunningAlready = (function () {
    function ClusterIsRunningAlready() {

    };
    ClusterIsRunningAlready.value = new ClusterIsRunningAlready();
    return ClusterIsRunningAlready;
})();
var NegativeLovelaces = (function () {
    function NegativeLovelaces() {

    };
    NegativeLovelaces.value = new NegativeLovelaces();
    return NegativeLovelaces;
})();
var NodeConfigNotFound = (function () {
    function NodeConfigNotFound() {

    };
    NodeConfigNotFound.value = new NodeConfigNotFound();
    return NodeConfigNotFound;
})();
var ClusterStartupFailure = (function () {
    function ClusterStartupFailure(value0) {
        this.value0 = value0;
    };
    ClusterStartupFailure.create = function (value0) {
        return new ClusterStartupFailure(value0);
    };
    return ClusterStartupFailure;
})();
var ClusterStartupSuccess = (function () {
    function ClusterStartupSuccess(value0) {
        this.value0 = value0;
    };
    ClusterStartupSuccess.create = function (value0) {
        return new ClusterStartupSuccess(value0);
    };
    return ClusterStartupSuccess;
})();
var showPrivateKeyResponse = {
    show: function (v) {
        return "(PrivateKeyResponse \"<private key>\")";
    }
};
var newtypePrivateKeyResponse = {
    Coercible0: function () {
        return undefined;
    }
};
var genericStopClusterRespons = {
    to: function (x) {
        if (x instanceof Data_Generic_Rep.Inl) {
            return StopClusterSuccess.value;
        };
        if (x instanceof Data_Generic_Rep.Inr) {
            return new StopClusterFailure(x.value0);
        };
        throw new Error("Failed pattern match at Plutip.Types (line 179, column 1 - line 179, column 46): " + [ x.constructor.name ]);
    },
    from: function (x) {
        if (x instanceof StopClusterSuccess) {
            return new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value);
        };
        if (x instanceof StopClusterFailure) {
            return new Data_Generic_Rep.Inr(x.value0);
        };
        throw new Error("Failed pattern match at Plutip.Types (line 179, column 1 - line 179, column 46): " + [ x.constructor.name ]);
    }
};
var showStopClusterResponse = {
    show: Data_Show_Generic.genericShow(genericStopClusterRespons)(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsNoArguments)({
        reflectSymbol: function () {
            return "StopClusterSuccess";
        }
    }))(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Data_Show.showString))({
        reflectSymbol: function () {
            return "StopClusterFailure";
        }
    })))
};
var genericStopClusterRequest = {
    to: function (x) {
        return StopClusterRequest.value;
    },
    from: function (x) {
        return Data_Generic_Rep.NoArguments.value;
    }
};
var showStopClusterRequest = {
    show: Data_Show_Generic.genericShow(genericStopClusterRequest)(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsNoArguments)({
        reflectSymbol: function () {
            return "StopClusterRequest";
        }
    }))
};
var genericStartClusterRespon = {
    to: function (x) {
        if (x instanceof Data_Generic_Rep.Inl) {
            return new ClusterStartupFailure(x.value0);
        };
        if (x instanceof Data_Generic_Rep.Inr) {
            return new ClusterStartupSuccess(x.value0);
        };
        throw new Error("Failed pattern match at Plutip.Types (line 149, column 1 - line 149, column 47): " + [ x.constructor.name ]);
    },
    from: function (x) {
        if (x instanceof ClusterStartupFailure) {
            return new Data_Generic_Rep.Inl(x.value0);
        };
        if (x instanceof ClusterStartupSuccess) {
            return new Data_Generic_Rep.Inr(x.value0);
        };
        throw new Error("Failed pattern match at Plutip.Types (line 149, column 1 - line 149, column 47): " + [ x.constructor.name ]);
    }
};
var genericPrivateKeyResponse = {
    to: function (x) {
        return x;
    },
    from: function (x) {
        return x;
    }
};
var genericClusterStartupFail = {
    to: function (x) {
        if (x instanceof Data_Generic_Rep.Inl) {
            return ClusterIsRunningAlready.value;
        };
        if (x instanceof Data_Generic_Rep.Inr && x.value0 instanceof Data_Generic_Rep.Inl) {
            return NegativeLovelaces.value;
        };
        if (x instanceof Data_Generic_Rep.Inr && x.value0 instanceof Data_Generic_Rep.Inr) {
            return NodeConfigNotFound.value;
        };
        throw new Error("Failed pattern match at Plutip.Types (line 130, column 1 - line 130, column 54): " + [ x.constructor.name ]);
    },
    from: function (x) {
        if (x instanceof ClusterIsRunningAlready) {
            return new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value);
        };
        if (x instanceof NegativeLovelaces) {
            return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value));
        };
        if (x instanceof NodeConfigNotFound) {
            return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(Data_Generic_Rep.NoArguments.value));
        };
        throw new Error("Failed pattern match at Plutip.Types (line 130, column 1 - line 130, column 54): " + [ x.constructor.name ]);
    }
};
var showClusterStartupFailure = {
    show: Data_Show_Generic.genericShow(genericClusterStartupFail)(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsNoArguments)({
        reflectSymbol: function () {
            return "ClusterIsRunningAlready";
        }
    }))(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsNoArguments)({
        reflectSymbol: function () {
            return "NegativeLovelaces";
        }
    }))(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsNoArguments)({
        reflectSymbol: function () {
            return "NodeConfigNotFound";
        }
    }))))
};
var showStartClusterResponse = {
    show: Data_Show_Generic.genericShow(genericStartClusterRespon)(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(showClusterStartupFailure))({
        reflectSymbol: function () {
            return "ClusterStartupFailure";
        }
    }))(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
        reflectSymbol: function () {
            return "keysDirectory";
        }
    })(Data_Show.showRecordFieldsCons({
        reflectSymbol: function () {
            return "nodeConfigPath";
        }
    })(Data_Show.showRecordFieldsCons({
        reflectSymbol: function () {
            return "nodeSocketPath";
        }
    })(Data_Show.showRecordFieldsCons({
        reflectSymbol: function () {
            return "privateKeys";
        }
    })(Data_Show.showRecordFieldsNil)(Data_Show.showArray(showPrivateKeyResponse)))(Data_Show.showString))(Data_Show.showString))(Data_Show.showString))))({
        reflectSymbol: function () {
            return "ClusterStartupSuccess";
        }
    })))
};
var encodeAesonStopClusterReq = {
    "encodeAeson'": function (v) {
        return Aeson["encodeAeson'"](Aeson.encodeAesonArray(Aeson.encodeAesonInt))([  ]);
    }
};
var encodeAesonClusterStartup = Aeson.encodeAesonRecord(Aeson.gEncodeAesonCons(Aeson.encodeAesonArray(Aeson.encodeAesonArray(Aeson.encodeAesonBigInt)))(Aeson.gEncodeAesonNil)({
    reflectSymbol: function () {
        return "keysToGenerate";
    }
})())();
var decodeAesonStopClusterRes = {
    decodeAeson: function (aeson) {
        return Control_Bind.bind(Data_Either.bindEither)(Aeson.decodeAeson(Aeson.decodeAesonObject(Aeson.decodeAesonAeson))(aeson))(function (obj) {
            return Control_Bind.bind(Data_Either.bindEither)(Aeson.getField(Aeson.decodeAesonString)(obj)("tag"))(function (v) {
                if (v === "StopClusterSuccess") {
                    return Control_Applicative.pure(Data_Either.applicativeEither)(StopClusterSuccess.value);
                };
                if (v === "StopClusterFailure") {
                    return Control_Bind.bind(Data_Either.bindEither)(Aeson.getField(Aeson.decodeAesonAeson)(obj)("contents"))(function (failure) {
                        return Data_Functor.map(Data_Either.functorEither)(StopClusterFailure.create)(Aeson.decodeAeson(Aeson.decodeAesonString)(failure));
                    });
                };
                return new Data_Either.Left(new Data_Argonaut_Decode_Error.UnexpectedValue(Aeson.toStringifiedNumbersJson(aeson)));
            });
        });
    }
};
var decodeAesonPrivateKeyResp = {
    decodeAeson: function (json) {
        var err = new Data_Argonaut_Decode_Error.TypeMismatch("PrivateKey");
        return Control_Bind.bind(Data_Either.bindEither)(Aeson.decodeAeson(Aeson.decodeAesonString)(json))(function (cborStr) {
            var splitted = Data_String_CodePoints.splitAt(4)(cborStr);
            var $54 = splitted.before === "5820";
            if ($54) {
                return Control_Bind.bind(Data_Either.bindEither)(Data_Either.note(err)(Types_ByteArray.hexToByteArray(splitted.after)))(function (cborBytes) {
                    return Data_Functor.map(Data_Either.functorEither)(PrivateKeyResponse)(Data_Either.note(err)(Serialization.privateKeyFromBytes(cborBytes)));
                });
            };
            return new Data_Either.Left(err);
        });
    }
};
var decodeAesonClusterStartup = {
    decodeAeson: function (aeson) {
        return Control_Bind.bind(Data_Either.bindEither)(Aeson.decodeAeson(Aeson.decodeAesonString)(aeson))(function (v) {
            if (v === "ClusterIsRunningAlready") {
                return Control_Applicative.pure(Data_Either.applicativeEither)(ClusterIsRunningAlready.value);
            };
            if (v === "NegativeLovelaces") {
                return Control_Applicative.pure(Data_Either.applicativeEither)(NegativeLovelaces.value);
            };
            if (v === "NodeConfigNotFound") {
                return Control_Applicative.pure(Data_Either.applicativeEither)(NodeConfigNotFound.value);
            };
            return new Data_Either.Left(new Data_Argonaut_Decode_Error.UnexpectedValue(Aeson.toStringifiedNumbersJson(aeson)));
        });
    }
};
var decodeAesonStartClusterRe = {
    decodeAeson: function (aeson) {
        return Control_Bind.bind(Data_Either.bindEither)(Aeson.decodeAeson(Aeson.decodeAesonObject(Aeson.decodeAesonAeson))(aeson))(function (obj) {
            return Control_Bind.bind(Data_Either.bindEither)(Aeson.getField(Aeson.decodeAesonString)(obj)("tag"))(function (v) {
                if (v === "ClusterStartupSuccess") {
                    return Control_Bind.bind(Data_Either.bindEither)(Aeson.getField(Aeson.decodeAesonAeson)(obj)("contents"))(function (contents) {
                        return Data_Functor.map(Data_Either.functorEither)(ClusterStartupSuccess.create)(Aeson.decodeAeson(Aeson.decodeAesonRecord(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Aeson.decodeAesonString))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Aeson.decodeAesonString))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Aeson.decodeAesonString))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Aeson.decodeAesonArray(decodeAesonPrivateKeyResp)))(Aeson.gDecodeAesonRowNil)({
                            reflectSymbol: function () {
                                return "privateKeys";
                            }
                        })()())({
                            reflectSymbol: function () {
                                return "nodeSocketPath";
                            }
                        })()())({
                            reflectSymbol: function () {
                                return "nodeConfigPath";
                            }
                        })()())({
                            reflectSymbol: function () {
                                return "keysDirectory";
                            }
                        })()())())(contents));
                    });
                };
                if (v === "ClusterStartupFailure") {
                    return Control_Bind.bind(Data_Either.bindEither)(Aeson.getField(Aeson.decodeAesonAeson)(obj)("contents"))(function (failure) {
                        return Data_Functor.map(Data_Either.functorEither)(ClusterStartupFailure.create)(Aeson.decodeAeson(decodeAesonClusterStartup)(failure));
                    });
                };
                return new Data_Either.Left(new Data_Argonaut_Decode_Error.UnexpectedValue(Aeson.toStringifiedNumbersJson(aeson)));
            });
        });
    }
};
module.exports = {
    InitialUTxOsWithStakeKey: InitialUTxOsWithStakeKey,
    ClusterStartupRequest: ClusterStartupRequest,
    PrivateKeyResponse: PrivateKeyResponse,
    ClusterIsRunningAlready: ClusterIsRunningAlready,
    NegativeLovelaces: NegativeLovelaces,
    NodeConfigNotFound: NodeConfigNotFound,
    ClusterStartupFailure: ClusterStartupFailure,
    ClusterStartupSuccess: ClusterStartupSuccess,
    StopClusterRequest: StopClusterRequest,
    StopClusterSuccess: StopClusterSuccess,
    StopClusterFailure: StopClusterFailure,
    encodeAesonClusterStartup: encodeAesonClusterStartup,
    newtypePrivateKeyResponse: newtypePrivateKeyResponse,
    genericPrivateKeyResponse: genericPrivateKeyResponse,
    showPrivateKeyResponse: showPrivateKeyResponse,
    decodeAesonPrivateKeyResp: decodeAesonPrivateKeyResp,
    genericClusterStartupFail: genericClusterStartupFail,
    showClusterStartupFailure: showClusterStartupFailure,
    decodeAesonClusterStartup: decodeAesonClusterStartup,
    genericStartClusterRespon: genericStartClusterRespon,
    showStartClusterResponse: showStartClusterResponse,
    decodeAesonStartClusterRe: decodeAesonStartClusterRe,
    genericStopClusterRequest: genericStopClusterRequest,
    showStopClusterRequest: showStopClusterRequest,
    encodeAesonStopClusterReq: encodeAesonStopClusterReq,
    genericStopClusterRespons: genericStopClusterRespons,
    showStopClusterResponse: showStopClusterResponse,
    decodeAesonStopClusterRes: decodeAesonStopClusterRes
};
