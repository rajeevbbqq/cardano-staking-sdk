// Generated by purs version 0.14.5
"use strict";
var Aeson = require("../Aeson/index.js");
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Data_Argonaut_Decode_Error = require("../Data.Argonaut.Decode.Error/index.js");
var Data_Either = require("../Data.Either/index.js");
var Data_Eq = require("../Data.Eq/index.js");
var Data_Newtype = require("../Data.Newtype/index.js");
var Data_Show = require("../Data.Show/index.js");
var Data_Show_Generic = require("../Data.Show.Generic/index.js");
var Types_Scripts = require("../Types.Scripts/index.js");
var TypedValidator = function (x) {
    return x;
};
var validatorTypes = function (dictDatumType) {
    return function (dictRedeemerType) {
        return {
            DatumType0: function () {
                return undefined;
            },
            RedeemerType1: function () {
                return undefined;
            }
        };
    };
};
var redeemerTypeVoidVoid = {};
var redeemerTypePlutusDataUni = {};
var redeemerTypeAnyPlutusData = {};
var newtypeTypedValidator_ = {
    Coercible0: function () {
        return undefined;
    }
};
var genericTypedValidator_ = {
    to: function (x) {
        return x;
    },
    from: function (x) {
        return x;
    }
};
var showTypedValidator = {
    show: Data_Show_Generic.genericShow(genericTypedValidator_)(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
        reflectSymbol: function () {
            return "forwardingMPS";
        }
    })(Data_Show.showRecordFieldsCons({
        reflectSymbol: function () {
            return "forwardingMPSHash";
        }
    })(Data_Show.showRecordFieldsCons({
        reflectSymbol: function () {
            return "validator";
        }
    })(Data_Show.showRecordFieldsCons({
        reflectSymbol: function () {
            return "validatorHash";
        }
    })(Data_Show.showRecordFieldsNil)(Types_Scripts.showValidatorHash))(Types_Scripts.showValidator))(Types_Scripts.showMintingPolicyHash))(Types_Scripts.showMintingPolicy))))({
        reflectSymbol: function () {
            return "TypedValidator";
        }
    }))
};
var eqTypedValidator = Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()({
    reflectSymbol: function () {
        return "validatorHash";
    }
})(Types_Scripts.eqValidatorHash))()({
    reflectSymbol: function () {
        return "validator";
    }
})(Types_Scripts.eqValidator))()({
    reflectSymbol: function () {
        return "forwardingMPSHash";
    }
})(Types_Scripts.eqMintingPolicyHash))()({
    reflectSymbol: function () {
        return "forwardingMPS";
    }
})(Types_Scripts.eqMintingPolicy));
var decodeAesonTypedValidator = {
    decodeAeson: Aeson.caseAesonObject(Data_Either.Left.create(new Data_Argonaut_Decode_Error.TypeMismatch("Expected Object")))(function (o) {
        return Control_Bind.bind(Data_Either.bindEither)(Aeson.getField(Types_Scripts.decodeAesonValidator)(o)("validator"))(function (validator) {
            return Control_Bind.bind(Data_Either.bindEither)(Aeson.getField(Types_Scripts.decodeAesonValidatorHash)(o)("validatorHash"))(function (validatorHash) {
                return Control_Bind.bind(Data_Either.bindEither)(Aeson.getField(Types_Scripts.decodeAesonMintingPolicy)(o)("forwardingMPS"))(function (forwardingMPS) {
                    return Control_Bind.bind(Data_Either.bindEither)(Aeson.getField(Types_Scripts.decodeAesonMintingPolicyH)(o)("forwardingMPSHash"))(function (forwardingMPSHash) {
                        return Control_Applicative.pure(Data_Either.applicativeEither)({
                            validator: validator,
                            validatorHash: validatorHash,
                            forwardingMPS: forwardingMPS,
                            forwardingMPSHash: forwardingMPSHash
                        });
                    });
                });
            });
        });
    })
};
var datumTypeVoidVoid = {};
var datumTypePlutusDataUnit = {};
var datumTypeAnyPlutusData = {};
var typedValidatorScript = (function () {
    var $27 = Data_Newtype.unwrap();
    return function ($28) {
        return (function (v) {
            return v.validator;
        })($27($28));
    };
})();
var typedValidatorHash = (function () {
    var $29 = Data_Newtype.unwrap();
    return function ($30) {
        return (function (v) {
            return v.validatorHash;
        })($29($30));
    };
})();
var generalise = function (v) {
    return {
        validator: v.validator,
        validatorHash: v.validatorHash,
        forwardingMPS: v.forwardingMPS,
        forwardingMPSHash: v.forwardingMPSHash
    };
};
var forwardingMintingPolicy = (function () {
    var $31 = Data_Newtype.unwrap();
    return function ($32) {
        return (function (v) {
            return v.forwardingMPS;
        })($31($32));
    };
})();
module.exports = {
    TypedValidator: TypedValidator,
    forwardingMintingPolicy: forwardingMintingPolicy,
    generalise: generalise,
    typedValidatorHash: typedValidatorHash,
    typedValidatorScript: typedValidatorScript,
    validatorTypes: validatorTypes,
    datumTypeVoidVoid: datumTypeVoidVoid,
    datumTypeAnyPlutusData: datumTypeAnyPlutusData,
    datumTypePlutusDataUnit: datumTypePlutusDataUnit,
    redeemerTypeVoidVoid: redeemerTypeVoidVoid,
    redeemerTypeAnyPlutusData: redeemerTypeAnyPlutusData,
    redeemerTypePlutusDataUni: redeemerTypePlutusDataUni,
    genericTypedValidator_: genericTypedValidator_,
    newtypeTypedValidator_: newtypeTypedValidator_,
    eqTypedValidator: eqTypedValidator,
    showTypedValidator: showTypedValidator,
    decodeAesonTypedValidator: decodeAesonTypedValidator
};
