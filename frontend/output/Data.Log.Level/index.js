// Generated by purs version 0.14.5
"use strict";
var Data_Ordering = require("../Data.Ordering/index.js");
var Trace = (function () {
    function Trace() {

    };
    Trace.value = new Trace();
    return Trace;
})();
var Debug = (function () {
    function Debug() {

    };
    Debug.value = new Debug();
    return Debug;
})();
var Info = (function () {
    function Info() {

    };
    Info.value = new Info();
    return Info;
})();
var Warn = (function () {
    function Warn() {

    };
    Warn.value = new Warn();
    return Warn;
})();
var $$Error = (function () {
    function $$Error() {

    };
    $$Error.value = new $$Error();
    return $$Error;
})();
var eqLogLevel = {
    eq: function (x) {
        return function (y) {
            if (x instanceof Trace && y instanceof Trace) {
                return true;
            };
            if (x instanceof Debug && y instanceof Debug) {
                return true;
            };
            if (x instanceof Info && y instanceof Info) {
                return true;
            };
            if (x instanceof Warn && y instanceof Warn) {
                return true;
            };
            if (x instanceof $$Error && y instanceof $$Error) {
                return true;
            };
            return false;
        };
    }
};
var ordLogLevel = {
    compare: function (x) {
        return function (y) {
            if (x instanceof Trace && y instanceof Trace) {
                return Data_Ordering.EQ.value;
            };
            if (x instanceof Trace) {
                return Data_Ordering.LT.value;
            };
            if (y instanceof Trace) {
                return Data_Ordering.GT.value;
            };
            if (x instanceof Debug && y instanceof Debug) {
                return Data_Ordering.EQ.value;
            };
            if (x instanceof Debug) {
                return Data_Ordering.LT.value;
            };
            if (y instanceof Debug) {
                return Data_Ordering.GT.value;
            };
            if (x instanceof Info && y instanceof Info) {
                return Data_Ordering.EQ.value;
            };
            if (x instanceof Info) {
                return Data_Ordering.LT.value;
            };
            if (y instanceof Info) {
                return Data_Ordering.GT.value;
            };
            if (x instanceof Warn && y instanceof Warn) {
                return Data_Ordering.EQ.value;
            };
            if (x instanceof Warn) {
                return Data_Ordering.LT.value;
            };
            if (y instanceof Warn) {
                return Data_Ordering.GT.value;
            };
            if (x instanceof $$Error && y instanceof $$Error) {
                return Data_Ordering.EQ.value;
            };
            throw new Error("Failed pattern match at Data.Log.Level (line 9, column 1 - line 9, column 44): " + [ x.constructor.name, y.constructor.name ]);
        };
    },
    Eq0: function () {
        return eqLogLevel;
    }
};
module.exports = {
    Trace: Trace,
    Debug: Debug,
    Info: Info,
    Warn: Warn,
    "Error": $$Error,
    eqLogLevel: eqLogLevel,
    ordLogLevel: ordLogLevel
};
