// Generated by purs version 0.14.5
"use strict";
var Cardano_Types_Transaction = require("../Cardano.Types.Transaction/index.js");
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Control_Monad_Error_Class = require("../Control.Monad.Error.Class/index.js");
var Control_Monad_Except_Trans = require("../Control.Monad.Except.Trans/index.js");
var Data_Either = require("../Data.Either/index.js");
var Data_Eq = require("../Data.Eq/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Generic_Rep = require("../Data.Generic.Rep/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Newtype = require("../Data.Newtype/index.js");
var Data_Ord = require("../Data.Ord/index.js");
var Data_Ordering = require("../Data.Ordering/index.js");
var Data_Show_Generic = require("../Data.Show.Generic/index.js");
var Effect_Aff = require("../Effect.Aff/index.js");
var FromData = require("../FromData/index.js");
var Hashing = require("../Hashing/index.js");
var Helpers = require("../Helpers/index.js");
var QueryM = require("../QueryM/index.js");
var Scripts = require("../Scripts/index.js");
var Serialization_Address = require("../Serialization.Address/index.js");
var ToData = require("../ToData/index.js");
var Types_Datum = require("../Types.Datum/index.js");
var Types_OutputDatum = require("../Types.OutputDatum/index.js");
var Types_PlutusData = require("../Types.PlutusData/index.js");
var Types_Transaction = require("../Types.Transaction/index.js");
var TypedTxOut = function (x) {
    return x;
};
var TypedTxOutRef = function (x) {
    return x;
};
var WrongValidatorAddress = (function () {
    function WrongValidatorAddress(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    WrongValidatorAddress.create = function (value0) {
        return function (value1) {
            return new WrongValidatorAddress(value0, value1);
        };
    };
    return WrongValidatorAddress;
})();
var ExpectedScriptGotPubkey = (function () {
    function ExpectedScriptGotPubkey() {

    };
    ExpectedScriptGotPubkey.value = new ExpectedScriptGotPubkey();
    return ExpectedScriptGotPubkey;
})();
var WrongRedeemerType = (function () {
    function WrongRedeemerType(value0) {
        this.value0 = value0;
    };
    WrongRedeemerType.create = function (value0) {
        return new WrongRedeemerType(value0);
    };
    return WrongRedeemerType;
})();
var WrongDatumType = (function () {
    function WrongDatumType(value0) {
        this.value0 = value0;
    };
    WrongDatumType.create = function (value0) {
        return new WrongDatumType(value0);
    };
    return WrongDatumType;
})();
var CannotQueryDatum = (function () {
    function CannotQueryDatum(value0) {
        this.value0 = value0;
    };
    CannotQueryDatum.create = function (value0) {
        return new CannotQueryDatum(value0);
    };
    return CannotQueryDatum;
})();
var CannotMakeTypedTxOut = (function () {
    function CannotMakeTypedTxOut() {

    };
    CannotMakeTypedTxOut.value = new CannotMakeTypedTxOut();
    return CannotMakeTypedTxOut;
})();
var UnknownRef = (function () {
    function UnknownRef() {

    };
    UnknownRef.value = new UnknownRef();
    return UnknownRef;
})();
var genericTypeCheckError_ = {
    to: function (x) {
        if (x instanceof Data_Generic_Rep.Inl) {
            return new WrongValidatorAddress(x.value0.value0, x.value0.value1);
        };
        if (x instanceof Data_Generic_Rep.Inr && x.value0 instanceof Data_Generic_Rep.Inl) {
            return ExpectedScriptGotPubkey.value;
        };
        if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0 instanceof Data_Generic_Rep.Inl)) {
            return new WrongRedeemerType(x.value0.value0.value0);
        };
        if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0 instanceof Data_Generic_Rep.Inl))) {
            return new WrongDatumType(x.value0.value0.value0.value0);
        };
        if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl)))) {
            return new CannotQueryDatum(x.value0.value0.value0.value0.value0);
        };
        if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl))))) {
            return CannotMakeTypedTxOut.value;
        };
        if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr))))) {
            return UnknownRef.value;
        };
        throw new Error("Failed pattern match at Types.TypedTxOut (line 207, column 1 - line 207, column 41): " + [ x.constructor.name ]);
    },
    from: function (x) {
        if (x instanceof WrongValidatorAddress) {
            return new Data_Generic_Rep.Inl(new Data_Generic_Rep.Product(x.value0, x.value1));
        };
        if (x instanceof ExpectedScriptGotPubkey) {
            return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value));
        };
        if (x instanceof WrongRedeemerType) {
            return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(x.value0)));
        };
        if (x instanceof WrongDatumType) {
            return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(x.value0))));
        };
        if (x instanceof CannotQueryDatum) {
            return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(x.value0)))));
        };
        if (x instanceof CannotMakeTypedTxOut) {
            return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value))))));
        };
        if (x instanceof UnknownRef) {
            return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(Data_Generic_Rep.NoArguments.value))))));
        };
        throw new Error("Failed pattern match at Types.TypedTxOut (line 207, column 1 - line 207, column 41): " + [ x.constructor.name ]);
    }
};
var showTypeCheckError = {
    show: Data_Show_Generic.genericShow(genericTypeCheckError_)(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsProduct(Data_Show_Generic.genericShowArgsArgument(Serialization_Address.showAddress))(Data_Show_Generic.genericShowArgsArgument(Serialization_Address.showAddress)))({
        reflectSymbol: function () {
            return "WrongValidatorAddress";
        }
    }))(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsNoArguments)({
        reflectSymbol: function () {
            return "ExpectedScriptGotPubkey";
        }
    }))(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Types_PlutusData.showPlutusData))({
        reflectSymbol: function () {
            return "WrongRedeemerType";
        }
    }))(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Types_PlutusData.showPlutusData))({
        reflectSymbol: function () {
            return "WrongDatumType";
        }
    }))(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Types_Transaction.showDataHash))({
        reflectSymbol: function () {
            return "CannotQueryDatum";
        }
    }))(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsNoArguments)({
        reflectSymbol: function () {
            return "CannotMakeTypedTxOut";
        }
    }))(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsNoArguments)({
        reflectSymbol: function () {
            return "UnknownRef";
        }
    }))))))))
};
var eqTypedTxOut = function (dictDatumType) {
    return function (dictEq) {
        return Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()({
            reflectSymbol: function () {
                return "txOut";
            }
        })(Cardano_Types_Transaction.eqTransactionOutput))()({
            reflectSymbol: function () {
                return "data";
            }
        })(dictEq));
    };
};
var eqTypedTxOutRef = function (dictDatumType) {
    return function (dictEq) {
        return Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()({
            reflectSymbol: function () {
                return "typedTxOut";
            }
        })(eqTypedTxOut()(dictEq)))()({
            reflectSymbol: function () {
                return "txOutRef";
            }
        })(Types_Transaction.eqTransactionInput));
    };
};
var eqTypeCheckError = {
    eq: function (x) {
        return function (y) {
            if (x instanceof WrongValidatorAddress && y instanceof WrongValidatorAddress) {
                return Data_Eq.eq(Serialization_Address.eqAddress)(x.value0)(y.value0) && Data_Eq.eq(Serialization_Address.eqAddress)(x.value1)(y.value1);
            };
            if (x instanceof ExpectedScriptGotPubkey && y instanceof ExpectedScriptGotPubkey) {
                return true;
            };
            if (x instanceof WrongRedeemerType && y instanceof WrongRedeemerType) {
                return Data_Eq.eq(Types_PlutusData.eqPlutusData)(x.value0)(y.value0);
            };
            if (x instanceof WrongDatumType && y instanceof WrongDatumType) {
                return Data_Eq.eq(Types_PlutusData.eqPlutusData)(x.value0)(y.value0);
            };
            if (x instanceof CannotQueryDatum && y instanceof CannotQueryDatum) {
                return Data_Eq.eq(Types_Transaction.eqDataHash)(x.value0)(y.value0);
            };
            if (x instanceof CannotMakeTypedTxOut && y instanceof CannotMakeTypedTxOut) {
                return true;
            };
            if (x instanceof UnknownRef && y instanceof UnknownRef) {
                return true;
            };
            return false;
        };
    }
};
var ordTypeCheckError = {
    compare: function (x) {
        return function (y) {
            if (x instanceof WrongValidatorAddress && y instanceof WrongValidatorAddress) {
                var v = Data_Ord.compare(Serialization_Address.ordAddress)(x.value0)(y.value0);
                if (v instanceof Data_Ordering.LT) {
                    return Data_Ordering.LT.value;
                };
                if (v instanceof Data_Ordering.GT) {
                    return Data_Ordering.GT.value;
                };
                return Data_Ord.compare(Serialization_Address.ordAddress)(x.value1)(y.value1);
            };
            if (x instanceof WrongValidatorAddress) {
                return Data_Ordering.LT.value;
            };
            if (y instanceof WrongValidatorAddress) {
                return Data_Ordering.GT.value;
            };
            if (x instanceof ExpectedScriptGotPubkey && y instanceof ExpectedScriptGotPubkey) {
                return Data_Ordering.EQ.value;
            };
            if (x instanceof ExpectedScriptGotPubkey) {
                return Data_Ordering.LT.value;
            };
            if (y instanceof ExpectedScriptGotPubkey) {
                return Data_Ordering.GT.value;
            };
            if (x instanceof WrongRedeemerType && y instanceof WrongRedeemerType) {
                return Data_Ord.compare(Types_PlutusData.ordPlutusData)(x.value0)(y.value0);
            };
            if (x instanceof WrongRedeemerType) {
                return Data_Ordering.LT.value;
            };
            if (y instanceof WrongRedeemerType) {
                return Data_Ordering.GT.value;
            };
            if (x instanceof WrongDatumType && y instanceof WrongDatumType) {
                return Data_Ord.compare(Types_PlutusData.ordPlutusData)(x.value0)(y.value0);
            };
            if (x instanceof WrongDatumType) {
                return Data_Ordering.LT.value;
            };
            if (y instanceof WrongDatumType) {
                return Data_Ordering.GT.value;
            };
            if (x instanceof CannotQueryDatum && y instanceof CannotQueryDatum) {
                return Data_Ord.compare(Types_Transaction.ordDataHash)(x.value0)(y.value0);
            };
            if (x instanceof CannotQueryDatum) {
                return Data_Ordering.LT.value;
            };
            if (y instanceof CannotQueryDatum) {
                return Data_Ordering.GT.value;
            };
            if (x instanceof CannotMakeTypedTxOut && y instanceof CannotMakeTypedTxOut) {
                return Data_Ordering.EQ.value;
            };
            if (x instanceof CannotMakeTypedTxOut) {
                return Data_Ordering.LT.value;
            };
            if (y instanceof CannotMakeTypedTxOut) {
                return Data_Ordering.GT.value;
            };
            if (x instanceof UnknownRef && y instanceof UnknownRef) {
                return Data_Ordering.EQ.value;
            };
            throw new Error("Failed pattern match at Types.TypedTxOut (line 209, column 1 - line 209, column 35): " + [ x.constructor.name, y.constructor.name ]);
        };
    },
    Eq0: function () {
        return eqTypeCheckError;
    }
};
var typedTxOutValue = function (dictDatumType) {
    return function (v) {
        return (Data_Newtype.unwrap()(v.txOut)).amount;
    };
};
var typedTxOutTxOut = function (dictDatumType) {
    return function (v) {
        return v.txOut;
    };
};
var typedTxOutRefValue = function (dictDatumType) {
    return function (v) {
        return typedTxOutValue()(v.typedTxOut);
    };
};
var typedTxOutRefInput = function (dictDatumType) {
    return function (v) {
        return v.txOutRef;
    };
};
var typedTxOutDatumHash = function (dictDatumType) {
    return function (v) {
        return Types_OutputDatum.outputDatumDataHash((Data_Newtype.unwrap()(v.txOut)).datum);
    };
};
var typedTxOutRefDatumHash = function (dictDatumType) {
    return function (v) {
        return typedTxOutDatumHash()(v.typedTxOut);
    };
};
var typedTxOutAddress = function (dictDatumType) {
    return function (v) {
        return (Data_Newtype.unwrap()(v.txOut)).address;
    };
};
var typedTxOutRefAddress = function (dictDatumType) {
    return function (v) {
        return typedTxOutAddress()(v.typedTxOut);
    };
};
var mkTypedTxOut = function (dictDatumType) {
    return function (dictToData) {
        return function (networkId) {
            return function (typedVal) {
                return function (dt) {
                    return function (amount) {
                        var mkTypedTxOut$prime = function (dat) {
                            return function (txOut) {
                                return {
                                    txOut: txOut,
                                    data: dat
                                };
                            };
                        };
                        var mDHash = Hashing.datumHash(Types_Datum.Datum(ToData.toData(dictToData)(dt)));
                        var address = Scripts.typedValidatorEnterpriseAddress(networkId)(typedVal);
                        if (mDHash instanceof Data_Maybe.Nothing) {
                            return Data_Maybe.Nothing.value;
                        };
                        if (mDHash instanceof Data_Maybe.Just) {
                            return Data_Maybe.Just.create(mkTypedTxOut$prime(dt)(Data_Newtype.wrap()({
                                address: address,
                                amount: amount,
                                datum: new Types_OutputDatum.OutputDatumHash(mDHash.value0),
                                scriptRef: Data_Maybe.Nothing.value
                            })));
                        };
                        throw new Error("Failed pattern match at Types.TypedTxOut (line 178, column 5 - line 189, column 14): " + [ mDHash.constructor.name ]);
                    };
                };
            };
        };
    };
};
var checkValidatorAddress = function (dictMonad) {
    return function (networkId) {
        return function (typedVal) {
            return function (actualAddr) {
                return Control_Monad_Except_Trans.runExceptT((function () {
                    var expectedAddr = Scripts.typedValidatorEnterpriseAddress(networkId)(typedVal);
                    return Control_Applicative.unless(Control_Monad_Except_Trans.applicativeExceptT(dictMonad))(Data_Eq.eq(Serialization_Address.eqAddress)(expectedAddr)(actualAddr))(Control_Monad_Error_Class.throwError(Control_Monad_Except_Trans.monadThrowExceptT(dictMonad))(new WrongValidatorAddress(expectedAddr, actualAddr)));
                })());
            };
        };
    };
};
var checkDatum = function (dictMonad) {
    return function (dictDatumType) {
        return function (dictFromData) {
            return function (v) {
                return function (v1) {
                    return Control_Monad_Except_Trans.runExceptT(Helpers.liftM(Control_Monad_Except_Trans.monadErrorExceptT(dictMonad))(new WrongDatumType(v1))(FromData.fromData(dictFromData)(v1)));
                };
            };
        };
    };
};
var typeTxOut = function (dictDatumType) {
    return function (dictIsData) {
        return function (networkId) {
            return function (typedVal) {
                return function (v) {
                    return Control_Monad_Except_Trans.runExceptT(Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(QueryM.monadQueryMExtendedAff))(Helpers.liftM(Control_Monad_Except_Trans.monadErrorExceptT(QueryM.monadQueryMExtendedAff))(ExpectedScriptGotPubkey.value)(Types_OutputDatum.outputDatumDataHash(v.datum)))(function (dHash) {
                        return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Except_Trans.bindExceptT(QueryM.monadQueryMExtendedAff))(Data_Functor["void"](Control_Monad_Except_Trans.functorExceptT(QueryM.functorQueryMExtended(Effect_Aff.functorAff)))(checkValidatorAddress(Control_Monad_Except_Trans.monadExceptT(QueryM.monadQueryMExtendedAff))(networkId)(typedVal)(v.address)))(function () {
                            return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(QueryM.monadQueryMExtendedAff))(Control_Monad_Except_Trans.ExceptT(Data_Functor.mapFlipped(QueryM.functorQueryMExtended(Effect_Aff.functorAff))(QueryM.getDatumByHash(dHash))(Data_Either.note(new CannotQueryDatum(dHash)))))(function (pd) {
                                return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(QueryM.monadQueryMExtendedAff))(Control_Monad_Except_Trans.ExceptT(checkDatum(QueryM.monadQueryMExtendedAff)()(dictIsData.FromData0())(typedVal)(pd)))(function (dtOut) {
                                    return Control_Monad_Except_Trans.except(QueryM.applicativeQueryMExtended(Effect_Aff.applicativeAff))(Data_Either.note(CannotMakeTypedTxOut.value)(mkTypedTxOut()(dictIsData.ToData1())(networkId)(typedVal)(dtOut)(v.amount)));
                                });
                            });
                        });
                    }));
                };
            };
        };
    };
};
var typeTxOutRef = function (dictDatumType) {
    return function (dictIsData) {
        return function (networkId) {
            return function (lookupRef) {
                return function (typedVal) {
                    return function (txOutRef) {
                        return Control_Monad_Except_Trans.runExceptT(Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(QueryM.monadQueryMExtendedAff))(Helpers.liftM(Control_Monad_Except_Trans.monadErrorExceptT(QueryM.monadQueryMExtendedAff))(UnknownRef.value)(lookupRef(txOutRef)))(function (out) {
                            return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(QueryM.monadQueryMExtendedAff))(Control_Monad_Except_Trans.ExceptT(typeTxOut()(dictIsData)(networkId)(typedVal)(out)))(function (typedTxOut) {
                                return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(QueryM.monadQueryMExtendedAff))({
                                    txOutRef: txOutRef,
                                    typedTxOut: typedTxOut
                                });
                            });
                        }));
                    };
                };
            };
        };
    };
};
module.exports = {
    WrongValidatorAddress: WrongValidatorAddress,
    ExpectedScriptGotPubkey: ExpectedScriptGotPubkey,
    WrongRedeemerType: WrongRedeemerType,
    WrongDatumType: WrongDatumType,
    CannotQueryDatum: CannotQueryDatum,
    CannotMakeTypedTxOut: CannotMakeTypedTxOut,
    UnknownRef: UnknownRef,
    mkTypedTxOut: mkTypedTxOut,
    typeTxOut: typeTxOut,
    typeTxOutRef: typeTxOutRef,
    typedTxOutAddress: typedTxOutAddress,
    typedTxOutDatumHash: typedTxOutDatumHash,
    typedTxOutRefAddress: typedTxOutRefAddress,
    typedTxOutRefDatumHash: typedTxOutRefDatumHash,
    typedTxOutRefInput: typedTxOutRefInput,
    typedTxOutRefValue: typedTxOutRefValue,
    typedTxOutTxOut: typedTxOutTxOut,
    typedTxOutValue: typedTxOutValue,
    eqTypedTxOutRef: eqTypedTxOutRef,
    eqTypedTxOut: eqTypedTxOut,
    genericTypeCheckError_: genericTypeCheckError_,
    eqTypeCheckError: eqTypeCheckError,
    ordTypeCheckError: ordTypeCheckError,
    showTypeCheckError: showTypeCheckError
};
