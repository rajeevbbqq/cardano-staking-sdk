// Generated by purs version 0.14.5
"use strict";
var $foreign = require("./foreign.js");
var BalanceTx_FakeOutput = require("../BalanceTx.FakeOutput/index.js");
var Cardano_Types_Value = require("../Cardano.Types.Value/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Control_Monad_Error_Class = require("../Control.Monad.Error.Class/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Effect = require("../Effect/index.js");
var Effect_Exception = require("../Effect.Exception/index.js");
var FfiHelpers = require("../FfiHelpers/index.js");
var QueryM_Ogmios = require("../QueryM.Ogmios/index.js");
var Serialization = require("../Serialization/index.js");
var Types_BigNum = require("../Types.BigNum/index.js");
var utxoMinAdaValue = function (coinsPerUtxoUnit) {
    return function (txOutput) {
        return function __do() {
            var cslTxOutput = Serialization.convertTxOutput(txOutput)();
            var dataCost = (function () {
                if (coinsPerUtxoUnit instanceof QueryM_Ogmios.CoinsPerUtxoByte) {
                    return Data_Functor.map(Effect.functorEffect)($foreign.newCoinsPerByte)(Control_Monad_Error_Class.liftMaybe(Control_Monad_Error_Class.monadThrowEffect)(Effect_Exception.error("Failed to convert CoinsPerUtxoByte"))(Types_BigNum.fromBigInt(coinsPerUtxoUnit.value0)))();
                };
                if (coinsPerUtxoUnit instanceof QueryM_Ogmios.CoinsPerUtxoWord) {
                    return Data_Functor.map(Effect.functorEffect)($foreign.newCoinsPerWord)(Control_Monad_Error_Class.liftMaybe(Control_Monad_Error_Class.monadThrowEffect)(Effect_Exception.error("Failed to convert CoinsPerUtxoWord"))(Types_BigNum.fromBigInt(coinsPerUtxoUnit.value0)))();
                };
                throw new Error("Failed pattern match at BalanceTx.UtxoMinAda (line 36, column 15 - line 42, column 30): " + [ coinsPerUtxoUnit.constructor.name ]);
            })();
            return Control_Bind.bind(Data_Maybe.bindMaybe)($foreign.minAdaForOutput(FfiHelpers.maybeFfiHelper)(cslTxOutput)(dataCost))(Types_BigNum.toBigInt);
        };
    };
};
var adaOnlyUtxoMinAdaValue = function (coinsPerUtxoUnit) {
    return Data_Functor.map(Effect.functorEffect)(Data_Maybe.fromJust())(utxoMinAdaValue(coinsPerUtxoUnit)(BalanceTx_FakeOutput.fakeOutputWithValue(Cardano_Types_Value.lovelaceValueOf(Types_BigNum.toBigIntUnsafe(Types_BigNum.maxValue)))));
};
module.exports = {
    adaOnlyUtxoMinAdaValue: adaOnlyUtxoMinAdaValue,
    utxoMinAdaValue: utxoMinAdaValue
};
