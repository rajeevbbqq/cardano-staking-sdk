// Generated by purs version 0.14.5
"use strict";
var $foreign = require("./foreign.js");
var Cardano_Types_Transaction = require("../Cardano.Types.Transaction/index.js");
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Data_Either = require("../Data.Either/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Traversable = require("../Data.Traversable/index.js");
var Data_Tuple = require("../Data.Tuple/index.js");
var Deserialization_Language = require("../Deserialization.Language/index.js");
var Deserialization_NativeScript = require("../Deserialization.NativeScript/index.js");
var Deserialization_PlutusData = require("../Deserialization.PlutusData/index.js");
var FfiHelpers = require("../FfiHelpers/index.js");
var Types_BigNum = require("../Types.BigNum/index.js");
var Types_RedeemerTag = require("../Types.RedeemerTag/index.js");
var Types_Scripts = require("../Types.Scripts/index.js");
var deserializeWitnessSet = $foreign["_deserializeWitnessSet"](FfiHelpers.maybeFfiHelper);
var convertVkey = function ($2) {
    return Cardano_Types_Transaction.Vkey(Cardano_Types_Transaction.PublicKey($foreign.publicKeyToBech32($foreign.vkeyPublicKey($2))));
};
var convertSignature = function ($3) {
    return Cardano_Types_Transaction.Ed25519Signature($foreign.signatureToBech32($3));
};
var convertVkeyWitness = function (witness) {
    var vkey = $foreign.getVkey(witness);
    var signature = convertSignature($foreign.getSignature(witness));
    var publicKey = convertVkey(vkey);
    return Cardano_Types_Transaction.Vkeywitness(new Data_Tuple.Tuple(publicKey, signature));
};
var convertVkeyWitnesses = (function () {
    var $4 = Data_Functor.map(Data_Functor.functorArray)(convertVkeyWitness);
    return function ($5) {
        return $4($foreign.extractWitnesses($5));
    };
})();
var convertRedeemerTag = function (tag) {
    var v = $foreign.getRedeemerTagKind(tag);
    if (v === 0) {
        return new Data_Maybe.Just(Types_RedeemerTag.Spend.value);
    };
    if (v === 1) {
        return new Data_Maybe.Just(Types_RedeemerTag.Mint.value);
    };
    if (v === 2) {
        return new Data_Maybe.Just(Types_RedeemerTag.Cert.value);
    };
    if (v === 3) {
        return new Data_Maybe.Just(Types_RedeemerTag.Reward.value);
    };
    return Data_Maybe.Nothing.value;
};
var convertPlutusScript = function (plutusScript) {
    return Data_Either.hush(Control_Bind.bind(Data_Either.bindEither)(Deserialization_Language.convertLanguage($foreign.plutusScriptVersion(plutusScript)))(function (language) {
        return Control_Applicative.pure(Data_Either.applicativeEither)(Data_Tuple.curry(Types_Scripts.PlutusScript)($foreign.plutusScriptBytes(plutusScript))(language));
    }));
};
var convertPlutusScripts = function (plutusScripts) {
    return Data_Traversable["for"](Data_Maybe.applicativeMaybe)(Data_Traversable.traversableArray)($foreign.extractPlutusScripts(plutusScripts))(convertPlutusScript);
};
var convertPlutusList = (function () {
    var $6 = Data_Traversable.traverse(Data_Traversable.traversableArray)(Data_Maybe.applicativeMaybe)(Deserialization_PlutusData.convertPlutusData);
    return function ($7) {
        return $6($foreign.extractPlutusData($7));
    };
})();
var convertNativeScripts = function (nativeScripts) {
    return Data_Traversable["for"](Data_Maybe.applicativeMaybe)(Data_Traversable.traversableArray)($foreign.extractNativeScripts(nativeScripts))(Deserialization_NativeScript.convertNativeScript);
};
var convertExUnits = function (eu) {
    return Control_Bind.bind(Data_Maybe.bindMaybe)(Types_BigNum.toBigInt($foreign.getExUnitsMem(eu)))(function (mem) {
        return Control_Bind.bind(Data_Maybe.bindMaybe)(Types_BigNum.toBigInt($foreign.getExUnitsSteps(eu)))(function (steps) {
            return Control_Applicative.pure(Data_Maybe.applicativeMaybe)({
                mem: mem,
                steps: steps
            });
        });
    });
};
var convertRedeemer = function (redeemer) {
    return Control_Bind.bind(Data_Maybe.bindMaybe)(convertRedeemerTag($foreign.getRedeemerTag(redeemer)))(function (tag) {
        return Control_Bind.bind(Data_Maybe.bindMaybe)(Types_BigNum.toBigInt($foreign.getRedeemerIndex(redeemer)))(function (index) {
            return Control_Bind.bind(Data_Maybe.bindMaybe)(convertExUnits($foreign.getExUnits(redeemer)))(function (exUnits) {
                return Control_Bind.bind(Data_Maybe.bindMaybe)(Deserialization_PlutusData.convertPlutusData($foreign.getRedeemerPlutusData(redeemer)))(function (data_) {
                    return Control_Applicative.pure(Data_Maybe.applicativeMaybe)({
                        tag: tag,
                        index: index,
                        data: data_,
                        exUnits: exUnits
                    });
                });
            });
        });
    });
};
var convertRedeemers = (function () {
    var $8 = Data_Traversable.traverse(Data_Traversable.traversableArray)(Data_Maybe.applicativeMaybe)(convertRedeemer);
    return function ($9) {
        return $8($foreign.extractRedeemers($9));
    };
})();
var convertBootstraps = (function () {
    var $10 = Data_Functor.map(Data_Functor.functorArray)(function (bootstrap) {
        return {
            vkey: convertVkey($foreign.getBootstrapVkey(bootstrap)),
            signature: convertSignature($foreign.getBootstrapSignature(bootstrap)),
            chainCode: $foreign.getBootstrapChainCode(bootstrap),
            attributes: $foreign.getBootstrapAttributes(bootstrap)
        };
    });
    return function ($11) {
        return $10($foreign.extractBootstraps($11));
    };
})();
var convertWitnessSet = function (ws) {
    return Control_Bind.bind(Data_Maybe.bindMaybe)(Data_Traversable["for"](Data_Maybe.applicativeMaybe)(Data_Traversable.traversableMaybe)($foreign.getNativeScripts(FfiHelpers.maybeFfiHelper)(ws))(convertNativeScripts))(function (nativeScripts) {
        return Control_Bind.bind(Data_Maybe.bindMaybe)(Data_Traversable["for"](Data_Maybe.applicativeMaybe)(Data_Traversable.traversableMaybe)($foreign.getRedeemers(FfiHelpers.maybeFfiHelper)(ws))(convertRedeemers))(function (redeemers) {
            return Control_Bind.bind(Data_Maybe.bindMaybe)(Data_Traversable["for"](Data_Maybe.applicativeMaybe)(Data_Traversable.traversableMaybe)($foreign.getWitnessSetPlutusData(FfiHelpers.maybeFfiHelper)(ws))(convertPlutusList))(function (plutusData) {
                return Control_Bind.bind(Data_Maybe.bindMaybe)(Data_Traversable["for"](Data_Maybe.applicativeMaybe)(Data_Traversable.traversableMaybe)($foreign.getPlutusScripts(FfiHelpers.maybeFfiHelper)(ws))(convertPlutusScripts))(function (plutusScripts) {
                    return Control_Applicative.pure(Data_Maybe.applicativeMaybe)({
                        vkeys: Data_Functor.mapFlipped(Data_Maybe.functorMaybe)($foreign.getVkeywitnesses(FfiHelpers.maybeFfiHelper)(ws))(convertVkeyWitnesses),
                        nativeScripts: nativeScripts,
                        bootstraps: Data_Functor.mapFlipped(Data_Maybe.functorMaybe)($foreign.getBootstraps(FfiHelpers.maybeFfiHelper)(ws))(convertBootstraps),
                        plutusScripts: plutusScripts,
                        plutusData: plutusData,
                        redeemers: redeemers
                    });
                });
            });
        });
    });
};
module.exports = {
    convertNativeScripts: convertNativeScripts,
    convertPlutusScripts: convertPlutusScripts,
    convertPlutusScript: convertPlutusScript,
    convertVkeyWitnesses: convertVkeyWitnesses,
    convertVkeyWitness: convertVkeyWitness,
    convertWitnessSet: convertWitnessSet,
    deserializeWitnessSet: deserializeWitnessSet,
    plutusScriptBytes: $foreign.plutusScriptBytes
};
