// Generated by purs version 0.14.5
"use strict";
var Data_Bounded = require("../Data.Bounded/index.js");
var Data_Ord = require("../Data.Ord/index.js");
var Data_Show = require("../Data.Show/index.js");
var Min = function (x) {
    return x;
};
var showMin = function (dictShow) {
    return {
        show: function (v) {
            return "(Min " + (Data_Show.show(dictShow)(v) + ")");
        }
    };
};
var semigroupMin = function (dictOrd) {
    return {
        append: function (v) {
            return function (v1) {
                return Data_Ord.min(dictOrd)(v)(v1);
            };
        }
    };
};
var newtypeMin = {
    Coercible0: function () {
        return undefined;
    }
};
var monoidMin = function (dictBounded) {
    return {
        mempty: Data_Bounded.top(dictBounded),
        Semigroup0: function () {
            return semigroupMin(dictBounded.Ord0());
        }
    };
};
var eqMin = function (dictEq) {
    return dictEq;
};
var ordMin = function (dictOrd) {
    return {
        compare: function (v) {
            return function (v1) {
                return Data_Ord.compare(dictOrd)(v)(v1);
            };
        },
        Eq0: function () {
            return eqMin(dictOrd.Eq0());
        }
    };
};
module.exports = {
    Min: Min,
    newtypeMin: newtypeMin,
    eqMin: eqMin,
    ordMin: ordMin,
    semigroupMin: semigroupMin,
    monoidMin: monoidMin,
    showMin: showMin
};
