// Generated by purs version 0.14.5
"use strict";
var Aeson = require("../Aeson/index.js");
var Aeson_Decode = require("../Aeson.Decode/index.js");
var Aeson_Encode = require("../Aeson.Encode/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Data_Argonaut_Decode_Error = require("../Data.Argonaut.Decode.Error/index.js");
var Data_Either = require("../Data.Either/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Newtype = require("../Data.Newtype/index.js");
var Data_Show_Generic = require("../Data.Show.Generic/index.js");
var Record = require("../Record/index.js");
var Serialization_Address = require("../Serialization.Address/index.js");
var Serialization_Hash = require("../Serialization.Hash/index.js");
var Type_Proxy = require("../Type.Proxy/index.js");
var PubKeyHash = function (x) {
    return x;
};
var StakePubKeyHash = function (x) {
    return x;
};
var PaymentPubKeyHash = function (x) {
    return x;
};
var toMetadataPubKeyHash = Serialization_Hash.toMetadataEd25519KeyHash;
var toDataPubKeyHash = Serialization_Hash.toDataEd25519KeyHash;
var toDataStakePubKeyHash = toDataPubKeyHash;
var toDataPaymentPubKeyHash = toDataPubKeyHash;
var ordPubKeyHash = Serialization_Hash.ordEd25519KeyHash;
var ordStakePubKeyHash = ordPubKeyHash;
var ordPaymentPubKeyHash = ordPubKeyHash;
var newtypeStakePubKeyHash_ = {
    Coercible0: function () {
        return undefined;
    }
};
var newtypePubKeyHash_ = {
    Coercible0: function () {
        return undefined;
    }
};
var newtypePaymentPubKeyHash_ = {
    Coercible0: function () {
        return undefined;
    }
};
var genericStakePubKeyHash_ = {
    to: function (x) {
        return x;
    },
    from: function (x) {
        return x;
    }
};
var genericPubKeyHash_ = {
    to: function (x) {
        return x;
    },
    from: function (x) {
        return x;
    }
};
var showPubKeyHash = {
    show: Data_Show_Generic.genericShow(genericPubKeyHash_)(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Serialization_Hash.showEd25519KeyHash))({
        reflectSymbol: function () {
            return "PubKeyHash";
        }
    }))
};
var showStakePubKeyHash = {
    show: Data_Show_Generic.genericShow(genericStakePubKeyHash_)(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(showPubKeyHash))({
        reflectSymbol: function () {
            return "StakePubKeyHash";
        }
    }))
};
var genericPaymentPubKeyHash_ = {
    to: function (x) {
        return x;
    },
    from: function (x) {
        return x;
    }
};
var showPaymentPubKeyHash = {
    show: Data_Show_Generic.genericShow(genericPaymentPubKeyHash_)(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(showPubKeyHash))({
        reflectSymbol: function () {
            return "PaymentPubKeyHash";
        }
    }))
};
var fromMetadataPubKeyHash = Serialization_Hash.fromMetadataEd25519KeyHas;
var fromDataPubKeyHash = Serialization_Hash.fromDataEd25519KeyHash;
var fromDataStakePubKeyHash = fromDataPubKeyHash;
var fromDataPaymentPubKeyHash = fromDataPubKeyHash;
var eqPubKeyHash = Serialization_Hash.eqEd25519KeyHash;
var eqStakePubKeyHash = eqPubKeyHash;
var eqPaymentPubKeyHash = eqPubKeyHash;
var encodeAesonPubKeyHash = {
    "encodeAeson'": function (x) {
        return Aeson["encodeAeson'"](Aeson.encodeAesonAeson)(Aeson_Encode.encode(Aeson_Encode.record()(Aeson_Encode.rowListEncoderEncoderCons({
            reflectSymbol: function () {
                return "getPubKeyHash";
            }
        })()()()()(Aeson_Encode.rowListEncoderNil))({
            getPubKeyHash: Aeson_Encode.value(Serialization_Hash.encodeAesonEd25519KeyHash)
        }))({
            getPubKeyHash: Data_Newtype.unwrap()(x)
        }));
    }
};
var decodeAesonPubKeyHash = {
    decodeAeson: (function () {
        var $50 = Data_Functor.map(Data_Either.functorEither)((function () {
            var $53 = Data_Newtype.wrap();
            var $54 = Record.get({
                reflectSymbol: function () {
                    return "getPubKeyHash";
                }
            })()(Type_Proxy["Proxy"].value);
            return function ($55) {
                return $53($54($55));
            };
        })());
        var $51 = Aeson_Decode.decode(Aeson_Decode.record()(Aeson_Decode.rowListDecoderDecoderCons({
            reflectSymbol: function () {
                return "getPubKeyHash";
            }
        })()()()()(Aeson_Decode.rowListDecoderNil))("getPubKeyHash ")({
            getPubKeyHash: Aeson_Decode.value(Serialization_Hash.decodeAesonEd25519KeyHash)
        }));
        return function ($52) {
            return $50($51($52));
        };
    })()
};
var decodeAesonPaymentPubKeyH = {
    decodeAeson: Aeson.caseAesonObject(Data_Either.Left.create(new Data_Argonaut_Decode_Error.TypeMismatch("Expected object")))(Control_Bind.composeKleisli(Data_Either.bindEither)(Data_Function.flip(Aeson.getField(Aeson.decodeAesonAeson))("unPaymentPubKeyHash"))((function () {
        var $56 = Data_Functor.map(Data_Either.functorEither)(PaymentPubKeyHash);
        var $57 = Aeson.decodeAeson(decodeAesonPubKeyHash);
        return function ($58) {
            return $56($57($58));
        };
    })()))
};
var pubKeyHashBaseAddress = function (networkId) {
    return function (pkh) {
        return function (skh) {
            return Serialization_Address.baseAddressToAddress(Serialization_Address.paymentKeyHashStakeKeyHashAddress(networkId)(Data_Newtype.unwrap()(pkh))(Data_Newtype.unwrap()(Data_Newtype.unwrap()(skh))));
        };
    };
};
var payPubKeyHashBaseAddress = function (networkId) {
    return function (v) {
        return function (skh) {
            return pubKeyHashBaseAddress(networkId)(v)(skh);
        };
    };
};
var ed25519RewardAddress = function (dictNewtype) {
    return function (network) {
        return function (skh) {
            return Serialization_Address.rewardAddress({
                network: network,
                paymentCred: Serialization_Address.keyHashCredential(Data_Newtype.unwrap()(skh))
            });
        };
    };
};
var pubKeyHashRewardAddress = function (networkId) {
    var $59 = ed25519RewardAddress()(networkId);
    return function ($60) {
        return Serialization_Address.rewardAddressToAddress($59($60));
    };
};
var payPubKeyHashRewardAddress = function (networkId) {
    return function (v) {
        return pubKeyHashRewardAddress(networkId)(v);
    };
};
var stakePubKeyHashRewardAddress = function (networkId) {
    var $61 = ed25519RewardAddress()(networkId);
    var $62 = Data_Newtype.unwrap();
    return function ($63) {
        return Serialization_Address.rewardAddressToAddress($61($62($63)));
    };
};
var ed25519EnterpriseAddress = function (dictNewtype) {
    return function (network) {
        return function (pkh) {
            return Serialization_Address.enterpriseAddress({
                network: network,
                paymentCred: Serialization_Address.keyHashCredential(Data_Newtype.unwrap()(pkh))
            });
        };
    };
};
var pubKeyHashEnterpriseAddress = function (networkId) {
    var $64 = ed25519EnterpriseAddress()(networkId);
    return function ($65) {
        return Serialization_Address.enterpriseAddressToAddress($64($65));
    };
};
var payPubKeyHashEnterpriseAddress = function (networkId) {
    return function (v) {
        return pubKeyHashEnterpriseAddress(networkId)(v);
    };
};
module.exports = {
    PaymentPubKeyHash: PaymentPubKeyHash,
    PubKeyHash: PubKeyHash,
    StakePubKeyHash: StakePubKeyHash,
    payPubKeyHashBaseAddress: payPubKeyHashBaseAddress,
    payPubKeyHashEnterpriseAddress: payPubKeyHashEnterpriseAddress,
    payPubKeyHashRewardAddress: payPubKeyHashRewardAddress,
    pubKeyHashBaseAddress: pubKeyHashBaseAddress,
    pubKeyHashEnterpriseAddress: pubKeyHashEnterpriseAddress,
    pubKeyHashRewardAddress: pubKeyHashRewardAddress,
    stakePubKeyHashRewardAddress: stakePubKeyHashRewardAddress,
    genericPubKeyHash_: genericPubKeyHash_,
    newtypePubKeyHash_: newtypePubKeyHash_,
    eqPubKeyHash: eqPubKeyHash,
    fromDataPubKeyHash: fromDataPubKeyHash,
    fromMetadataPubKeyHash: fromMetadataPubKeyHash,
    ordPubKeyHash: ordPubKeyHash,
    toDataPubKeyHash: toDataPubKeyHash,
    toMetadataPubKeyHash: toMetadataPubKeyHash,
    showPubKeyHash: showPubKeyHash,
    encodeAesonPubKeyHash: encodeAesonPubKeyHash,
    decodeAesonPubKeyHash: decodeAesonPubKeyHash,
    genericPaymentPubKeyHash_: genericPaymentPubKeyHash_,
    newtypePaymentPubKeyHash_: newtypePaymentPubKeyHash_,
    eqPaymentPubKeyHash: eqPaymentPubKeyHash,
    fromDataPaymentPubKeyHash: fromDataPaymentPubKeyHash,
    ordPaymentPubKeyHash: ordPaymentPubKeyHash,
    toDataPaymentPubKeyHash: toDataPaymentPubKeyHash,
    showPaymentPubKeyHash: showPaymentPubKeyHash,
    decodeAesonPaymentPubKeyH: decodeAesonPaymentPubKeyH,
    genericStakePubKeyHash_: genericStakePubKeyHash_,
    newtypeStakePubKeyHash_: newtypeStakePubKeyHash_,
    eqStakePubKeyHash: eqStakePubKeyHash,
    fromDataStakePubKeyHash: fromDataStakePubKeyHash,
    ordStakePubKeyHash: ordStakePubKeyHash,
    toDataStakePubKeyHash: toDataStakePubKeyHash,
    showStakePubKeyHash: showStakePubKeyHash
};
