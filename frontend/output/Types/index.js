// Generated by purs version 0.14.5
"use strict";
var Data_BigInt = require("../Data.BigInt/index.js");
var Data_Eq = require("../Data.Eq/index.js");
var Data_Generic_Rep = require("../Data.Generic.Rep/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Semiring = require("../Data.Semiring/index.js");
var Data_Show = require("../Data.Show/index.js");
var Data_Show_Generic = require("../Data.Show.Generic/index.js");
var FromData = require("../FromData/index.js");
var Plutus_Types_Address = require("../Plutus.Types.Address/index.js");
var Plutus_Types_CurrencySymbol = require("../Plutus.Types.CurrencySymbol/index.js");
var ToData = require("../ToData/index.js");
var TypeLevel_Nat = require("../TypeLevel.Nat/index.js");
var TypeLevel_RowList_Unordered_Indexed = require("../TypeLevel.RowList.Unordered.Indexed/index.js");
var Types_ByteArray = require("../Types.ByteArray/index.js");
var Types_Natural = require("../Types.Natural/index.js");
var Types_PlutusData = require("../Types.PlutusData/index.js");
var Types_PubKeyHash = require("../Types.PubKeyHash/index.js");
var Types_Rational = require("../Types.Rational/index.js");
var Types_TokenName = require("../Types.TokenName/index.js");
var Types_Transaction = require("../Types.Transaction/index.js");
var Bonded = (function () {
    function Bonded() {

    };
    Bonded.value = new Bonded();
    return Bonded;
})();
var Unbonded = (function () {
    function Unbonded() {

    };
    Unbonded.value = new Unbonded();
    return Unbonded;
})();
var PoolInfo = function (x) {
    return x;
};
var MintHead = (function () {
    function MintHead(value0) {
        this.value0 = value0;
    };
    MintHead.create = function (value0) {
        return new MintHead(value0);
    };
    return MintHead;
})();
var MintInBetween = (function () {
    function MintInBetween(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    MintInBetween.create = function (value0) {
        return function (value1) {
            return new MintInBetween(value0, value1);
        };
    };
    return MintInBetween;
})();
var MintEnd = (function () {
    function MintEnd(value0) {
        this.value0 = value0;
    };
    MintEnd.create = function (value0) {
        return new MintEnd(value0);
    };
    return MintEnd;
})();
var Entry = function (x) {
    return x;
};
var BurnHead = (function () {
    function BurnHead(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    BurnHead.create = function (value0) {
        return function (value1) {
            return new BurnHead(value0, value1);
        };
    };
    return BurnHead;
})();
var BurnOther = (function () {
    function BurnOther(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    BurnOther.create = function (value0) {
        return function (value1) {
            return new BurnOther(value0, value1);
        };
    };
    return BurnOther;
})();
var BurnSingle = (function () {
    function BurnSingle(value0) {
        this.value0 = value0;
    };
    BurnSingle.create = function (value0) {
        return new BurnSingle(value0);
    };
    return BurnSingle;
})();
var ListInsert = (function () {
    function ListInsert(value0) {
        this.value0 = value0;
    };
    ListInsert.create = function (value0) {
        return new ListInsert(value0);
    };
    return ListInsert;
})();
var ListRemove = (function () {
    function ListRemove(value0) {
        this.value0 = value0;
    };
    ListRemove.create = function (value0) {
        return new ListRemove(value0);
    };
    return ListRemove;
})();
var StateDatum = (function () {
    function StateDatum(value0) {
        this.value0 = value0;
    };
    StateDatum.create = function (value0) {
        return new StateDatum(value0);
    };
    return StateDatum;
})();
var EntryDatum = (function () {
    function EntryDatum(value0) {
        this.value0 = value0;
    };
    EntryDatum.create = function (value0) {
        return new EntryDatum(value0);
    };
    return EntryDatum;
})();
var AssetDatum = (function () {
    function AssetDatum() {

    };
    AssetDatum.value = new AssetDatum();
    return AssetDatum;
})();
var AdminAct = (function () {
    function AdminAct() {

    };
    AdminAct.value = new AdminAct();
    return AdminAct;
})();
var StakeAct = (function () {
    function StakeAct(value0) {
        this.value0 = value0;
    };
    StakeAct.create = function (value0) {
        return new StakeAct(value0);
    };
    return StakeAct;
})();
var WithdrawAct = (function () {
    function WithdrawAct(value0) {
        this.value0 = value0;
    };
    WithdrawAct.create = function (value0) {
        return new WithdrawAct(value0);
    };
    return WithdrawAct;
})();
var CloseAct = (function () {
    function CloseAct() {

    };
    CloseAct.value = new CloseAct();
    return CloseAct;
})();
var AssetClass = function (x) {
    return x;
};
var BondedPoolParams = function (x) {
    return x;
};
var InitialBondedParams = function (x) {
    return x;
};
var newtypePoolInfo_ = {
    Coercible0: function () {
        return undefined;
    }
};
var newtypeInitialBondedParam = {
    Coercible0: function () {
        return undefined;
    }
};
var newtypeEntry_ = {
    Coercible0: function () {
        return undefined;
    }
};
var newtypeBondedPoolParams_ = {
    Coercible0: function () {
        return undefined;
    }
};
var newtypeAssetClass_ = {
    Coercible0: function () {
        return undefined;
    }
};
var hasPlutusSchemaMintingAct = {};
var hasPlutusSchemaListAction = {};
var hasPlutusSchemaEntry$34Entr = {};
var hasPlutusSchemaBurningAct = {};
var hasPlutusSchemaBondedStak = {};
var hasPlutusSchemaBondedStak1 = {};
var hasPlutusSchemaAssetClass = {};
var genericPoolInfo_ = {
    to: function (x) {
        return x;
    },
    from: function (x) {
        return x;
    }
};
var showPoolInfo = {
    show: Data_Show_Generic.genericShow(genericPoolInfo_)(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
        reflectSymbol: function () {
            return "assocListCs";
        }
    })(Data_Show.showRecordFieldsCons({
        reflectSymbol: function () {
            return "poolAddr";
        }
    })(Data_Show.showRecordFieldsCons({
        reflectSymbol: function () {
            return "stateNftCs";
        }
    })(Data_Show.showRecordFieldsNil)(Plutus_Types_CurrencySymbol.showCurrencySymbol))(Plutus_Types_Address.showAddress))(Plutus_Types_CurrencySymbol.showCurrencySymbol))))({
        reflectSymbol: function () {
            return "PoolInfo";
        }
    }))
};
var genericMintingAction_ = {
    to: function (x) {
        if (x instanceof Data_Generic_Rep.Inl) {
            return new MintHead(x.value0);
        };
        if (x instanceof Data_Generic_Rep.Inr && x.value0 instanceof Data_Generic_Rep.Inl) {
            return new MintInBetween(x.value0.value0.value0, x.value0.value0.value1);
        };
        if (x instanceof Data_Generic_Rep.Inr && x.value0 instanceof Data_Generic_Rep.Inr) {
            return new MintEnd(x.value0.value0);
        };
        throw new Error("Failed pattern match at Types (line 272, column 1 - line 272, column 40): " + [ x.constructor.name ]);
    },
    from: function (x) {
        if (x instanceof MintHead) {
            return new Data_Generic_Rep.Inl(x.value0);
        };
        if (x instanceof MintInBetween) {
            return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(new Data_Generic_Rep.Product(x.value0, x.value1)));
        };
        if (x instanceof MintEnd) {
            return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(x.value0));
        };
        throw new Error("Failed pattern match at Types (line 272, column 1 - line 272, column 40): " + [ x.constructor.name ]);
    }
};
var showMintingAction = {
    show: Data_Show_Generic.genericShow(genericMintingAction_)(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Types_Transaction.showTransactionInput))({
        reflectSymbol: function () {
            return "MintHead";
        }
    }))(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsProduct(Data_Show_Generic.genericShowArgsArgument(Types_Transaction.showTransactionInput))(Data_Show_Generic.genericShowArgsArgument(Types_Transaction.showTransactionInput)))({
        reflectSymbol: function () {
            return "MintInBetween";
        }
    }))(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Types_Transaction.showTransactionInput))({
        reflectSymbol: function () {
            return "MintEnd";
        }
    }))))
};
var toDataMintingAction = {
    toData: ToData.genericToData(genericMintingAction_)(ToData.toDataWithSchemaSum(ToData.toDataWithSchemaConstruct({
        reflectSymbol: function () {
            return "MintHead";
        }
    })(ToData.toDataArgsArgument(Types_Transaction.toDataTransactionInput)({
        reflectSymbol: function () {
            return "MintHead";
        }
    }))()()(TypeLevel_RowList_Unordered_Indexed.getIndexWithLabelConsI1()()({
        reflectSymbol: function () {
            return "MintHead";
        }
    })(TypeLevel_Nat.knownNatZ))(TypeLevel_Nat.knownNatZ))(ToData.toDataWithSchemaSum(ToData.toDataWithSchemaConstruct({
        reflectSymbol: function () {
            return "MintInBetween";
        }
    })(ToData.toDataArgsProduct(ToData.toDataArgsArgument(Types_Transaction.toDataTransactionInput)({
        reflectSymbol: function () {
            return "MintInBetween";
        }
    }))(ToData.toDataArgsArgument(Types_Transaction.toDataTransactionInput)({
        reflectSymbol: function () {
            return "MintInBetween";
        }
    })))()()(TypeLevel_RowList_Unordered_Indexed.getIndexWithLabelConsI(TypeLevel_RowList_Unordered_Indexed.getIndexWithLabelConsI1()()({
        reflectSymbol: function () {
            return "MintInBetween";
        }
    })(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatZ)))()()({
        reflectSymbol: function () {
            return "MintInBetween";
        }
    })(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatZ)))(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatZ)))(ToData.toDataWithSchemaConstruct({
        reflectSymbol: function () {
            return "MintEnd";
        }
    })(ToData.toDataArgsArgument(Types_Transaction.toDataTransactionInput)({
        reflectSymbol: function () {
            return "MintEnd";
        }
    }))()()(TypeLevel_RowList_Unordered_Indexed.getIndexWithLabelConsI(TypeLevel_RowList_Unordered_Indexed.getIndexWithLabelConsI(TypeLevel_RowList_Unordered_Indexed.getIndexWithLabelConsI1()()({
        reflectSymbol: function () {
            return "MintEnd";
        }
    })(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatZ))))()()({
        reflectSymbol: function () {
            return "MintEnd";
        }
    })(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatZ))))()()({
        reflectSymbol: function () {
            return "MintEnd";
        }
    })(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatZ))))(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatZ))))))
};
var genericListAction_ = {
    to: function (x) {
        if (x instanceof Data_Generic_Rep.Inl) {
            return new ListInsert(x.value0);
        };
        if (x instanceof Data_Generic_Rep.Inr) {
            return new ListRemove(x.value0);
        };
        throw new Error("Failed pattern match at Types (line 375, column 1 - line 375, column 37): " + [ x.constructor.name ]);
    },
    from: function (x) {
        if (x instanceof ListInsert) {
            return new Data_Generic_Rep.Inl(x.value0);
        };
        if (x instanceof ListRemove) {
            return new Data_Generic_Rep.Inr(x.value0);
        };
        throw new Error("Failed pattern match at Types (line 375, column 1 - line 375, column 37): " + [ x.constructor.name ]);
    }
};
var genericInitialBondedParam = {
    to: function (x) {
        return x;
    },
    from: function (x) {
        return x;
    }
};
var genericEntry_ = {
    to: function (x) {
        return x;
    },
    from: function (x) {
        return x;
    }
};
var showEntry = {
    show: Data_Show_Generic.genericShow(genericEntry_)(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
        reflectSymbol: function () {
            return "deposited";
        }
    })(Data_Show.showRecordFieldsCons({
        reflectSymbol: function () {
            return "key";
        }
    })(Data_Show.showRecordFieldsCons({
        reflectSymbol: function () {
            return "newDeposit";
        }
    })(Data_Show.showRecordFieldsCons({
        reflectSymbol: function () {
            return "next";
        }
    })(Data_Show.showRecordFieldsCons({
        reflectSymbol: function () {
            return "rewards";
        }
    })(Data_Show.showRecordFieldsCons({
        reflectSymbol: function () {
            return "staked";
        }
    })(Data_Show.showRecordFieldsNil)(Data_BigInt.showBigInt))(Types_Rational.showRational))(Data_Maybe.showMaybe(Types_ByteArray.showByteArray)))(Data_BigInt.showBigInt))(Types_ByteArray.showByteArray))(Data_BigInt.showBigInt))))({
        reflectSymbol: function () {
            return "Entry";
        }
    }))
};
var toDataEntry = {
    toData: ToData.genericToData(genericEntry_)(ToData.toDataWithSchemaConstruct({
        reflectSymbol: function () {
            return "Entry";
        }
    })(ToData.toDataArgsArgumentRecord(ToData.toDataArgsRecord({
        reflectSymbol: function () {
            return "Entry";
        }
    })(ToData.toDataArgsRL(ToData.toDataArgsRLHelperCons(ToData.toDataBigInt)(ToData.toDataArgsRLHelperCons(ToData.toDataByteArray)(ToData.toDataArgsRLHelperCons(ToData.toDataBigInt)(ToData.toDataArgsRLHelperCons(ToData.toDataMaybe(ToData.toDataByteArray))(ToData.toDataArgsRLHelperCons(Types_Rational.toDataRational)(ToData.toDataArgsRLHelperCons(ToData.toDataBigInt)(ToData.toDataArgsRLHelperNilRow)()()()({
        reflectSymbol: function () {
            return "staked";
        }
    })({
        reflectSymbol: function () {
            return "Entry";
        }
    })()()()()(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatZ)))))()()()({
        reflectSymbol: function () {
            return "rewards";
        }
    })({
        reflectSymbol: function () {
            return "Entry";
        }
    })()()()()(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatZ))))))()()()({
        reflectSymbol: function () {
            return "next";
        }
    })({
        reflectSymbol: function () {
            return "Entry";
        }
    })()()()()(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatZ)))))))()()()({
        reflectSymbol: function () {
            return "newDeposit";
        }
    })({
        reflectSymbol: function () {
            return "Entry";
        }
    })()()()()(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatZ)))()()()({
        reflectSymbol: function () {
            return "key";
        }
    })({
        reflectSymbol: function () {
            return "Entry";
        }
    })()()()()(TypeLevel_Nat.knownNatZ))()()()({
        reflectSymbol: function () {
            return "deposited";
        }
    })({
        reflectSymbol: function () {
            return "Entry";
        }
    })()()()()(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatZ)))))()))()()(TypeLevel_RowList_Unordered_Indexed.getIndexWithLabelConsI1()()({
        reflectSymbol: function () {
            return "Entry";
        }
    })(TypeLevel_Nat.knownNatZ))(TypeLevel_Nat.knownNatZ))
};
var genericBurningAction_ = {
    to: function (x) {
        if (x instanceof Data_Generic_Rep.Inl) {
            return new BurnHead(x.value0.value0, x.value0.value1);
        };
        if (x instanceof Data_Generic_Rep.Inr && x.value0 instanceof Data_Generic_Rep.Inl) {
            return new BurnOther(x.value0.value0.value0, x.value0.value0.value1);
        };
        if (x instanceof Data_Generic_Rep.Inr && x.value0 instanceof Data_Generic_Rep.Inr) {
            return new BurnSingle(x.value0.value0);
        };
        throw new Error("Failed pattern match at Types (line 301, column 1 - line 301, column 40): " + [ x.constructor.name ]);
    },
    from: function (x) {
        if (x instanceof BurnHead) {
            return new Data_Generic_Rep.Inl(new Data_Generic_Rep.Product(x.value0, x.value1));
        };
        if (x instanceof BurnOther) {
            return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(new Data_Generic_Rep.Product(x.value0, x.value1)));
        };
        if (x instanceof BurnSingle) {
            return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(x.value0));
        };
        throw new Error("Failed pattern match at Types (line 301, column 1 - line 301, column 40): " + [ x.constructor.name ]);
    }
};
var showBurningAction = {
    show: Data_Show_Generic.genericShow(genericBurningAction_)(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsProduct(Data_Show_Generic.genericShowArgsArgument(Types_Transaction.showTransactionInput))(Data_Show_Generic.genericShowArgsArgument(Types_Transaction.showTransactionInput)))({
        reflectSymbol: function () {
            return "BurnHead";
        }
    }))(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsProduct(Data_Show_Generic.genericShowArgsArgument(Types_Transaction.showTransactionInput))(Data_Show_Generic.genericShowArgsArgument(Types_Transaction.showTransactionInput)))({
        reflectSymbol: function () {
            return "BurnOther";
        }
    }))(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Types_Transaction.showTransactionInput))({
        reflectSymbol: function () {
            return "BurnSingle";
        }
    }))))
};
var showListAction = {
    show: Data_Show_Generic.genericShow(genericListAction_)(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(showMintingAction))({
        reflectSymbol: function () {
            return "ListInsert";
        }
    }))(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(showBurningAction))({
        reflectSymbol: function () {
            return "ListRemove";
        }
    })))
};
var toDataBurningAction = {
    toData: ToData.genericToData(genericBurningAction_)(ToData.toDataWithSchemaSum(ToData.toDataWithSchemaConstruct({
        reflectSymbol: function () {
            return "BurnHead";
        }
    })(ToData.toDataArgsProduct(ToData.toDataArgsArgument(Types_Transaction.toDataTransactionInput)({
        reflectSymbol: function () {
            return "BurnHead";
        }
    }))(ToData.toDataArgsArgument(Types_Transaction.toDataTransactionInput)({
        reflectSymbol: function () {
            return "BurnHead";
        }
    })))()()(TypeLevel_RowList_Unordered_Indexed.getIndexWithLabelConsI1()()({
        reflectSymbol: function () {
            return "BurnHead";
        }
    })(TypeLevel_Nat.knownNatZ))(TypeLevel_Nat.knownNatZ))(ToData.toDataWithSchemaSum(ToData.toDataWithSchemaConstruct({
        reflectSymbol: function () {
            return "BurnOther";
        }
    })(ToData.toDataArgsProduct(ToData.toDataArgsArgument(Types_Transaction.toDataTransactionInput)({
        reflectSymbol: function () {
            return "BurnOther";
        }
    }))(ToData.toDataArgsArgument(Types_Transaction.toDataTransactionInput)({
        reflectSymbol: function () {
            return "BurnOther";
        }
    })))()()(TypeLevel_RowList_Unordered_Indexed.getIndexWithLabelConsI(TypeLevel_RowList_Unordered_Indexed.getIndexWithLabelConsI1()()({
        reflectSymbol: function () {
            return "BurnOther";
        }
    })(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatZ)))()()({
        reflectSymbol: function () {
            return "BurnOther";
        }
    })(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatZ)))(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatZ)))(ToData.toDataWithSchemaConstruct({
        reflectSymbol: function () {
            return "BurnSingle";
        }
    })(ToData.toDataArgsArgument(Types_Transaction.toDataTransactionInput)({
        reflectSymbol: function () {
            return "BurnSingle";
        }
    }))()()(TypeLevel_RowList_Unordered_Indexed.getIndexWithLabelConsI(TypeLevel_RowList_Unordered_Indexed.getIndexWithLabelConsI(TypeLevel_RowList_Unordered_Indexed.getIndexWithLabelConsI1()()({
        reflectSymbol: function () {
            return "BurnSingle";
        }
    })(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatZ))))()()({
        reflectSymbol: function () {
            return "BurnSingle";
        }
    })(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatZ))))()()({
        reflectSymbol: function () {
            return "BurnSingle";
        }
    })(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatZ))))(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatZ))))))
};
var toDataListAction = {
    toData: ToData.genericToData(genericListAction_)(ToData.toDataWithSchemaSum(ToData.toDataWithSchemaConstruct({
        reflectSymbol: function () {
            return "ListInsert";
        }
    })(ToData.toDataArgsArgument(toDataMintingAction)({
        reflectSymbol: function () {
            return "ListInsert";
        }
    }))()()(TypeLevel_RowList_Unordered_Indexed.getIndexWithLabelConsI1()()({
        reflectSymbol: function () {
            return "ListInsert";
        }
    })(TypeLevel_Nat.knownNatZ))(TypeLevel_Nat.knownNatZ))(ToData.toDataWithSchemaConstruct({
        reflectSymbol: function () {
            return "ListRemove";
        }
    })(ToData.toDataArgsArgument(toDataBurningAction)({
        reflectSymbol: function () {
            return "ListRemove";
        }
    }))()()(TypeLevel_RowList_Unordered_Indexed.getIndexWithLabelConsI(TypeLevel_RowList_Unordered_Indexed.getIndexWithLabelConsI1()()({
        reflectSymbol: function () {
            return "ListRemove";
        }
    })(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatZ)))()()({
        reflectSymbol: function () {
            return "ListRemove";
        }
    })(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatZ)))(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatZ))))
};
var genericBondedStakingDatum = {
    to: function (x) {
        if (x instanceof Data_Generic_Rep.Inl) {
            return new StateDatum(x.value0);
        };
        if (x instanceof Data_Generic_Rep.Inr && x.value0 instanceof Data_Generic_Rep.Inl) {
            return new EntryDatum(x.value0.value0);
        };
        if (x instanceof Data_Generic_Rep.Inr && x.value0 instanceof Data_Generic_Rep.Inr) {
            return AssetDatum.value;
        };
        throw new Error("Failed pattern match at Types (line 186, column 1 - line 186, column 45): " + [ x.constructor.name ]);
    },
    from: function (x) {
        if (x instanceof StateDatum) {
            return new Data_Generic_Rep.Inl(x.value0);
        };
        if (x instanceof EntryDatum) {
            return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(x.value0));
        };
        if (x instanceof AssetDatum) {
            return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(Data_Generic_Rep.NoArguments.value));
        };
        throw new Error("Failed pattern match at Types (line 186, column 1 - line 186, column 45): " + [ x.constructor.name ]);
    }
};
var showBondedStakingDatum = {
    show: Data_Show_Generic.genericShow(genericBondedStakingDatum)(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
        reflectSymbol: function () {
            return "maybeEntryName";
        }
    })(Data_Show.showRecordFieldsNil)(Data_Maybe.showMaybe(Types_ByteArray.showByteArray)))))({
        reflectSymbol: function () {
            return "StateDatum";
        }
    }))(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
        reflectSymbol: function () {
            return "entry";
        }
    })(Data_Show.showRecordFieldsNil)(showEntry))))({
        reflectSymbol: function () {
            return "EntryDatum";
        }
    }))(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsNoArguments)({
        reflectSymbol: function () {
            return "AssetDatum";
        }
    }))))
};
var toDataBondedStakingDatum = {
    toData: ToData.genericToData(genericBondedStakingDatum)(ToData.toDataWithSchemaSum(ToData.toDataWithSchemaConstruct({
        reflectSymbol: function () {
            return "StateDatum";
        }
    })(ToData.toDataArgsArgumentRecord(ToData.toDataArgsRecord({
        reflectSymbol: function () {
            return "StateDatum";
        }
    })(ToData.toDataArgsRL(ToData.toDataArgsRLHelperCons(ToData.toDataMaybe(ToData.toDataByteArray))(ToData.toDataArgsRLHelperNilRow)()()()({
        reflectSymbol: function () {
            return "maybeEntryName";
        }
    })({
        reflectSymbol: function () {
            return "StateDatum";
        }
    })()()()()(TypeLevel_Nat.knownNatZ)))()))()()(TypeLevel_RowList_Unordered_Indexed.getIndexWithLabelConsI1()()({
        reflectSymbol: function () {
            return "StateDatum";
        }
    })(TypeLevel_Nat.knownNatZ))(TypeLevel_Nat.knownNatZ))(ToData.toDataWithSchemaSum(ToData.toDataWithSchemaConstruct({
        reflectSymbol: function () {
            return "EntryDatum";
        }
    })(ToData.toDataArgsArgumentRecord(ToData.toDataArgsRecord({
        reflectSymbol: function () {
            return "EntryDatum";
        }
    })(ToData.toDataArgsRL(ToData.toDataArgsRLHelperCons(toDataEntry)(ToData.toDataArgsRLHelperNilRow)()()()({
        reflectSymbol: function () {
            return "entry";
        }
    })({
        reflectSymbol: function () {
            return "EntryDatum";
        }
    })()()()()(TypeLevel_Nat.knownNatZ)))()))()()(TypeLevel_RowList_Unordered_Indexed.getIndexWithLabelConsI(TypeLevel_RowList_Unordered_Indexed.getIndexWithLabelConsI1()()({
        reflectSymbol: function () {
            return "EntryDatum";
        }
    })(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatZ)))()()({
        reflectSymbol: function () {
            return "EntryDatum";
        }
    })(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatZ)))(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatZ)))(ToData.toDataWithSchemaConstruct({
        reflectSymbol: function () {
            return "AssetDatum";
        }
    })(ToData.toDataArgsNoArguments({
        reflectSymbol: function () {
            return "AssetDatum";
        }
    }))()()(TypeLevel_RowList_Unordered_Indexed.getIndexWithLabelConsI(TypeLevel_RowList_Unordered_Indexed.getIndexWithLabelConsI(TypeLevel_RowList_Unordered_Indexed.getIndexWithLabelConsI1()()({
        reflectSymbol: function () {
            return "AssetDatum";
        }
    })(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatZ))))()()({
        reflectSymbol: function () {
            return "AssetDatum";
        }
    })(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatZ))))()()({
        reflectSymbol: function () {
            return "AssetDatum";
        }
    })(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatZ))))(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatZ))))))
};
var genericBondedStakingActio = {
    to: function (x) {
        if (x instanceof Data_Generic_Rep.Inl) {
            return AdminAct.value;
        };
        if (x instanceof Data_Generic_Rep.Inr && x.value0 instanceof Data_Generic_Rep.Inl) {
            return new StakeAct(x.value0.value0);
        };
        if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0 instanceof Data_Generic_Rep.Inl)) {
            return new WithdrawAct(x.value0.value0.value0);
        };
        if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0 instanceof Data_Generic_Rep.Inr)) {
            return CloseAct.value;
        };
        throw new Error("Failed pattern match at Types (line 258, column 1 - line 258, column 46): " + [ x.constructor.name ]);
    },
    from: function (x) {
        if (x instanceof AdminAct) {
            return new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value);
        };
        if (x instanceof StakeAct) {
            return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(x.value0));
        };
        if (x instanceof WithdrawAct) {
            return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(x.value0)));
        };
        if (x instanceof CloseAct) {
            return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(Data_Generic_Rep.NoArguments.value)));
        };
        throw new Error("Failed pattern match at Types (line 258, column 1 - line 258, column 46): " + [ x.constructor.name ]);
    }
};
var toDataBondedStakingAction = {
    toData: ToData.genericToData(genericBondedStakingActio)(ToData.toDataWithSchemaSum(ToData.toDataWithSchemaConstruct({
        reflectSymbol: function () {
            return "AdminAct";
        }
    })(ToData.toDataArgsNoArguments({
        reflectSymbol: function () {
            return "AdminAct";
        }
    }))()()(TypeLevel_RowList_Unordered_Indexed.getIndexWithLabelConsI1()()({
        reflectSymbol: function () {
            return "AdminAct";
        }
    })(TypeLevel_Nat.knownNatZ))(TypeLevel_Nat.knownNatZ))(ToData.toDataWithSchemaSum(ToData.toDataWithSchemaConstruct({
        reflectSymbol: function () {
            return "StakeAct";
        }
    })(ToData.toDataArgsArgumentRecord(ToData.toDataArgsRecord({
        reflectSymbol: function () {
            return "StakeAct";
        }
    })(ToData.toDataArgsRL(ToData.toDataArgsRLHelperCons(ToData.toDataMaybe(toDataMintingAction))(ToData.toDataArgsRLHelperCons(Types_Natural.toDataNatural)(ToData.toDataArgsRLHelperCons(Types_PubKeyHash.toDataPaymentPubKeyHash)(ToData.toDataArgsRLHelperNilRow)()()()({
        reflectSymbol: function () {
            return "stakeHolder";
        }
    })({
        reflectSymbol: function () {
            return "StakeAct";
        }
    })()()()()(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatZ)))()()()({
        reflectSymbol: function () {
            return "stakeAmount";
        }
    })({
        reflectSymbol: function () {
            return "StakeAct";
        }
    })()()()()(TypeLevel_Nat.knownNatZ))()()()({
        reflectSymbol: function () {
            return "mintingAction";
        }
    })({
        reflectSymbol: function () {
            return "StakeAct";
        }
    })()()()()(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatZ)))))()))()()(TypeLevel_RowList_Unordered_Indexed.getIndexWithLabelConsI(TypeLevel_RowList_Unordered_Indexed.getIndexWithLabelConsI1()()({
        reflectSymbol: function () {
            return "StakeAct";
        }
    })(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatZ)))()()({
        reflectSymbol: function () {
            return "StakeAct";
        }
    })(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatZ)))(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatZ)))(ToData.toDataWithSchemaSum(ToData.toDataWithSchemaConstruct({
        reflectSymbol: function () {
            return "WithdrawAct";
        }
    })(ToData.toDataArgsArgumentRecord(ToData.toDataArgsRecord({
        reflectSymbol: function () {
            return "WithdrawAct";
        }
    })(ToData.toDataArgsRL(ToData.toDataArgsRLHelperCons(toDataBurningAction)(ToData.toDataArgsRLHelperCons(Types_PubKeyHash.toDataPaymentPubKeyHash)(ToData.toDataArgsRLHelperNilRow)()()()({
        reflectSymbol: function () {
            return "stakeHolder";
        }
    })({
        reflectSymbol: function () {
            return "WithdrawAct";
        }
    })()()()()(TypeLevel_Nat.knownNatZ))()()()({
        reflectSymbol: function () {
            return "burningAction";
        }
    })({
        reflectSymbol: function () {
            return "WithdrawAct";
        }
    })()()()()(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatZ))))()))()()(TypeLevel_RowList_Unordered_Indexed.getIndexWithLabelConsI(TypeLevel_RowList_Unordered_Indexed.getIndexWithLabelConsI(TypeLevel_RowList_Unordered_Indexed.getIndexWithLabelConsI1()()({
        reflectSymbol: function () {
            return "WithdrawAct";
        }
    })(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatZ))))()()({
        reflectSymbol: function () {
            return "WithdrawAct";
        }
    })(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatZ))))()()({
        reflectSymbol: function () {
            return "WithdrawAct";
        }
    })(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatZ))))(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatZ))))(ToData.toDataWithSchemaConstruct({
        reflectSymbol: function () {
            return "CloseAct";
        }
    })(ToData.toDataArgsNoArguments({
        reflectSymbol: function () {
            return "CloseAct";
        }
    }))()()(TypeLevel_RowList_Unordered_Indexed.getIndexWithLabelConsI(TypeLevel_RowList_Unordered_Indexed.getIndexWithLabelConsI(TypeLevel_RowList_Unordered_Indexed.getIndexWithLabelConsI(TypeLevel_RowList_Unordered_Indexed.getIndexWithLabelConsI1()()({
        reflectSymbol: function () {
            return "CloseAct";
        }
    })(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatZ)))))()()({
        reflectSymbol: function () {
            return "CloseAct";
        }
    })(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatZ)))))()()({
        reflectSymbol: function () {
            return "CloseAct";
        }
    })(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatZ)))))()()({
        reflectSymbol: function () {
            return "CloseAct";
        }
    })(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatZ)))))(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatZ))))))))
};
var genericBondedPoolParams_ = {
    to: function (x) {
        return x;
    },
    from: function (x) {
        return x;
    }
};
var genericAssetClass_ = {
    to: function (x) {
        return x;
    },
    from: function (x) {
        return x;
    }
};
var showAssetClass = {
    show: Data_Show_Generic.genericShow(genericAssetClass_)(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
        reflectSymbol: function () {
            return "currencySymbol";
        }
    })(Data_Show.showRecordFieldsCons({
        reflectSymbol: function () {
            return "tokenName";
        }
    })(Data_Show.showRecordFieldsNil)(Types_TokenName.showTokenName))(Plutus_Types_CurrencySymbol.showCurrencySymbol))))({
        reflectSymbol: function () {
            return "AssetClass";
        }
    }))
};
var showBondedPoolParams = {
    show: Data_Show_Generic.genericShow(genericBondedPoolParams_)(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
        reflectSymbol: function () {
            return "admin";
        }
    })(Data_Show.showRecordFieldsCons({
        reflectSymbol: function () {
            return "assocListCs";
        }
    })(Data_Show.showRecordFieldsCons({
        reflectSymbol: function () {
            return "bondedAssetClass";
        }
    })(Data_Show.showRecordFieldsCons({
        reflectSymbol: function () {
            return "bondingLength";
        }
    })(Data_Show.showRecordFieldsCons({
        reflectSymbol: function () {
            return "end";
        }
    })(Data_Show.showRecordFieldsCons({
        reflectSymbol: function () {
            return "interest";
        }
    })(Data_Show.showRecordFieldsCons({
        reflectSymbol: function () {
            return "iterations";
        }
    })(Data_Show.showRecordFieldsCons({
        reflectSymbol: function () {
            return "maxStake";
        }
    })(Data_Show.showRecordFieldsCons({
        reflectSymbol: function () {
            return "minStake";
        }
    })(Data_Show.showRecordFieldsCons({
        reflectSymbol: function () {
            return "nftCs";
        }
    })(Data_Show.showRecordFieldsCons({
        reflectSymbol: function () {
            return "start";
        }
    })(Data_Show.showRecordFieldsCons({
        reflectSymbol: function () {
            return "userLength";
        }
    })(Data_Show.showRecordFieldsNil)(Data_BigInt.showBigInt))(Data_BigInt.showBigInt))(Plutus_Types_CurrencySymbol.showCurrencySymbol))(Types_Natural.showNatural))(Types_Natural.showNatural))(Types_Natural.showNatural))(Types_Rational.showRational))(Data_BigInt.showBigInt))(Data_BigInt.showBigInt))(showAssetClass))(Plutus_Types_CurrencySymbol.showCurrencySymbol))(Types_PubKeyHash.showPaymentPubKeyHash))))({
        reflectSymbol: function () {
            return "BondedPoolParams";
        }
    }))
};
var showInitialBondedParams = {
    show: Data_Show_Generic.genericShow(genericInitialBondedParam)(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
        reflectSymbol: function () {
            return "bondedAssetClass";
        }
    })(Data_Show.showRecordFieldsCons({
        reflectSymbol: function () {
            return "bondingLength";
        }
    })(Data_Show.showRecordFieldsCons({
        reflectSymbol: function () {
            return "end";
        }
    })(Data_Show.showRecordFieldsCons({
        reflectSymbol: function () {
            return "interest";
        }
    })(Data_Show.showRecordFieldsCons({
        reflectSymbol: function () {
            return "iterations";
        }
    })(Data_Show.showRecordFieldsCons({
        reflectSymbol: function () {
            return "maxStake";
        }
    })(Data_Show.showRecordFieldsCons({
        reflectSymbol: function () {
            return "minStake";
        }
    })(Data_Show.showRecordFieldsCons({
        reflectSymbol: function () {
            return "start";
        }
    })(Data_Show.showRecordFieldsCons({
        reflectSymbol: function () {
            return "userLength";
        }
    })(Data_Show.showRecordFieldsNil)(Data_BigInt.showBigInt))(Data_BigInt.showBigInt))(Types_Natural.showNatural))(Types_Natural.showNatural))(Types_Natural.showNatural))(Types_Rational.showRational))(Data_BigInt.showBigInt))(Data_BigInt.showBigInt))(showAssetClass))))({
        reflectSymbol: function () {
            return "InitialBondedParams";
        }
    }))
};
var toDataAssetClass = {
    toData: ToData.genericToData(genericAssetClass_)(ToData.toDataWithSchemaConstruct({
        reflectSymbol: function () {
            return "AssetClass";
        }
    })(ToData.toDataArgsArgumentRecord(ToData.toDataArgsRecord({
        reflectSymbol: function () {
            return "AssetClass";
        }
    })(ToData.toDataArgsRL(ToData.toDataArgsRLHelperCons(Plutus_Types_CurrencySymbol.toDataCurrencySymbol)(ToData.toDataArgsRLHelperCons(Types_TokenName.toDataTokenName)(ToData.toDataArgsRLHelperNilRow)()()()({
        reflectSymbol: function () {
            return "tokenName";
        }
    })({
        reflectSymbol: function () {
            return "AssetClass";
        }
    })()()()()(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatZ)))()()()({
        reflectSymbol: function () {
            return "currencySymbol";
        }
    })({
        reflectSymbol: function () {
            return "AssetClass";
        }
    })()()()()(TypeLevel_Nat.knownNatZ)))()))()()(TypeLevel_RowList_Unordered_Indexed.getIndexWithLabelConsI1()()({
        reflectSymbol: function () {
            return "AssetClass";
        }
    })(TypeLevel_Nat.knownNatZ))(TypeLevel_Nat.knownNatZ))
};
var toDataBondedPoolParams = {
    toData: function (v) {
        return new Types_PlutusData.Constr(Data_Semiring.zero(Data_BigInt.semiringBigInt), [ ToData.toData(Types_Natural.toDataNatural)(v.iterations), ToData.toData(ToData.toDataBigInt)(v.start), ToData.toData(ToData.toDataBigInt)(v.end), ToData.toData(ToData.toDataBigInt)(v.userLength), ToData.toData(ToData.toDataBigInt)(v.bondingLength), ToData.toData(Types_Rational.toDataRational)(v.interest), ToData.toData(Types_Natural.toDataNatural)(v.minStake), ToData.toData(Types_Natural.toDataNatural)(v.maxStake), ToData.toData(Types_PubKeyHash.toDataPaymentPubKeyHash)(v.admin), ToData.toData(toDataAssetClass)(v.bondedAssetClass), ToData.toData(Plutus_Types_CurrencySymbol.toDataCurrencySymbol)(v.nftCs), ToData.toData(Plutus_Types_CurrencySymbol.toDataCurrencySymbol)(v.assocListCs) ]);
    }
};
var fromDataMintingAction = {
    fromData: FromData.genericFromData(genericMintingAction_)(FromData.fromDataWithSchemaSum(FromData.fromDataWithSchemaConstru({
        reflectSymbol: function () {
            return "MintHead";
        }
    })()()(TypeLevel_RowList_Unordered_Indexed.getIndexWithLabelConsI1()()({
        reflectSymbol: function () {
            return "MintHead";
        }
    })(TypeLevel_Nat.knownNatZ))(FromData.fromDataArgsArgument(Types_Transaction.fromDataTransactionInput))(TypeLevel_Nat.knownNatZ))(FromData.fromDataWithSchemaSum(FromData.fromDataWithSchemaConstru({
        reflectSymbol: function () {
            return "MintInBetween";
        }
    })()()(TypeLevel_RowList_Unordered_Indexed.getIndexWithLabelConsI(TypeLevel_RowList_Unordered_Indexed.getIndexWithLabelConsI1()()({
        reflectSymbol: function () {
            return "MintInBetween";
        }
    })(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatZ)))()()({
        reflectSymbol: function () {
            return "MintInBetween";
        }
    })(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatZ)))(FromData.fromDataArgsProduct(FromData.fromDataArgsArgument(Types_Transaction.fromDataTransactionInput))(FromData.fromDataArgsArgument(Types_Transaction.fromDataTransactionInput)))(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatZ)))(FromData.fromDataWithSchemaConstru({
        reflectSymbol: function () {
            return "MintEnd";
        }
    })()()(TypeLevel_RowList_Unordered_Indexed.getIndexWithLabelConsI(TypeLevel_RowList_Unordered_Indexed.getIndexWithLabelConsI(TypeLevel_RowList_Unordered_Indexed.getIndexWithLabelConsI1()()({
        reflectSymbol: function () {
            return "MintEnd";
        }
    })(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatZ))))()()({
        reflectSymbol: function () {
            return "MintEnd";
        }
    })(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatZ))))()()({
        reflectSymbol: function () {
            return "MintEnd";
        }
    })(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatZ))))(FromData.fromDataArgsArgument(Types_Transaction.fromDataTransactionInput))(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatZ))))))
};
var fromDataEntry = {
    fromData: FromData.genericFromData(genericEntry_)(FromData.fromDataWithSchemaConstru({
        reflectSymbol: function () {
            return "Entry";
        }
    })()()(TypeLevel_RowList_Unordered_Indexed.getIndexWithLabelConsI1()()({
        reflectSymbol: function () {
            return "Entry";
        }
    })(TypeLevel_Nat.knownNatZ))(FromData.fromDataArgsArgumentRecor(FromData.fromDataArgsRLCons(FromData.fromDataByteArray)(FromData.fromDataArgsRLCons(FromData.fromDataBigInt)(FromData.fromDataArgsRLCons(FromData.fromDataBigInt)(FromData.fromDataArgsRLCons(FromData.fromDataBigInt)(FromData.fromDataArgsRLCons(Types_Rational.fromDataRational)(FromData.fromDataArgsRLCons(FromData.fromDataMaybe(FromData.fromDataByteArray))(FromData.fromDataArgsRLNilRow)()()({
        reflectSymbol: function () {
            return "next";
        }
    }))()()({
        reflectSymbol: function () {
            return "rewards";
        }
    }))()()({
        reflectSymbol: function () {
            return "staked";
        }
    }))()()({
        reflectSymbol: function () {
            return "deposited";
        }
    }))()()({
        reflectSymbol: function () {
            return "newDeposit";
        }
    }))()()({
        reflectSymbol: function () {
            return "key";
        }
    }))()()())(TypeLevel_Nat.knownNatZ))
};
var fromDataBurningAction = {
    fromData: FromData.genericFromData(genericBurningAction_)(FromData.fromDataWithSchemaSum(FromData.fromDataWithSchemaConstru({
        reflectSymbol: function () {
            return "BurnHead";
        }
    })()()(TypeLevel_RowList_Unordered_Indexed.getIndexWithLabelConsI1()()({
        reflectSymbol: function () {
            return "BurnHead";
        }
    })(TypeLevel_Nat.knownNatZ))(FromData.fromDataArgsProduct(FromData.fromDataArgsArgument(Types_Transaction.fromDataTransactionInput))(FromData.fromDataArgsArgument(Types_Transaction.fromDataTransactionInput)))(TypeLevel_Nat.knownNatZ))(FromData.fromDataWithSchemaSum(FromData.fromDataWithSchemaConstru({
        reflectSymbol: function () {
            return "BurnOther";
        }
    })()()(TypeLevel_RowList_Unordered_Indexed.getIndexWithLabelConsI(TypeLevel_RowList_Unordered_Indexed.getIndexWithLabelConsI1()()({
        reflectSymbol: function () {
            return "BurnOther";
        }
    })(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatZ)))()()({
        reflectSymbol: function () {
            return "BurnOther";
        }
    })(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatZ)))(FromData.fromDataArgsProduct(FromData.fromDataArgsArgument(Types_Transaction.fromDataTransactionInput))(FromData.fromDataArgsArgument(Types_Transaction.fromDataTransactionInput)))(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatZ)))(FromData.fromDataWithSchemaConstru({
        reflectSymbol: function () {
            return "BurnSingle";
        }
    })()()(TypeLevel_RowList_Unordered_Indexed.getIndexWithLabelConsI(TypeLevel_RowList_Unordered_Indexed.getIndexWithLabelConsI(TypeLevel_RowList_Unordered_Indexed.getIndexWithLabelConsI1()()({
        reflectSymbol: function () {
            return "BurnSingle";
        }
    })(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatZ))))()()({
        reflectSymbol: function () {
            return "BurnSingle";
        }
    })(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatZ))))()()({
        reflectSymbol: function () {
            return "BurnSingle";
        }
    })(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatZ))))(FromData.fromDataArgsArgument(Types_Transaction.fromDataTransactionInput))(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatZ))))))
};
var fromDataBondedStakingDatu = {
    fromData: FromData.genericFromData(genericBondedStakingDatum)(FromData.fromDataWithSchemaSum(FromData.fromDataWithSchemaConstru({
        reflectSymbol: function () {
            return "StateDatum";
        }
    })()()(TypeLevel_RowList_Unordered_Indexed.getIndexWithLabelConsI1()()({
        reflectSymbol: function () {
            return "StateDatum";
        }
    })(TypeLevel_Nat.knownNatZ))(FromData.fromDataArgsArgumentRecor(FromData.fromDataArgsRLCons(FromData.fromDataMaybe(FromData.fromDataByteArray))(FromData.fromDataArgsRLNilRow)()()({
        reflectSymbol: function () {
            return "maybeEntryName";
        }
    }))()()())(TypeLevel_Nat.knownNatZ))(FromData.fromDataWithSchemaSum(FromData.fromDataWithSchemaConstru({
        reflectSymbol: function () {
            return "EntryDatum";
        }
    })()()(TypeLevel_RowList_Unordered_Indexed.getIndexWithLabelConsI(TypeLevel_RowList_Unordered_Indexed.getIndexWithLabelConsI1()()({
        reflectSymbol: function () {
            return "EntryDatum";
        }
    })(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatZ)))()()({
        reflectSymbol: function () {
            return "EntryDatum";
        }
    })(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatZ)))(FromData.fromDataArgsArgumentRecor(FromData.fromDataArgsRLCons(fromDataEntry)(FromData.fromDataArgsRLNilRow)()()({
        reflectSymbol: function () {
            return "entry";
        }
    }))()()())(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatZ)))(FromData.fromDataWithSchemaConstru({
        reflectSymbol: function () {
            return "AssetDatum";
        }
    })()()(TypeLevel_RowList_Unordered_Indexed.getIndexWithLabelConsI(TypeLevel_RowList_Unordered_Indexed.getIndexWithLabelConsI(TypeLevel_RowList_Unordered_Indexed.getIndexWithLabelConsI1()()({
        reflectSymbol: function () {
            return "AssetDatum";
        }
    })(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatZ))))()()({
        reflectSymbol: function () {
            return "AssetDatum";
        }
    })(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatZ))))()()({
        reflectSymbol: function () {
            return "AssetDatum";
        }
    })(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatZ))))(FromData.fromDataArgsNoArguments)(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatZ))))))
};
var fromDataBondedStakingActi = {
    fromData: FromData.genericFromData(genericBondedStakingActio)(FromData.fromDataWithSchemaSum(FromData.fromDataWithSchemaConstru({
        reflectSymbol: function () {
            return "AdminAct";
        }
    })()()(TypeLevel_RowList_Unordered_Indexed.getIndexWithLabelConsI1()()({
        reflectSymbol: function () {
            return "AdminAct";
        }
    })(TypeLevel_Nat.knownNatZ))(FromData.fromDataArgsNoArguments)(TypeLevel_Nat.knownNatZ))(FromData.fromDataWithSchemaSum(FromData.fromDataWithSchemaConstru({
        reflectSymbol: function () {
            return "StakeAct";
        }
    })()()(TypeLevel_RowList_Unordered_Indexed.getIndexWithLabelConsI(TypeLevel_RowList_Unordered_Indexed.getIndexWithLabelConsI1()()({
        reflectSymbol: function () {
            return "StakeAct";
        }
    })(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatZ)))()()({
        reflectSymbol: function () {
            return "StakeAct";
        }
    })(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatZ)))(FromData.fromDataArgsArgumentRecor(FromData.fromDataArgsRLCons(Types_Natural.fromDataNatural)(FromData.fromDataArgsRLCons(Types_PubKeyHash.fromDataPaymentPubKeyHash)(FromData.fromDataArgsRLCons(FromData.fromDataMaybe(fromDataMintingAction))(FromData.fromDataArgsRLNilRow)()()({
        reflectSymbol: function () {
            return "mintingAction";
        }
    }))()()({
        reflectSymbol: function () {
            return "stakeHolder";
        }
    }))()()({
        reflectSymbol: function () {
            return "stakeAmount";
        }
    }))()()())(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatZ)))(FromData.fromDataWithSchemaSum(FromData.fromDataWithSchemaConstru({
        reflectSymbol: function () {
            return "WithdrawAct";
        }
    })()()(TypeLevel_RowList_Unordered_Indexed.getIndexWithLabelConsI(TypeLevel_RowList_Unordered_Indexed.getIndexWithLabelConsI(TypeLevel_RowList_Unordered_Indexed.getIndexWithLabelConsI1()()({
        reflectSymbol: function () {
            return "WithdrawAct";
        }
    })(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatZ))))()()({
        reflectSymbol: function () {
            return "WithdrawAct";
        }
    })(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatZ))))()()({
        reflectSymbol: function () {
            return "WithdrawAct";
        }
    })(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatZ))))(FromData.fromDataArgsArgumentRecor(FromData.fromDataArgsRLCons(Types_PubKeyHash.fromDataPaymentPubKeyHash)(FromData.fromDataArgsRLCons(fromDataBurningAction)(FromData.fromDataArgsRLNilRow)()()({
        reflectSymbol: function () {
            return "burningAction";
        }
    }))()()({
        reflectSymbol: function () {
            return "stakeHolder";
        }
    }))()()())(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatZ))))(FromData.fromDataWithSchemaConstru({
        reflectSymbol: function () {
            return "CloseAct";
        }
    })()()(TypeLevel_RowList_Unordered_Indexed.getIndexWithLabelConsI(TypeLevel_RowList_Unordered_Indexed.getIndexWithLabelConsI(TypeLevel_RowList_Unordered_Indexed.getIndexWithLabelConsI(TypeLevel_RowList_Unordered_Indexed.getIndexWithLabelConsI1()()({
        reflectSymbol: function () {
            return "CloseAct";
        }
    })(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatZ)))))()()({
        reflectSymbol: function () {
            return "CloseAct";
        }
    })(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatZ)))))()()({
        reflectSymbol: function () {
            return "CloseAct";
        }
    })(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatZ)))))()()({
        reflectSymbol: function () {
            return "CloseAct";
        }
    })(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatZ)))))(FromData.fromDataArgsNoArguments)(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatZ))))))))
};
var eqPoolInfo = {
    eq: function (x) {
        return function (y) {
            return Data_Eq.eq(Plutus_Types_CurrencySymbol.eqCurrencySymbol)(x.assocListCs)(y.assocListCs) && Data_Eq.eq(Plutus_Types_Address.eqAddress)(x.poolAddr)(y.poolAddr) && Data_Eq.eq(Plutus_Types_CurrencySymbol.eqCurrencySymbol)(x.stateNftCs)(y.stateNftCs);
        };
    }
};
var eqMintingAction = {
    eq: function (x) {
        return function (y) {
            if (x instanceof MintHead && y instanceof MintHead) {
                return Data_Eq.eq(Types_Transaction.eqTransactionInput)(x.value0)(y.value0);
            };
            if (x instanceof MintInBetween && y instanceof MintInBetween) {
                return Data_Eq.eq(Types_Transaction.eqTransactionInput)(x.value0)(y.value0) && Data_Eq.eq(Types_Transaction.eqTransactionInput)(x.value1)(y.value1);
            };
            if (x instanceof MintEnd && y instanceof MintEnd) {
                return Data_Eq.eq(Types_Transaction.eqTransactionInput)(x.value0)(y.value0);
            };
            return false;
        };
    }
};
var eqEntry = {
    eq: function (x) {
        return function (y) {
            return Data_Eq.eq(Data_BigInt.eqBigInt)(x.deposited)(y.deposited) && Data_Eq.eq(Types_ByteArray.eqByteArray)(x.key)(y.key) && Data_Eq.eq(Data_BigInt.eqBigInt)(x.newDeposit)(y.newDeposit) && Data_Eq.eq(Data_Maybe.eqMaybe(Types_ByteArray.eqByteArray))(x.next)(y.next) && Data_Eq.eq(Types_Rational.eqRational)(x.rewards)(y.rewards) && Data_Eq.eq(Data_BigInt.eqBigInt)(x.staked)(y.staked);
        };
    }
};
var eqBurningAction = {
    eq: function (x) {
        return function (y) {
            if (x instanceof BurnHead && y instanceof BurnHead) {
                return Data_Eq.eq(Types_Transaction.eqTransactionInput)(x.value0)(y.value0) && Data_Eq.eq(Types_Transaction.eqTransactionInput)(x.value1)(y.value1);
            };
            if (x instanceof BurnOther && y instanceof BurnOther) {
                return Data_Eq.eq(Types_Transaction.eqTransactionInput)(x.value0)(y.value0) && Data_Eq.eq(Types_Transaction.eqTransactionInput)(x.value1)(y.value1);
            };
            if (x instanceof BurnSingle && y instanceof BurnSingle) {
                return Data_Eq.eq(Types_Transaction.eqTransactionInput)(x.value0)(y.value0);
            };
            return false;
        };
    }
};
var eqBondedStakingDatum = {
    eq: function (x) {
        return function (y) {
            if (x instanceof StateDatum && y instanceof StateDatum) {
                return Data_Eq.eq(Data_Maybe.eqMaybe(Types_ByteArray.eqByteArray))(x.value0.maybeEntryName)(y.value0.maybeEntryName);
            };
            if (x instanceof EntryDatum && y instanceof EntryDatum) {
                return Data_Eq.eq(eqEntry)(x.value0.entry)(y.value0.entry);
            };
            if (x instanceof AssetDatum && y instanceof AssetDatum) {
                return true;
            };
            return false;
        };
    }
};
var eqBondedStakingAction = {
    eq: function (x) {
        return function (y) {
            if (x instanceof AdminAct && y instanceof AdminAct) {
                return true;
            };
            if (x instanceof StakeAct && y instanceof StakeAct) {
                return Data_Eq.eq(Data_Maybe.eqMaybe(eqMintingAction))(x.value0.mintingAction)(y.value0.mintingAction) && Data_Eq.eq(Types_Natural.eqNatural)(x.value0.stakeAmount)(y.value0.stakeAmount) && Data_Eq.eq(Types_PubKeyHash.eqPaymentPubKeyHash)(x.value0.stakeHolder)(y.value0.stakeHolder);
            };
            if (x instanceof WithdrawAct && y instanceof WithdrawAct) {
                return Data_Eq.eq(eqBurningAction)(x.value0.burningAction)(y.value0.burningAction) && Data_Eq.eq(Types_PubKeyHash.eqPaymentPubKeyHash)(x.value0.stakeHolder)(y.value0.stakeHolder);
            };
            if (x instanceof CloseAct && y instanceof CloseAct) {
                return true;
            };
            return false;
        };
    }
};
var eqAssetClass = {
    eq: function (x) {
        return function (y) {
            return Data_Eq.eq(Plutus_Types_CurrencySymbol.eqCurrencySymbol)(x.currencySymbol)(y.currencySymbol) && Data_Eq.eq(Types_TokenName.eqTokenName)(x.tokenName)(y.tokenName);
        };
    }
};
var eqBondedPoolParams = {
    eq: function (x) {
        return function (y) {
            return Data_Eq.eq(Types_PubKeyHash.eqPaymentPubKeyHash)(x.admin)(y.admin) && Data_Eq.eq(Plutus_Types_CurrencySymbol.eqCurrencySymbol)(x.assocListCs)(y.assocListCs) && Data_Eq.eq(eqAssetClass)(x.bondedAssetClass)(y.bondedAssetClass) && Data_Eq.eq(Data_BigInt.eqBigInt)(x.bondingLength)(y.bondingLength) && Data_Eq.eq(Data_BigInt.eqBigInt)(x.end)(y.end) && Data_Eq.eq(Types_Rational.eqRational)(x.interest)(y.interest) && Data_Eq.eq(Types_Natural.eqNatural)(x.iterations)(y.iterations) && Data_Eq.eq(Types_Natural.eqNatural)(x.maxStake)(y.maxStake) && Data_Eq.eq(Types_Natural.eqNatural)(x.minStake)(y.minStake) && Data_Eq.eq(Plutus_Types_CurrencySymbol.eqCurrencySymbol)(x.nftCs)(y.nftCs) && Data_Eq.eq(Data_BigInt.eqBigInt)(x.start)(y.start) && Data_Eq.eq(Data_BigInt.eqBigInt)(x.userLength)(y.userLength);
        };
    }
};
var eqInitialBondedParams = {
    eq: function (x) {
        return function (y) {
            return Data_Eq.eq(eqAssetClass)(x.bondedAssetClass)(y.bondedAssetClass) && Data_Eq.eq(Data_BigInt.eqBigInt)(x.bondingLength)(y.bondingLength) && Data_Eq.eq(Data_BigInt.eqBigInt)(x.end)(y.end) && Data_Eq.eq(Types_Rational.eqRational)(x.interest)(y.interest) && Data_Eq.eq(Types_Natural.eqNatural)(x.iterations)(y.iterations) && Data_Eq.eq(Types_Natural.eqNatural)(x.maxStake)(y.maxStake) && Data_Eq.eq(Types_Natural.eqNatural)(x.minStake)(y.minStake) && Data_Eq.eq(Data_BigInt.eqBigInt)(x.start)(y.start) && Data_Eq.eq(Data_BigInt.eqBigInt)(x.userLength)(y.userLength);
        };
    }
};
module.exports = {
    AssetClass: AssetClass,
    BondedPoolParams: BondedPoolParams,
    AdminAct: AdminAct,
    StakeAct: StakeAct,
    WithdrawAct: WithdrawAct,
    CloseAct: CloseAct,
    StateDatum: StateDatum,
    EntryDatum: EntryDatum,
    AssetDatum: AssetDatum,
    BurnHead: BurnHead,
    BurnOther: BurnOther,
    BurnSingle: BurnSingle,
    Entry: Entry,
    InitialBondedParams: InitialBondedParams,
    ListInsert: ListInsert,
    ListRemove: ListRemove,
    MintHead: MintHead,
    MintInBetween: MintInBetween,
    MintEnd: MintEnd,
    PoolInfo: PoolInfo,
    Bonded: Bonded,
    Unbonded: Unbonded,
    genericAssetClass_: genericAssetClass_,
    newtypeAssetClass_: newtypeAssetClass_,
    eqAssetClass: eqAssetClass,
    hasPlutusSchemaAssetClass: hasPlutusSchemaAssetClass,
    toDataAssetClass: toDataAssetClass,
    showAssetClass: showAssetClass,
    genericPoolInfo_: genericPoolInfo_,
    newtypePoolInfo_: newtypePoolInfo_,
    eqPoolInfo: eqPoolInfo,
    showPoolInfo: showPoolInfo,
    genericBondedPoolParams_: genericBondedPoolParams_,
    eqBondedPoolParams: eqBondedPoolParams,
    newtypeBondedPoolParams_: newtypeBondedPoolParams_,
    showBondedPoolParams: showBondedPoolParams,
    genericInitialBondedParam: genericInitialBondedParam,
    newtypeInitialBondedParam: newtypeInitialBondedParam,
    eqInitialBondedParams: eqInitialBondedParams,
    showInitialBondedParams: showInitialBondedParams,
    toDataBondedPoolParams: toDataBondedPoolParams,
    genericBondedStakingDatum: genericBondedStakingDatum,
    eqBondedStakingDatum: eqBondedStakingDatum,
    hasPlutusSchemaBondedStak1: hasPlutusSchemaBondedStak1,
    fromDataBondedStakingDatu: fromDataBondedStakingDatu,
    toDataBondedStakingDatum: toDataBondedStakingDatum,
    showBondedStakingDatum: showBondedStakingDatum,
    hasPlutusSchemaBondedStak: hasPlutusSchemaBondedStak,
    genericBondedStakingActio: genericBondedStakingActio,
    eqBondedStakingAction: eqBondedStakingAction,
    fromDataBondedStakingActi: fromDataBondedStakingActi,
    toDataBondedStakingAction: toDataBondedStakingAction,
    genericMintingAction_: genericMintingAction_,
    eqMintingAction: eqMintingAction,
    showMintingAction: showMintingAction,
    hasPlutusSchemaMintingAct: hasPlutusSchemaMintingAct,
    fromDataMintingAction: fromDataMintingAction,
    toDataMintingAction: toDataMintingAction,
    genericBurningAction_: genericBurningAction_,
    eqBurningAction: eqBurningAction,
    showBurningAction: showBurningAction,
    hasPlutusSchemaBurningAct: hasPlutusSchemaBurningAct,
    fromDataBurningAction: fromDataBurningAction,
    toDataBurningAction: toDataBurningAction,
    genericEntry_: genericEntry_,
    newtypeEntry_: newtypeEntry_,
    eqEntry: eqEntry,
    "hasPlutusSchemaEntry\"Entr": hasPlutusSchemaEntry$34Entr,
    fromDataEntry: fromDataEntry,
    toDataEntry: toDataEntry,
    showEntry: showEntry,
    genericListAction_: genericListAction_,
    hasPlutusSchemaListAction: hasPlutusSchemaListAction,
    toDataListAction: toDataListAction,
    showListAction: showListAction
};
