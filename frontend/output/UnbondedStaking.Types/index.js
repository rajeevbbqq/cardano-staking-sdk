// Generated by purs version 0.14.5
"use strict";
var Data_BigInt = require("../Data.BigInt/index.js");
var Data_Eq = require("../Data.Eq/index.js");
var Data_Generic_Rep = require("../Data.Generic.Rep/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Semiring = require("../Data.Semiring/index.js");
var Data_Show = require("../Data.Show/index.js");
var Data_Show_Generic = require("../Data.Show.Generic/index.js");
var FromData = require("../FromData/index.js");
var Plutus_Types_CurrencySymbol = require("../Plutus.Types.CurrencySymbol/index.js");
var ToData = require("../ToData/index.js");
var TypeLevel_Nat = require("../TypeLevel.Nat/index.js");
var TypeLevel_RowList_Unordered_Indexed = require("../TypeLevel.RowList.Unordered.Indexed/index.js");
var Types = require("../Types/index.js");
var Types_ByteArray = require("../Types.ByteArray/index.js");
var Types_Natural = require("../Types.Natural/index.js");
var Types_PlutusData = require("../Types.PlutusData/index.js");
var Types_PubKeyHash = require("../Types.PubKeyHash/index.js");
var Types_Rational = require("../Types.Rational/index.js");
var AdminAct = (function () {
    function AdminAct(value0) {
        this.value0 = value0;
    };
    AdminAct.create = function (value0) {
        return new AdminAct(value0);
    };
    return AdminAct;
})();
var StakeAct = (function () {
    function StakeAct(value0) {
        this.value0 = value0;
    };
    StakeAct.create = function (value0) {
        return new StakeAct(value0);
    };
    return StakeAct;
})();
var WithdrawAct = (function () {
    function WithdrawAct(value0) {
        this.value0 = value0;
    };
    WithdrawAct.create = function (value0) {
        return new WithdrawAct(value0);
    };
    return WithdrawAct;
})();
var CloseAct = (function () {
    function CloseAct() {

    };
    CloseAct.value = new CloseAct();
    return CloseAct;
})();
var UnbondedPoolParams = function (x) {
    return x;
};
var InitialUnbondedParams = function (x) {
    return x;
};
var Entry = function (x) {
    return x;
};
var StateDatum = (function () {
    function StateDatum(value0) {
        this.value0 = value0;
    };
    StateDatum.create = function (value0) {
        return new StateDatum(value0);
    };
    return StateDatum;
})();
var EntryDatum = (function () {
    function EntryDatum(value0) {
        this.value0 = value0;
    };
    EntryDatum.create = function (value0) {
        return new EntryDatum(value0);
    };
    return EntryDatum;
})();
var AssetDatum = (function () {
    function AssetDatum() {

    };
    AssetDatum.value = new AssetDatum();
    return AssetDatum;
})();
var toDataUnbondedPoolParams = {
    toData: function (v) {
        return new Types_PlutusData.Constr(Data_Semiring.zero(Data_BigInt.semiringBigInt), [ ToData.toData(ToData.toDataBigInt)(v.start), ToData.toData(ToData.toDataBigInt)(v.userLength), ToData.toData(ToData.toDataBigInt)(v.adminLength), ToData.toData(ToData.toDataBigInt)(v.bondingLength), ToData.toData(ToData.toDataBigInt)(v.interestLength), ToData.toData(Types_Natural.toDataNatural)(v.increments), ToData.toData(Types_Rational.toDataRational)(v.interest), ToData.toData(Types_Natural.toDataNatural)(v.minStake), ToData.toData(Types_Natural.toDataNatural)(v.maxStake), ToData.toData(Types_PubKeyHash.toDataPaymentPubKeyHash)(v.admin), ToData.toData(Types.toDataAssetClass)(v.unbondedAssetClass), ToData.toData(Plutus_Types_CurrencySymbol.toDataCurrencySymbol)(v.nftCs), ToData.toData(Plutus_Types_CurrencySymbol.toDataCurrencySymbol)(v.assocListCs) ]);
    }
};
var newtypeUnbondedPoolParams = {
    Coercible0: function () {
        return undefined;
    }
};
var newtypeInitialUnbondedPar = {
    Coercible0: function () {
        return undefined;
    }
};
var newtypeEntry_ = {
    Coercible0: function () {
        return undefined;
    }
};
var hasPlutusSchemaUnbondedSt = {};
var hasPlutusSchemaUnbondedSt1 = {};
var hasPlutusSchemaEntry$34Entr = {};
var genericUnbondedStakingDat = {
    to: function (x) {
        if (x instanceof Data_Generic_Rep.Inl) {
            return new StateDatum(x.value0);
        };
        if (x instanceof Data_Generic_Rep.Inr && x.value0 instanceof Data_Generic_Rep.Inl) {
            return new EntryDatum(x.value0.value0);
        };
        if (x instanceof Data_Generic_Rep.Inr && x.value0 instanceof Data_Generic_Rep.Inr) {
            return AssetDatum.value;
        };
        throw new Error("Failed pattern match at UnbondedStaking.Types (line 145, column 1 - line 145, column 47): " + [ x.constructor.name ]);
    },
    from: function (x) {
        if (x instanceof StateDatum) {
            return new Data_Generic_Rep.Inl(x.value0);
        };
        if (x instanceof EntryDatum) {
            return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(x.value0));
        };
        if (x instanceof AssetDatum) {
            return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(Data_Generic_Rep.NoArguments.value));
        };
        throw new Error("Failed pattern match at UnbondedStaking.Types (line 145, column 1 - line 145, column 47): " + [ x.constructor.name ]);
    }
};
var genericUnbondedStakingAct = {
    to: function (x) {
        if (x instanceof Data_Generic_Rep.Inl) {
            return new AdminAct(x.value0);
        };
        if (x instanceof Data_Generic_Rep.Inr && x.value0 instanceof Data_Generic_Rep.Inl) {
            return new StakeAct(x.value0.value0);
        };
        if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0 instanceof Data_Generic_Rep.Inl)) {
            return new WithdrawAct(x.value0.value0.value0);
        };
        if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0 instanceof Data_Generic_Rep.Inr)) {
            return CloseAct.value;
        };
        throw new Error("Failed pattern match at UnbondedStaking.Types (line 225, column 1 - line 225, column 48): " + [ x.constructor.name ]);
    },
    from: function (x) {
        if (x instanceof AdminAct) {
            return new Data_Generic_Rep.Inl(x.value0);
        };
        if (x instanceof StakeAct) {
            return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(x.value0));
        };
        if (x instanceof WithdrawAct) {
            return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(x.value0)));
        };
        if (x instanceof CloseAct) {
            return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(Data_Generic_Rep.NoArguments.value)));
        };
        throw new Error("Failed pattern match at UnbondedStaking.Types (line 225, column 1 - line 225, column 48): " + [ x.constructor.name ]);
    }
};
var toDataUnbondedStakingActi = {
    toData: ToData.genericToData(genericUnbondedStakingAct)(ToData.toDataWithSchemaSum(ToData.toDataWithSchemaConstruct({
        reflectSymbol: function () {
            return "AdminAct";
        }
    })(ToData.toDataArgsArgumentRecord(ToData.toDataArgsRecord({
        reflectSymbol: function () {
            return "AdminAct";
        }
    })(ToData.toDataArgsRL(ToData.toDataArgsRLHelperCons(Types_Natural.toDataNatural)(ToData.toDataArgsRLHelperCons(Types_Natural.toDataNatural)(ToData.toDataArgsRLHelperNilRow)()()()({
        reflectSymbol: function () {
            return "totalRewards";
        }
    })({
        reflectSymbol: function () {
            return "AdminAct";
        }
    })()()()()(TypeLevel_Nat.knownNatZ))()()()({
        reflectSymbol: function () {
            return "totalDeposited";
        }
    })({
        reflectSymbol: function () {
            return "AdminAct";
        }
    })()()()()(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatZ))))()))()()(TypeLevel_RowList_Unordered_Indexed.getIndexWithLabelConsI1()()({
        reflectSymbol: function () {
            return "AdminAct";
        }
    })(TypeLevel_Nat.knownNatZ))(TypeLevel_Nat.knownNatZ))(ToData.toDataWithSchemaSum(ToData.toDataWithSchemaConstruct({
        reflectSymbol: function () {
            return "StakeAct";
        }
    })(ToData.toDataArgsArgumentRecord(ToData.toDataArgsRecord({
        reflectSymbol: function () {
            return "StakeAct";
        }
    })(ToData.toDataArgsRL(ToData.toDataArgsRLHelperCons(ToData.toDataMaybe(Types.toDataMintingAction))(ToData.toDataArgsRLHelperCons(Types_Natural.toDataNatural)(ToData.toDataArgsRLHelperCons(Types_PubKeyHash.toDataPaymentPubKeyHash)(ToData.toDataArgsRLHelperNilRow)()()()({
        reflectSymbol: function () {
            return "stakeHolder";
        }
    })({
        reflectSymbol: function () {
            return "StakeAct";
        }
    })()()()()(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatZ)))()()()({
        reflectSymbol: function () {
            return "stakeAmount";
        }
    })({
        reflectSymbol: function () {
            return "StakeAct";
        }
    })()()()()(TypeLevel_Nat.knownNatZ))()()()({
        reflectSymbol: function () {
            return "mintingAction";
        }
    })({
        reflectSymbol: function () {
            return "StakeAct";
        }
    })()()()()(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatZ)))))()))()()(TypeLevel_RowList_Unordered_Indexed.getIndexWithLabelConsI(TypeLevel_RowList_Unordered_Indexed.getIndexWithLabelConsI1()()({
        reflectSymbol: function () {
            return "StakeAct";
        }
    })(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatZ)))()()({
        reflectSymbol: function () {
            return "StakeAct";
        }
    })(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatZ)))(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatZ)))(ToData.toDataWithSchemaSum(ToData.toDataWithSchemaConstruct({
        reflectSymbol: function () {
            return "WithdrawAct";
        }
    })(ToData.toDataArgsArgumentRecord(ToData.toDataArgsRecord({
        reflectSymbol: function () {
            return "WithdrawAct";
        }
    })(ToData.toDataArgsRL(ToData.toDataArgsRLHelperCons(Types.toDataBurningAction)(ToData.toDataArgsRLHelperCons(Types_PubKeyHash.toDataPaymentPubKeyHash)(ToData.toDataArgsRLHelperNilRow)()()()({
        reflectSymbol: function () {
            return "stakeHolder";
        }
    })({
        reflectSymbol: function () {
            return "WithdrawAct";
        }
    })()()()()(TypeLevel_Nat.knownNatZ))()()()({
        reflectSymbol: function () {
            return "burningAction";
        }
    })({
        reflectSymbol: function () {
            return "WithdrawAct";
        }
    })()()()()(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatZ))))()))()()(TypeLevel_RowList_Unordered_Indexed.getIndexWithLabelConsI(TypeLevel_RowList_Unordered_Indexed.getIndexWithLabelConsI(TypeLevel_RowList_Unordered_Indexed.getIndexWithLabelConsI1()()({
        reflectSymbol: function () {
            return "WithdrawAct";
        }
    })(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatZ))))()()({
        reflectSymbol: function () {
            return "WithdrawAct";
        }
    })(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatZ))))()()({
        reflectSymbol: function () {
            return "WithdrawAct";
        }
    })(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatZ))))(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatZ))))(ToData.toDataWithSchemaConstruct({
        reflectSymbol: function () {
            return "CloseAct";
        }
    })(ToData.toDataArgsNoArguments({
        reflectSymbol: function () {
            return "CloseAct";
        }
    }))()()(TypeLevel_RowList_Unordered_Indexed.getIndexWithLabelConsI(TypeLevel_RowList_Unordered_Indexed.getIndexWithLabelConsI(TypeLevel_RowList_Unordered_Indexed.getIndexWithLabelConsI(TypeLevel_RowList_Unordered_Indexed.getIndexWithLabelConsI1()()({
        reflectSymbol: function () {
            return "CloseAct";
        }
    })(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatZ)))))()()({
        reflectSymbol: function () {
            return "CloseAct";
        }
    })(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatZ)))))()()({
        reflectSymbol: function () {
            return "CloseAct";
        }
    })(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatZ)))))()()({
        reflectSymbol: function () {
            return "CloseAct";
        }
    })(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatZ)))))(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatZ))))))))
};
var genericUnbondedPoolParams = {
    to: function (x) {
        return x;
    },
    from: function (x) {
        return x;
    }
};
var showUnbondedPoolParams = {
    show: Data_Show_Generic.genericShow(genericUnbondedPoolParams)(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
        reflectSymbol: function () {
            return "admin";
        }
    })(Data_Show.showRecordFieldsCons({
        reflectSymbol: function () {
            return "adminLength";
        }
    })(Data_Show.showRecordFieldsCons({
        reflectSymbol: function () {
            return "assocListCs";
        }
    })(Data_Show.showRecordFieldsCons({
        reflectSymbol: function () {
            return "bondingLength";
        }
    })(Data_Show.showRecordFieldsCons({
        reflectSymbol: function () {
            return "increments";
        }
    })(Data_Show.showRecordFieldsCons({
        reflectSymbol: function () {
            return "interest";
        }
    })(Data_Show.showRecordFieldsCons({
        reflectSymbol: function () {
            return "interestLength";
        }
    })(Data_Show.showRecordFieldsCons({
        reflectSymbol: function () {
            return "maxStake";
        }
    })(Data_Show.showRecordFieldsCons({
        reflectSymbol: function () {
            return "minStake";
        }
    })(Data_Show.showRecordFieldsCons({
        reflectSymbol: function () {
            return "nftCs";
        }
    })(Data_Show.showRecordFieldsCons({
        reflectSymbol: function () {
            return "start";
        }
    })(Data_Show.showRecordFieldsCons({
        reflectSymbol: function () {
            return "unbondedAssetClass";
        }
    })(Data_Show.showRecordFieldsCons({
        reflectSymbol: function () {
            return "userLength";
        }
    })(Data_Show.showRecordFieldsNil)(Data_BigInt.showBigInt))(Types.showAssetClass))(Data_BigInt.showBigInt))(Plutus_Types_CurrencySymbol.showCurrencySymbol))(Types_Natural.showNatural))(Types_Natural.showNatural))(Data_BigInt.showBigInt))(Types_Rational.showRational))(Types_Natural.showNatural))(Data_BigInt.showBigInt))(Plutus_Types_CurrencySymbol.showCurrencySymbol))(Data_BigInt.showBigInt))(Types_PubKeyHash.showPaymentPubKeyHash))))({
        reflectSymbol: function () {
            return "UnbondedPoolParams";
        }
    }))
};
var genericInitialUnbondedPar = {
    to: function (x) {
        return x;
    },
    from: function (x) {
        return x;
    }
};
var showInitialUnbondedParams = {
    show: Data_Show_Generic.genericShow(genericInitialUnbondedPar)(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
        reflectSymbol: function () {
            return "adminLength";
        }
    })(Data_Show.showRecordFieldsCons({
        reflectSymbol: function () {
            return "bondingLength";
        }
    })(Data_Show.showRecordFieldsCons({
        reflectSymbol: function () {
            return "increments";
        }
    })(Data_Show.showRecordFieldsCons({
        reflectSymbol: function () {
            return "interest";
        }
    })(Data_Show.showRecordFieldsCons({
        reflectSymbol: function () {
            return "interestLength";
        }
    })(Data_Show.showRecordFieldsCons({
        reflectSymbol: function () {
            return "maxStake";
        }
    })(Data_Show.showRecordFieldsCons({
        reflectSymbol: function () {
            return "minStake";
        }
    })(Data_Show.showRecordFieldsCons({
        reflectSymbol: function () {
            return "start";
        }
    })(Data_Show.showRecordFieldsCons({
        reflectSymbol: function () {
            return "unbondedAssetClass";
        }
    })(Data_Show.showRecordFieldsCons({
        reflectSymbol: function () {
            return "userLength";
        }
    })(Data_Show.showRecordFieldsNil)(Data_BigInt.showBigInt))(Types.showAssetClass))(Data_BigInt.showBigInt))(Types_Natural.showNatural))(Types_Natural.showNatural))(Data_BigInt.showBigInt))(Types_Rational.showRational))(Types_Natural.showNatural))(Data_BigInt.showBigInt))(Data_BigInt.showBigInt))))({
        reflectSymbol: function () {
            return "InitialUnbondedParams";
        }
    }))
};
var genericEntry_ = {
    to: function (x) {
        return x;
    },
    from: function (x) {
        return x;
    }
};
var showEntry = {
    show: Data_Show_Generic.genericShow(genericEntry_)(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
        reflectSymbol: function () {
            return "deposited";
        }
    })(Data_Show.showRecordFieldsCons({
        reflectSymbol: function () {
            return "key";
        }
    })(Data_Show.showRecordFieldsCons({
        reflectSymbol: function () {
            return "newDeposit";
        }
    })(Data_Show.showRecordFieldsCons({
        reflectSymbol: function () {
            return "next";
        }
    })(Data_Show.showRecordFieldsCons({
        reflectSymbol: function () {
            return "open";
        }
    })(Data_Show.showRecordFieldsCons({
        reflectSymbol: function () {
            return "rewards";
        }
    })(Data_Show.showRecordFieldsCons({
        reflectSymbol: function () {
            return "totalDeposited";
        }
    })(Data_Show.showRecordFieldsCons({
        reflectSymbol: function () {
            return "totalRewards";
        }
    })(Data_Show.showRecordFieldsNil)(Data_BigInt.showBigInt))(Data_BigInt.showBigInt))(Types_Rational.showRational))(Data_Show.showBoolean))(Data_Maybe.showMaybe(Types_ByteArray.showByteArray)))(Data_BigInt.showBigInt))(Types_ByteArray.showByteArray))(Data_BigInt.showBigInt))))({
        reflectSymbol: function () {
            return "Entry";
        }
    }))
};
var showUnbondedStakingDatum = {
    show: Data_Show_Generic.genericShow(genericUnbondedStakingDat)(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
        reflectSymbol: function () {
            return "maybeEntryName";
        }
    })(Data_Show.showRecordFieldsCons({
        reflectSymbol: function () {
            return "open";
        }
    })(Data_Show.showRecordFieldsNil)(Data_Show.showBoolean))(Data_Maybe.showMaybe(Types_ByteArray.showByteArray)))))({
        reflectSymbol: function () {
            return "StateDatum";
        }
    }))(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
        reflectSymbol: function () {
            return "entry";
        }
    })(Data_Show.showRecordFieldsNil)(showEntry))))({
        reflectSymbol: function () {
            return "EntryDatum";
        }
    }))(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsNoArguments)({
        reflectSymbol: function () {
            return "AssetDatum";
        }
    }))))
};
var toDataEntry = {
    toData: ToData.genericToData(genericEntry_)(ToData.toDataWithSchemaConstruct({
        reflectSymbol: function () {
            return "Entry";
        }
    })(ToData.toDataArgsArgumentRecord(ToData.toDataArgsRecord({
        reflectSymbol: function () {
            return "Entry";
        }
    })(ToData.toDataArgsRL(ToData.toDataArgsRLHelperCons(ToData.toDataBigInt)(ToData.toDataArgsRLHelperCons(ToData.toDataByteArray)(ToData.toDataArgsRLHelperCons(ToData.toDataBigInt)(ToData.toDataArgsRLHelperCons(ToData.toDataMaybe(ToData.toDataByteArray))(ToData.toDataArgsRLHelperCons(ToData.toDataBoolean)(ToData.toDataArgsRLHelperCons(Types_Rational.toDataRational)(ToData.toDataArgsRLHelperCons(ToData.toDataBigInt)(ToData.toDataArgsRLHelperCons(ToData.toDataBigInt)(ToData.toDataArgsRLHelperNilRow)()()()({
        reflectSymbol: function () {
            return "totalRewards";
        }
    })({
        reflectSymbol: function () {
            return "Entry";
        }
    })()()()()(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatZ))))))()()()({
        reflectSymbol: function () {
            return "totalDeposited";
        }
    })({
        reflectSymbol: function () {
            return "Entry";
        }
    })()()()()(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatZ)))))))()()()({
        reflectSymbol: function () {
            return "rewards";
        }
    })({
        reflectSymbol: function () {
            return "Entry";
        }
    })()()()()(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatZ)))))()()()({
        reflectSymbol: function () {
            return "open";
        }
    })({
        reflectSymbol: function () {
            return "Entry";
        }
    })()()()()(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatZ))))))))()()()({
        reflectSymbol: function () {
            return "next";
        }
    })({
        reflectSymbol: function () {
            return "Entry";
        }
    })()()()()(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatZ)))))))))()()()({
        reflectSymbol: function () {
            return "newDeposit";
        }
    })({
        reflectSymbol: function () {
            return "Entry";
        }
    })()()()()(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatZ))))()()()({
        reflectSymbol: function () {
            return "key";
        }
    })({
        reflectSymbol: function () {
            return "Entry";
        }
    })()()()()(TypeLevel_Nat.knownNatZ))()()()({
        reflectSymbol: function () {
            return "deposited";
        }
    })({
        reflectSymbol: function () {
            return "Entry";
        }
    })()()()()(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatZ))))()))()()(TypeLevel_RowList_Unordered_Indexed.getIndexWithLabelConsI1()()({
        reflectSymbol: function () {
            return "Entry";
        }
    })(TypeLevel_Nat.knownNatZ))(TypeLevel_Nat.knownNatZ))
};
var toDataUnbondedStakingDatu = {
    toData: ToData.genericToData(genericUnbondedStakingDat)(ToData.toDataWithSchemaSum(ToData.toDataWithSchemaConstruct({
        reflectSymbol: function () {
            return "StateDatum";
        }
    })(ToData.toDataArgsArgumentRecord(ToData.toDataArgsRecord({
        reflectSymbol: function () {
            return "StateDatum";
        }
    })(ToData.toDataArgsRL(ToData.toDataArgsRLHelperCons(ToData.toDataMaybe(ToData.toDataByteArray))(ToData.toDataArgsRLHelperCons(ToData.toDataBoolean)(ToData.toDataArgsRLHelperNilRow)()()()({
        reflectSymbol: function () {
            return "open";
        }
    })({
        reflectSymbol: function () {
            return "StateDatum";
        }
    })()()()()(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatZ)))()()()({
        reflectSymbol: function () {
            return "maybeEntryName";
        }
    })({
        reflectSymbol: function () {
            return "StateDatum";
        }
    })()()()()(TypeLevel_Nat.knownNatZ)))()))()()(TypeLevel_RowList_Unordered_Indexed.getIndexWithLabelConsI1()()({
        reflectSymbol: function () {
            return "StateDatum";
        }
    })(TypeLevel_Nat.knownNatZ))(TypeLevel_Nat.knownNatZ))(ToData.toDataWithSchemaSum(ToData.toDataWithSchemaConstruct({
        reflectSymbol: function () {
            return "EntryDatum";
        }
    })(ToData.toDataArgsArgumentRecord(ToData.toDataArgsRecord({
        reflectSymbol: function () {
            return "EntryDatum";
        }
    })(ToData.toDataArgsRL(ToData.toDataArgsRLHelperCons(toDataEntry)(ToData.toDataArgsRLHelperNilRow)()()()({
        reflectSymbol: function () {
            return "entry";
        }
    })({
        reflectSymbol: function () {
            return "EntryDatum";
        }
    })()()()()(TypeLevel_Nat.knownNatZ)))()))()()(TypeLevel_RowList_Unordered_Indexed.getIndexWithLabelConsI(TypeLevel_RowList_Unordered_Indexed.getIndexWithLabelConsI1()()({
        reflectSymbol: function () {
            return "EntryDatum";
        }
    })(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatZ)))()()({
        reflectSymbol: function () {
            return "EntryDatum";
        }
    })(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatZ)))(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatZ)))(ToData.toDataWithSchemaConstruct({
        reflectSymbol: function () {
            return "AssetDatum";
        }
    })(ToData.toDataArgsNoArguments({
        reflectSymbol: function () {
            return "AssetDatum";
        }
    }))()()(TypeLevel_RowList_Unordered_Indexed.getIndexWithLabelConsI(TypeLevel_RowList_Unordered_Indexed.getIndexWithLabelConsI(TypeLevel_RowList_Unordered_Indexed.getIndexWithLabelConsI1()()({
        reflectSymbol: function () {
            return "AssetDatum";
        }
    })(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatZ))))()()({
        reflectSymbol: function () {
            return "AssetDatum";
        }
    })(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatZ))))()()({
        reflectSymbol: function () {
            return "AssetDatum";
        }
    })(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatZ))))(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatZ))))))
};
var fromDataUnbondedStakingAc = {
    fromData: FromData.genericFromData(genericUnbondedStakingAct)(FromData.fromDataWithSchemaSum(FromData.fromDataWithSchemaConstru({
        reflectSymbol: function () {
            return "AdminAct";
        }
    })()()(TypeLevel_RowList_Unordered_Indexed.getIndexWithLabelConsI1()()({
        reflectSymbol: function () {
            return "AdminAct";
        }
    })(TypeLevel_Nat.knownNatZ))(FromData.fromDataArgsArgumentRecor(FromData.fromDataArgsRLCons(Types_Natural.fromDataNatural)(FromData.fromDataArgsRLCons(Types_Natural.fromDataNatural)(FromData.fromDataArgsRLNilRow)()()({
        reflectSymbol: function () {
            return "totalDeposited";
        }
    }))()()({
        reflectSymbol: function () {
            return "totalRewards";
        }
    }))()()())(TypeLevel_Nat.knownNatZ))(FromData.fromDataWithSchemaSum(FromData.fromDataWithSchemaConstru({
        reflectSymbol: function () {
            return "StakeAct";
        }
    })()()(TypeLevel_RowList_Unordered_Indexed.getIndexWithLabelConsI(TypeLevel_RowList_Unordered_Indexed.getIndexWithLabelConsI1()()({
        reflectSymbol: function () {
            return "StakeAct";
        }
    })(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatZ)))()()({
        reflectSymbol: function () {
            return "StakeAct";
        }
    })(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatZ)))(FromData.fromDataArgsArgumentRecor(FromData.fromDataArgsRLCons(Types_Natural.fromDataNatural)(FromData.fromDataArgsRLCons(Types_PubKeyHash.fromDataPaymentPubKeyHash)(FromData.fromDataArgsRLCons(FromData.fromDataMaybe(Types.fromDataMintingAction))(FromData.fromDataArgsRLNilRow)()()({
        reflectSymbol: function () {
            return "mintingAction";
        }
    }))()()({
        reflectSymbol: function () {
            return "stakeHolder";
        }
    }))()()({
        reflectSymbol: function () {
            return "stakeAmount";
        }
    }))()()())(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatZ)))(FromData.fromDataWithSchemaSum(FromData.fromDataWithSchemaConstru({
        reflectSymbol: function () {
            return "WithdrawAct";
        }
    })()()(TypeLevel_RowList_Unordered_Indexed.getIndexWithLabelConsI(TypeLevel_RowList_Unordered_Indexed.getIndexWithLabelConsI(TypeLevel_RowList_Unordered_Indexed.getIndexWithLabelConsI1()()({
        reflectSymbol: function () {
            return "WithdrawAct";
        }
    })(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatZ))))()()({
        reflectSymbol: function () {
            return "WithdrawAct";
        }
    })(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatZ))))()()({
        reflectSymbol: function () {
            return "WithdrawAct";
        }
    })(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatZ))))(FromData.fromDataArgsArgumentRecor(FromData.fromDataArgsRLCons(Types_PubKeyHash.fromDataPaymentPubKeyHash)(FromData.fromDataArgsRLCons(Types.fromDataBurningAction)(FromData.fromDataArgsRLNilRow)()()({
        reflectSymbol: function () {
            return "burningAction";
        }
    }))()()({
        reflectSymbol: function () {
            return "stakeHolder";
        }
    }))()()())(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatZ))))(FromData.fromDataWithSchemaConstru({
        reflectSymbol: function () {
            return "CloseAct";
        }
    })()()(TypeLevel_RowList_Unordered_Indexed.getIndexWithLabelConsI(TypeLevel_RowList_Unordered_Indexed.getIndexWithLabelConsI(TypeLevel_RowList_Unordered_Indexed.getIndexWithLabelConsI(TypeLevel_RowList_Unordered_Indexed.getIndexWithLabelConsI1()()({
        reflectSymbol: function () {
            return "CloseAct";
        }
    })(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatZ)))))()()({
        reflectSymbol: function () {
            return "CloseAct";
        }
    })(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatZ)))))()()({
        reflectSymbol: function () {
            return "CloseAct";
        }
    })(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatZ)))))()()({
        reflectSymbol: function () {
            return "CloseAct";
        }
    })(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatZ)))))(FromData.fromDataArgsNoArguments)(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatZ))))))))
};
var fromDataEntry = {
    fromData: FromData.genericFromData(genericEntry_)(FromData.fromDataWithSchemaConstru({
        reflectSymbol: function () {
            return "Entry";
        }
    })()()(TypeLevel_RowList_Unordered_Indexed.getIndexWithLabelConsI1()()({
        reflectSymbol: function () {
            return "Entry";
        }
    })(TypeLevel_Nat.knownNatZ))(FromData.fromDataArgsArgumentRecor(FromData.fromDataArgsRLCons(FromData.fromDataByteArray)(FromData.fromDataArgsRLCons(FromData.fromDataBigInt)(FromData.fromDataArgsRLCons(FromData.fromDataBigInt)(FromData.fromDataArgsRLCons(Types_Rational.fromDataRational)(FromData.fromDataArgsRLCons(FromData.fromDataBigInt)(FromData.fromDataArgsRLCons(FromData.fromDataBigInt)(FromData.fromDataArgsRLCons(FromData.fromDataBoolean)(FromData.fromDataArgsRLCons(FromData.fromDataMaybe(FromData.fromDataByteArray))(FromData.fromDataArgsRLNilRow)()()({
        reflectSymbol: function () {
            return "next";
        }
    }))()()({
        reflectSymbol: function () {
            return "open";
        }
    }))()()({
        reflectSymbol: function () {
            return "totalDeposited";
        }
    }))()()({
        reflectSymbol: function () {
            return "totalRewards";
        }
    }))()()({
        reflectSymbol: function () {
            return "rewards";
        }
    }))()()({
        reflectSymbol: function () {
            return "newDeposit";
        }
    }))()()({
        reflectSymbol: function () {
            return "deposited";
        }
    }))()()({
        reflectSymbol: function () {
            return "key";
        }
    }))()()())(TypeLevel_Nat.knownNatZ))
};
var fromDataUnbondedStakingDa = {
    fromData: FromData.genericFromData(genericUnbondedStakingDat)(FromData.fromDataWithSchemaSum(FromData.fromDataWithSchemaConstru({
        reflectSymbol: function () {
            return "StateDatum";
        }
    })()()(TypeLevel_RowList_Unordered_Indexed.getIndexWithLabelConsI1()()({
        reflectSymbol: function () {
            return "StateDatum";
        }
    })(TypeLevel_Nat.knownNatZ))(FromData.fromDataArgsArgumentRecor(FromData.fromDataArgsRLCons(FromData.fromDataMaybe(FromData.fromDataByteArray))(FromData.fromDataArgsRLCons(FromData.fromDataBoolean)(FromData.fromDataArgsRLNilRow)()()({
        reflectSymbol: function () {
            return "open";
        }
    }))()()({
        reflectSymbol: function () {
            return "maybeEntryName";
        }
    }))()()())(TypeLevel_Nat.knownNatZ))(FromData.fromDataWithSchemaSum(FromData.fromDataWithSchemaConstru({
        reflectSymbol: function () {
            return "EntryDatum";
        }
    })()()(TypeLevel_RowList_Unordered_Indexed.getIndexWithLabelConsI(TypeLevel_RowList_Unordered_Indexed.getIndexWithLabelConsI1()()({
        reflectSymbol: function () {
            return "EntryDatum";
        }
    })(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatZ)))()()({
        reflectSymbol: function () {
            return "EntryDatum";
        }
    })(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatZ)))(FromData.fromDataArgsArgumentRecor(FromData.fromDataArgsRLCons(fromDataEntry)(FromData.fromDataArgsRLNilRow)()()({
        reflectSymbol: function () {
            return "entry";
        }
    }))()()())(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatZ)))(FromData.fromDataWithSchemaConstru({
        reflectSymbol: function () {
            return "AssetDatum";
        }
    })()()(TypeLevel_RowList_Unordered_Indexed.getIndexWithLabelConsI(TypeLevel_RowList_Unordered_Indexed.getIndexWithLabelConsI(TypeLevel_RowList_Unordered_Indexed.getIndexWithLabelConsI1()()({
        reflectSymbol: function () {
            return "AssetDatum";
        }
    })(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatZ))))()()({
        reflectSymbol: function () {
            return "AssetDatum";
        }
    })(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatZ))))()()({
        reflectSymbol: function () {
            return "AssetDatum";
        }
    })(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatZ))))(FromData.fromDataArgsNoArguments)(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatS(TypeLevel_Nat.knownNatZ))))))
};
var eqUnbondedStakingAction = {
    eq: function (x) {
        return function (y) {
            if (x instanceof AdminAct && y instanceof AdminAct) {
                return Data_Eq.eq(Types_Natural.eqNatural)(x.value0.totalDeposited)(y.value0.totalDeposited) && Data_Eq.eq(Types_Natural.eqNatural)(x.value0.totalRewards)(y.value0.totalRewards);
            };
            if (x instanceof StakeAct && y instanceof StakeAct) {
                return Data_Eq.eq(Data_Maybe.eqMaybe(Types.eqMintingAction))(x.value0.mintingAction)(y.value0.mintingAction) && Data_Eq.eq(Types_Natural.eqNatural)(x.value0.stakeAmount)(y.value0.stakeAmount) && Data_Eq.eq(Types_PubKeyHash.eqPaymentPubKeyHash)(x.value0.stakeHolder)(y.value0.stakeHolder);
            };
            if (x instanceof WithdrawAct && y instanceof WithdrawAct) {
                return Data_Eq.eq(Types.eqBurningAction)(x.value0.burningAction)(y.value0.burningAction) && Data_Eq.eq(Types_PubKeyHash.eqPaymentPubKeyHash)(x.value0.stakeHolder)(y.value0.stakeHolder);
            };
            if (x instanceof CloseAct && y instanceof CloseAct) {
                return true;
            };
            return false;
        };
    }
};
var eqUnbondedPoolParams = {
    eq: function (x) {
        return function (y) {
            return Data_Eq.eq(Types_PubKeyHash.eqPaymentPubKeyHash)(x.admin)(y.admin) && Data_Eq.eq(Data_BigInt.eqBigInt)(x.adminLength)(y.adminLength) && Data_Eq.eq(Plutus_Types_CurrencySymbol.eqCurrencySymbol)(x.assocListCs)(y.assocListCs) && Data_Eq.eq(Data_BigInt.eqBigInt)(x.bondingLength)(y.bondingLength) && Data_Eq.eq(Types_Natural.eqNatural)(x.increments)(y.increments) && Data_Eq.eq(Types_Rational.eqRational)(x.interest)(y.interest) && Data_Eq.eq(Data_BigInt.eqBigInt)(x.interestLength)(y.interestLength) && Data_Eq.eq(Types_Natural.eqNatural)(x.maxStake)(y.maxStake) && Data_Eq.eq(Types_Natural.eqNatural)(x.minStake)(y.minStake) && Data_Eq.eq(Plutus_Types_CurrencySymbol.eqCurrencySymbol)(x.nftCs)(y.nftCs) && Data_Eq.eq(Data_BigInt.eqBigInt)(x.start)(y.start) && Data_Eq.eq(Types.eqAssetClass)(x.unbondedAssetClass)(y.unbondedAssetClass) && Data_Eq.eq(Data_BigInt.eqBigInt)(x.userLength)(y.userLength);
        };
    }
};
var eqInitialUnbondedParams = {
    eq: function (x) {
        return function (y) {
            return Data_Eq.eq(Data_BigInt.eqBigInt)(x.adminLength)(y.adminLength) && Data_Eq.eq(Data_BigInt.eqBigInt)(x.bondingLength)(y.bondingLength) && Data_Eq.eq(Types_Natural.eqNatural)(x.increments)(y.increments) && Data_Eq.eq(Types_Rational.eqRational)(x.interest)(y.interest) && Data_Eq.eq(Data_BigInt.eqBigInt)(x.interestLength)(y.interestLength) && Data_Eq.eq(Types_Natural.eqNatural)(x.maxStake)(y.maxStake) && Data_Eq.eq(Types_Natural.eqNatural)(x.minStake)(y.minStake) && Data_Eq.eq(Data_BigInt.eqBigInt)(x.start)(y.start) && Data_Eq.eq(Types.eqAssetClass)(x.unbondedAssetClass)(y.unbondedAssetClass) && Data_Eq.eq(Data_BigInt.eqBigInt)(x.userLength)(y.userLength);
        };
    }
};
var eqEntry = {
    eq: function (x) {
        return function (y) {
            return Data_Eq.eq(Data_BigInt.eqBigInt)(x.deposited)(y.deposited) && Data_Eq.eq(Types_ByteArray.eqByteArray)(x.key)(y.key) && Data_Eq.eq(Data_BigInt.eqBigInt)(x.newDeposit)(y.newDeposit) && Data_Eq.eq(Data_Maybe.eqMaybe(Types_ByteArray.eqByteArray))(x.next)(y.next) && x.open === y.open && Data_Eq.eq(Types_Rational.eqRational)(x.rewards)(y.rewards) && Data_Eq.eq(Data_BigInt.eqBigInt)(x.totalDeposited)(y.totalDeposited) && Data_Eq.eq(Data_BigInt.eqBigInt)(x.totalRewards)(y.totalRewards);
        };
    }
};
var eqUnbondedStakingDatum = {
    eq: function (x) {
        return function (y) {
            if (x instanceof StateDatum && y instanceof StateDatum) {
                return Data_Eq.eq(Data_Maybe.eqMaybe(Types_ByteArray.eqByteArray))(x.value0.maybeEntryName)(y.value0.maybeEntryName) && x.value0.open === y.value0.open;
            };
            if (x instanceof EntryDatum && y instanceof EntryDatum) {
                return Data_Eq.eq(eqEntry)(x.value0.entry)(y.value0.entry);
            };
            if (x instanceof AssetDatum && y instanceof AssetDatum) {
                return true;
            };
            return false;
        };
    }
};
module.exports = {
    Entry: Entry,
    InitialUnbondedParams: InitialUnbondedParams,
    UnbondedPoolParams: UnbondedPoolParams,
    AdminAct: AdminAct,
    StakeAct: StakeAct,
    WithdrawAct: WithdrawAct,
    CloseAct: CloseAct,
    StateDatum: StateDatum,
    EntryDatum: EntryDatum,
    AssetDatum: AssetDatum,
    genericUnbondedPoolParams: genericUnbondedPoolParams,
    eqUnbondedPoolParams: eqUnbondedPoolParams,
    newtypeUnbondedPoolParams: newtypeUnbondedPoolParams,
    showUnbondedPoolParams: showUnbondedPoolParams,
    genericInitialUnbondedPar: genericInitialUnbondedPar,
    newtypeInitialUnbondedPar: newtypeInitialUnbondedPar,
    eqInitialUnbondedParams: eqInitialUnbondedParams,
    showInitialUnbondedParams: showInitialUnbondedParams,
    toDataUnbondedPoolParams: toDataUnbondedPoolParams,
    genericUnbondedStakingDat: genericUnbondedStakingDat,
    eqUnbondedStakingDatum: eqUnbondedStakingDatum,
    hasPlutusSchemaUnbondedSt1: hasPlutusSchemaUnbondedSt1,
    fromDataUnbondedStakingDa: fromDataUnbondedStakingDa,
    toDataUnbondedStakingDatu: toDataUnbondedStakingDatu,
    showUnbondedStakingDatum: showUnbondedStakingDatum,
    hasPlutusSchemaUnbondedSt: hasPlutusSchemaUnbondedSt,
    genericUnbondedStakingAct: genericUnbondedStakingAct,
    eqUnbondedStakingAction: eqUnbondedStakingAction,
    fromDataUnbondedStakingAc: fromDataUnbondedStakingAc,
    toDataUnbondedStakingActi: toDataUnbondedStakingActi,
    genericEntry_: genericEntry_,
    newtypeEntry_: newtypeEntry_,
    eqEntry: eqEntry,
    "hasPlutusSchemaEntry\"Entr": hasPlutusSchemaEntry$34Entr,
    fromDataEntry: fromDataEntry,
    toDataEntry: toDataEntry,
    showEntry: showEntry
};
