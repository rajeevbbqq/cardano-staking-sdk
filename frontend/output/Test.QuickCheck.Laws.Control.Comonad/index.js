// Generated by purs version 0.14.5
"use strict";
var Control_Comonad = require("../Control.Comonad/index.js");
var Control_Extend = require("../Control.Extend/index.js");
var Data_Eq = require("../Data.Eq/index.js");
var Effect_Console = require("../Effect.Console/index.js");
var Test_QuickCheck = require("../Test.QuickCheck/index.js");
var Test_QuickCheck_Arbitrary = require("../Test.QuickCheck.Arbitrary/index.js");
var Test_QuickCheck_Laws = require("../Test.QuickCheck.Laws/index.js");
var checkComonad = function (dictComonad) {
    return function (dictArbitrary) {
        return function (dictCoarbitrary) {
            return function (dictEq) {
                return function (v) {
                    var rightIdentity = function (f) {
                        return function (x) {
                            return Data_Eq.eq(Test_QuickCheck_Laws.eqB)(Control_Comonad.extract(dictComonad)(Control_Extend.extend(dictComonad.Extend0())(f)(x)))(f(x));
                        };
                    };
                    var leftIdentity = function (x) {
                        return Data_Eq.eq(dictEq)(Control_Extend.extend(dictComonad.Extend0())(Control_Comonad.extract(dictComonad))(x))(x);
                    };
                    return function __do() {
                        Effect_Console.log("Checking 'Left identity' law for Comonad")();
                        Test_QuickCheck["quickCheck'"](Test_QuickCheck.testableFunction(dictArbitrary)(Test_QuickCheck.testableBoolean))(1000)(leftIdentity)();
                        Effect_Console.log("Checking 'Right identity' law for Comonad")();
                        return Test_QuickCheck["quickCheck'"](Test_QuickCheck.testableFunction(Test_QuickCheck_Arbitrary.arbFunction(dictCoarbitrary)(Test_QuickCheck_Laws.arbitraryB))(Test_QuickCheck.testableFunction(dictArbitrary)(Test_QuickCheck.testableBoolean)))(1000)(rightIdentity)();
                    };
                };
            };
        };
    };
};
module.exports = {
    checkComonad: checkComonad
};
