// Generated by purs version 0.14.5
"use strict";
var Control_Alt = require("../Control.Alt/index.js");
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Apply = require("../Control.Apply/index.js");
var Control_Category = require("../Control.Category/index.js");
var Data_Eq = require("../Data.Eq/index.js");
var Data_Foldable = require("../Data.Foldable/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Monoid = require("../Data.Monoid/index.js");
var Data_Newtype = require("../Data.Newtype/index.js");
var Data_Semigroup = require("../Data.Semigroup/index.js");
var Data_Tuple = require("../Data.Tuple/index.js");
var Data_Unit = require("../Data.Unit/index.js");
var Options_Applicative_Common = require("../Options.Applicative.Common/index.js");
var Options_Applicative_Help_Chunk = require("../Options.Applicative.Help.Chunk/index.js");
var Options_Applicative_Types = require("../Options.Applicative.Types/index.js");
var Text_PrettyPrint_Leijen = require("../Text.PrettyPrint.Leijen/index.js");
var OptionFields = function (x) {
    return x;
};
var FlagFields = function (x) {
    return x;
};
var DefaultProp = (function () {
    function DefaultProp(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    DefaultProp.create = function (value0) {
        return function (value1) {
            return new DefaultProp(value0, value1);
        };
    };
    return DefaultProp;
})();
var Mod = (function () {
    function Mod(value0, value1, value2) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
    };
    Mod.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return new Mod(value0, value1, value2);
            };
        };
    };
    return Mod;
})();
var CommandFields = function (x) {
    return x;
};
var ArgumentFields = function (x) {
    return x;
};
var optionFieldsHasValue = {
    hasValueDummy: function (v) {
        return Data_Unit.unit;
    }
};
var optionFieldsHasMetavar = {
    hasMetavarDummy: function (v) {
        return Data_Unit.unit;
    }
};
var newtypeOptionFields = {
    Coercible0: function () {
        return undefined;
    }
};
var optionFieldsHasCompleter = {
    modCompleter: function (f) {
        return Data_Newtype.over()()(OptionFields)(function (p) {
            return {
                optCompleter: f(p.optCompleter),
                optNames: p.optNames,
                optNoArgError: p.optNoArgError
            };
        });
    }
};
var optionFieldsHasName = {
    name: function (n) {
        return Data_Newtype.over()()(OptionFields)(function (fields) {
            return {
                optNames: Data_Semigroup.append(Data_Semigroup.semigroupArray)([ n ])(fields.optNames),
                optCompleter: fields.optCompleter,
                optNoArgError: fields.optNoArgError
            };
        });
    }
};
var newtypeFlagFields = {
    Coercible0: function () {
        return undefined;
    }
};
var newtypeCommandFields = {
    Coercible0: function () {
        return undefined;
    }
};
var newtypeArgumentFields = {
    Coercible0: function () {
        return undefined;
    }
};
var name = function (dict) {
    return dict.name;
};
var modCompleter = function (dict) {
    return dict.modCompleter;
};
var mkCommand = function (m) {
    var v = m.value0({
        cmdCommands: [  ],
        cmdGroup: Data_Maybe.Nothing.value
    });
    return new Data_Tuple.Tuple(v.cmdGroup, new Data_Tuple.Tuple(Data_Functor.map(Data_Functor.functorArray)(Data_Tuple.fst)(v.cmdCommands), new Data_Tuple.Tuple(function (v1) {
        return Data_Foldable.lookup(Data_Foldable.foldableArray)(Data_Eq.eqString)(v1)(v.cmdCommands);
    }, Data_Unit.unit)));
};
var hasValueDummy = function (dict) {
    return dict.hasValueDummy;
};
var hasMetavarDummy = function (dict) {
    return dict.hasMetavarDummy;
};
var flagFieldsHasName = {
    name: function (n) {
        return Data_Newtype.over()()(FlagFields)(function (fields) {
            return {
                flagNames: Data_Semigroup.append(Data_Semigroup.semigroupArray)([ n ])(fields.flagNames),
                flagActive: fields.flagActive
            };
        });
    }
};
var defaultPropSemigroup = {
    append: function (v) {
        return function (v1) {
            return new DefaultProp(Control_Alt.alt(Data_Maybe.altMaybe)(v.value0)(v1.value0), Control_Alt.alt(Data_Maybe.altMaybe)(v.value1)(v1.value1));
        };
    }
};
var modSemigroup = {
    append: function (v) {
        return function (v1) {
            return new Mod(function ($53) {
                return v1.value0(v.value0($53));
            }, Data_Semigroup.append(defaultPropSemigroup)(v1.value1)(v.value1), function ($54) {
                return v1.value2(v.value2($54));
            });
        };
    }
};
var defaultPropMonoid = {
    mempty: new DefaultProp(Data_Maybe.Nothing.value, Data_Maybe.Nothing.value),
    Semigroup0: function () {
        return defaultPropSemigroup;
    }
};
var fieldMod = function (f) {
    return new Mod(f, Data_Monoid.mempty(defaultPropMonoid), Control_Category.identity(Control_Category.categoryFn));
};
var modMonoid = {
    mempty: new Mod(Control_Category.identity(Control_Category.categoryFn), Data_Monoid.mempty(defaultPropMonoid), Control_Category.identity(Control_Category.categoryFn)),
    Semigroup0: function () {
        return modSemigroup;
    }
};
var optionMod = Mod.create(Control_Category.identity(Control_Category.categoryFn))(Data_Monoid.mempty(defaultPropMonoid));
var internal = optionMod(Data_Newtype.over()()(Options_Applicative_Types.OptProperties)(function (p) {
    return {
        propVisibility: Options_Applicative_Types.Internal.value,
        propDescMod: p.propDescMod,
        propHelp: p.propHelp,
        propMetaVar: p.propMetaVar,
        propShowDefault: p.propShowDefault
    };
}));
var commandFieldsHasMetavar = {
    hasMetavarDummy: function (v) {
        return Data_Unit.unit;
    }
};
var baseProps = {
    propMetaVar: "",
    propVisibility: Options_Applicative_Types.Visible.value,
    propHelp: Data_Monoid.mempty(Options_Applicative_Help_Chunk.chunkMonoid(Text_PrettyPrint_Leijen.docSemigroup)),
    propShowDefault: Data_Maybe.Nothing.value,
    propDescMod: Data_Maybe.Nothing.value
};
var mkProps = function (v) {
    return function (g) {
        var props = Data_Newtype.over()()(Options_Applicative_Types.OptProperties)(function (r) {
            return {
                propShowDefault: Control_Apply.apply(Data_Maybe.applyMaybe)(v.value1)(v.value0),
                propDescMod: r.propDescMod,
                propHelp: r.propHelp,
                propMetaVar: r.propMetaVar,
                propVisibility: r.propVisibility
            };
        })(g(baseProps));
        return props;
    };
};
var mkOption = function (d) {
    return function (g) {
        return function (rdr) {
            return {
                optMain: rdr,
                optProps: mkProps(d)(g)
            };
        };
    };
};
var mkParser = function (v) {
    return function (g) {
        return function (rdr) {
            var o = Options_Applicative_Common.liftOpt(mkOption(v)(g)(rdr));
            return Data_Maybe.maybe(o)(function (a) {
                return Control_Alt.alt(Options_Applicative_Types.parserAlt)(o)(Control_Applicative.pure(Options_Applicative_Types.parserApplicative)(a));
            })(v.value0);
        };
    };
};
var argumentFieldsHasValue = {
    hasValueDummy: function (v) {
        return Data_Unit.unit;
    }
};
var argumentFieldsHasMetavar = {
    hasMetavarDummy: function (v) {
        return Data_Unit.unit;
    }
};
var argumentFieldsHasCompleter = {
    modCompleter: function (f) {
        return Data_Newtype.over()()(ArgumentFields)(function (p) {
            return {
                argCompleter: f(p.argCompleter)
            };
        });
    }
};
module.exports = {
    Mod: Mod,
    name: name,
    modCompleter: modCompleter,
    hasValueDummy: hasValueDummy,
    hasMetavarDummy: hasMetavarDummy,
    OptionFields: OptionFields,
    FlagFields: FlagFields,
    CommandFields: CommandFields,
    ArgumentFields: ArgumentFields,
    DefaultProp: DefaultProp,
    optionMod: optionMod,
    fieldMod: fieldMod,
    baseProps: baseProps,
    mkCommand: mkCommand,
    mkParser: mkParser,
    mkOption: mkOption,
    mkProps: mkProps,
    internal: internal,
    newtypeOptionFields: newtypeOptionFields,
    newtypeFlagFields: newtypeFlagFields,
    newtypeCommandFields: newtypeCommandFields,
    newtypeArgumentFields: newtypeArgumentFields,
    optionFieldsHasName: optionFieldsHasName,
    flagFieldsHasName: flagFieldsHasName,
    optionFieldsHasCompleter: optionFieldsHasCompleter,
    argumentFieldsHasCompleter: argumentFieldsHasCompleter,
    optionFieldsHasValue: optionFieldsHasValue,
    argumentFieldsHasValue: argumentFieldsHasValue,
    optionFieldsHasMetavar: optionFieldsHasMetavar,
    argumentFieldsHasMetavar: argumentFieldsHasMetavar,
    commandFieldsHasMetavar: commandFieldsHasMetavar,
    defaultPropMonoid: defaultPropMonoid,
    defaultPropSemigroup: defaultPropSemigroup,
    modMonoid: modMonoid,
    modSemigroup: modSemigroup
};
