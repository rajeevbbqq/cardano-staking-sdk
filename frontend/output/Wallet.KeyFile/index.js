// Generated by purs version 0.14.5
"use strict";
var Aeson = require("../Aeson/index.js");
var Cardano_TextEnvelope = require("../Cardano.TextEnvelope/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Control_Monad_Error_Class = require("../Control.Monad.Error.Class/index.js");
var Data_Bifunctor = require("../Data.Bifunctor/index.js");
var Data_Either = require("../Data.Either/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Newtype = require("../Data.Newtype/index.js");
var Data_Show = require("../Data.Show/index.js");
var Effect_Aff = require("../Effect.Aff/index.js");
var Effect_Class = require("../Effect.Class/index.js");
var Effect_Exception = require("../Effect.Exception/index.js");
var Helpers = require("../Helpers/index.js");
var Node_Encoding = require("../Node.Encoding/index.js");
var Node_FS_Sync = require("../Node.FS.Sync/index.js");
var Serialization = require("../Serialization/index.js");
var Types_RawBytes = require("../Types.RawBytes/index.js");
var Wallet_Key = require("../Wallet.Key/index.js");
var privateStakeKeyFromString = function (jsonString) {
    return Control_Bind.bind(Data_Maybe.bindMaybe)(Data_Either.hush(Cardano_TextEnvelope.textEnvelopeBytes(jsonString)(Cardano_TextEnvelope.StakeSigningKeyShelleyed25519.value)))(function (bytes) {
        return Data_Functor.map(Data_Maybe.functorMaybe)(Wallet_Key.PrivateStakeKey)(Serialization.privateKeyFromBytes(Data_Newtype.wrap()(bytes)));
    });
};
var privatePaymentKeyFromString = function (jsonString) {
    return Control_Bind.bind(Data_Maybe.bindMaybe)(Data_Either.hush(Cardano_TextEnvelope.textEnvelopeBytes(jsonString)(Cardano_TextEnvelope.PaymentSigningKeyShelleyed25519.value)))(function (bytes) {
        return Data_Functor.map(Data_Maybe.functorMaybe)(Wallet_Key.PrivatePaymentKey)(Serialization.privateKeyFromBytes(Data_Newtype.wrap()(bytes)));
    });
};
var magicPrefix = "5820";
var keyToCbor = function ($8) {
    return (function (v) {
        return Data_Functor.map(Data_Maybe.functorMaybe)(function ($9) {
            return (function (v1) {
                return magicPrefix + v1;
            })(Types_RawBytes.rawBytesToHex($9));
        })(v);
    })(Serialization.bytesFromPrivateKey($8));
};
var keyFromFile = function (filePath) {
    return function (ty) {
        return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Node_FS_Sync.readTextFile(Node_Encoding.UTF8.value)(filePath)))(function (fileContents) {
            return Control_Monad_Error_Class.liftEither(Effect_Aff.monadThrowAff)(Data_Bifunctor.lmap(Data_Bifunctor.bifunctorEither)(function ($10) {
                return Effect_Exception.error(Cardano_TextEnvelope.printTextEnvelopeDecodeError($10));
            })(Cardano_TextEnvelope.textEnvelopeBytes(fileContents)(ty)));
        });
    };
};
var privatePaymentKeyFromFile = function (filePath) {
    return Control_Bind.bind(Effect_Aff.bindAff)(keyFromFile(filePath)(Cardano_TextEnvelope.PaymentSigningKeyShelleyed25519.value))(function (bytes) {
        return Helpers.liftM(Effect_Aff.monadErrorAff)(Effect_Exception.error("Unable to decode private payment key"))(Data_Functor.map(Data_Maybe.functorMaybe)(Wallet_Key.PrivatePaymentKey)(Serialization.privateKeyFromBytes(Data_Newtype.wrap()(bytes))));
    });
};
var privateStakeKeyFromFile = function (filePath) {
    return Control_Bind.bind(Effect_Aff.bindAff)(keyFromFile(filePath)(Cardano_TextEnvelope.StakeSigningKeyShelleyed25519.value))(function (bytes) {
        return Helpers.liftM(Effect_Aff.monadErrorAff)(Effect_Exception.error("Unable to decode private stake key"))(Data_Functor.map(Data_Maybe.functorMaybe)(Wallet_Key.PrivateStakeKey)(Serialization.privateKeyFromBytes(Data_Newtype.wrap()(bytes))));
    });
};
var formatStakeKey = function (v) {
    return Data_Functor.map(Data_Maybe.functorMaybe)(Data_Functor.map(Data_Functor.functorFn)((function () {
        var $11 = Data_Show.show(Aeson.showAeson);
        var $12 = Aeson.encodeAeson(Aeson.encodeAesonRecord(Aeson.gEncodeAesonCons(Aeson.encodeAesonString)(Aeson.gEncodeAesonCons(Aeson.encodeAesonString)(Aeson.gEncodeAesonCons(Aeson.encodeAesonString)(Aeson.gEncodeAesonNil)({
            reflectSymbol: function () {
                return "type";
            }
        })())({
            reflectSymbol: function () {
                return "description";
            }
        })())({
            reflectSymbol: function () {
                return "cborHex";
            }
        })())());
        return function ($13) {
            return $11($12($13));
        };
    })())(function (v1) {
        return {
            type: "StakeSigningKeyShelley_ed25519",
            description: "Stake Signing Key",
            cborHex: v1
        };
    }))(keyToCbor(v));
};
var privateStakeKeyToFile = function (filePath) {
    return function (key) {
        return Control_Bind.bind(Effect_Aff.bindAff)(Helpers.liftM(Effect_Aff.monadErrorAff)(Effect_Exception.error("failed to format key"))(formatStakeKey(key)))((function () {
            var $14 = Effect_Class.liftEffect(Effect_Aff.monadEffectAff);
            var $15 = Node_FS_Sync.writeTextFile(Node_Encoding.UTF8.value)(filePath);
            return function ($16) {
                return $14($15($16));
            };
        })());
    };
};
var formatPaymentKey = function (v) {
    return Data_Functor.map(Data_Maybe.functorMaybe)(Data_Functor.map(Data_Functor.functorFn)((function () {
        var $17 = Data_Show.show(Aeson.showAeson);
        var $18 = Aeson.encodeAeson(Aeson.encodeAesonRecord(Aeson.gEncodeAesonCons(Aeson.encodeAesonString)(Aeson.gEncodeAesonCons(Aeson.encodeAesonString)(Aeson.gEncodeAesonCons(Aeson.encodeAesonString)(Aeson.gEncodeAesonNil)({
            reflectSymbol: function () {
                return "type";
            }
        })())({
            reflectSymbol: function () {
                return "description";
            }
        })())({
            reflectSymbol: function () {
                return "cborHex";
            }
        })())());
        return function ($19) {
            return $17($18($19));
        };
    })())(function (v1) {
        return {
            type: "PaymentSigningKeyShelley_ed25519",
            description: "Payment Signing Key",
            cborHex: v1
        };
    }))(keyToCbor(v));
};
var privatePaymentKeyToFile = function (filePath) {
    return function (key) {
        return Control_Bind.bind(Effect_Aff.bindAff)(Helpers.liftM(Effect_Aff.monadErrorAff)(Effect_Exception.error("failed to format key"))(formatPaymentKey(key)))((function () {
            var $20 = Effect_Class.liftEffect(Effect_Aff.monadEffectAff);
            var $21 = Node_FS_Sync.writeTextFile(Node_Encoding.UTF8.value)(filePath);
            return function ($22) {
                return $20($21($22));
            };
        })());
    };
};
module.exports = {
    keyFromFile: keyFromFile,
    privatePaymentKeyFromFile: privatePaymentKeyFromFile,
    privatePaymentKeyFromString: privatePaymentKeyFromString,
    privatePaymentKeyToFile: privatePaymentKeyToFile,
    privateStakeKeyFromFile: privateStakeKeyFromFile,
    privateStakeKeyFromString: privateStakeKeyFromString,
    privateStakeKeyToFile: privateStakeKeyToFile,
    formatStakeKey: formatStakeKey,
    formatPaymentKey: formatPaymentKey
};
