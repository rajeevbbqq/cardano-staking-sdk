// Generated by purs version 0.14.5
"use strict";
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Data_Eq = require("../Data.Eq/index.js");
var Effect_Console = require("../Effect.Console/index.js");
var Test_QuickCheck = require("../Test.QuickCheck/index.js");
var Test_QuickCheck_Arbitrary = require("../Test.QuickCheck.Arbitrary/index.js");
var Test_QuickCheck_Laws = require("../Test.QuickCheck.Laws/index.js");
var checkMonad = function (dictMonad) {
    return function (dictArbitrary) {
        return function (dictEq) {
            return function (v) {
                var rightIdentity = function (m) {
                    return Data_Eq.eq(dictEq)(Control_Bind.bind(dictMonad.Bind1())(m)(Control_Applicative.pure(dictMonad.Applicative0())))(m);
                };
                var leftIdentity = function (x) {
                    return function (f) {
                        return Data_Eq.eq(dictEq)(Control_Bind.bind(dictMonad.Bind1())(Control_Applicative.pure(dictMonad.Applicative0())(x))(f))(f(x));
                    };
                };
                return function __do() {
                    Effect_Console.log("Checking 'Left identity' law for Monad")();
                    Test_QuickCheck["quickCheck'"](Test_QuickCheck.testableFunction(Test_QuickCheck_Laws.arbitraryA)(Test_QuickCheck.testableFunction(Test_QuickCheck_Arbitrary.arbFunction(Test_QuickCheck_Laws.coarbitraryA)(dictArbitrary))(Test_QuickCheck.testableBoolean)))(1000)(leftIdentity)();
                    Effect_Console.log("Checking 'Right identity' law for Monad")();
                    return Test_QuickCheck["quickCheck'"](Test_QuickCheck.testableFunction(dictArbitrary)(Test_QuickCheck.testableBoolean))(1000)(rightIdentity)();
                };
            };
        };
    };
};
module.exports = {
    checkMonad: checkMonad
};
