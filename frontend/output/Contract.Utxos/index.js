// Generated by purs version 0.14.5
"use strict";
var Contract_Monad = require("../Contract.Monad/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Control_Monad_Reader_Class = require("../Control.Monad.Reader.Class/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Newtype = require("../Data.Newtype/index.js");
var Data_Traversable = require("../Data.Traversable/index.js");
var Effect_Aff = require("../Effect.Aff/index.js");
var Plutus_Conversion = require("../Plutus.Conversion/index.js");
var Plutus_Conversion_Address = require("../Plutus.Conversion.Address/index.js");
var Plutus_Conversion_Value = require("../Plutus.Conversion.Value/index.js");
var Plutus_Types_Transaction = require("../Plutus.Types.Transaction/index.js");
var QueryM = require("../QueryM/index.js");
var QueryM_Utxos = require("../QueryM.Utxos/index.js");
var utxosAt = function (address) {
    return Control_Bind.bind(Contract_Monad.bindContract)(Control_Monad_Reader_Class.asks(Contract_Monad.monadAskContractEnvContra)((function () {
        var $2 = Data_Newtype.unwrap();
        return function ($3) {
            return (function (v) {
                return v.networkId;
            })((function (v) {
                return v.config;
            })($2($3)));
        };
    })()))(function (networkId) {
        var cardanoAddr = Plutus_Conversion_Address.fromPlutusAddress(networkId)(address);
        return Control_Bind.bind(Contract_Monad.bindContract)(Contract_Monad.wrapContract(QueryM_Utxos.utxosAt(cardanoAddr)))(function (mCardanoUtxos) {
            return Data_Traversable["for"](Contract_Monad.applicativeContract)(Data_Traversable.traversableMaybe)(mCardanoUtxos)((function () {
                var $4 = Contract_Monad.liftContractM("utxosAt: unable to deserialize utxos");
                return function ($5) {
                    return $4(Plutus_Conversion.toPlutusUtxoMap($5));
                };
            })());
        });
    });
};
var getWalletUtxos = Control_Bind.bind(Contract_Monad.bindContract)(Contract_Monad.wrapContract(QueryM_Utxos.getWalletUtxos))(function (mCardanoUtxos) {
    return Data_Traversable["for"](Contract_Monad.applicativeContract)(Data_Traversable.traversableMaybe)(mCardanoUtxos)((function () {
        var $6 = Contract_Monad.liftContractM("getWalletUtxos: unable to deserialize UTxOs");
        return function ($7) {
            return $6(Plutus_Conversion.toPlutusUtxoMap($7));
        };
    })());
});
var getWalletBalance = Contract_Monad.wrapContract(Data_Functor.mapFlipped(QueryM.functorQueryMExtended(Effect_Aff.functorAff))(QueryM_Utxos.getWalletBalance)(Data_Functor.map(Data_Maybe.functorMaybe)(Plutus_Conversion_Value.toPlutusValue)));
var getUtxo = function (ref) {
    return Control_Bind.bind(Contract_Monad.bindContract)(Contract_Monad.wrapContract(QueryM_Utxos.getUtxo(ref)))(function (cardanoTxOut) {
        return Data_Traversable["for"](Contract_Monad.applicativeContract)(Data_Traversable.traversableMaybe)(cardanoTxOut)((function () {
            var $8 = Contract_Monad.liftContractM("getUtxo: unable to deserialize UTxO");
            return function ($9) {
                return $8(Plutus_Conversion.toPlutusTxOutput($9));
            };
        })());
    });
};
module.exports = {
    getUtxo: getUtxo,
    getWalletBalance: getWalletBalance,
    getWalletUtxos: getWalletUtxos,
    utxosAt: utxosAt
};
