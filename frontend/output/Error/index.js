// Generated by purs version 0.14.5
"use strict";
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Apply = require("../Control.Apply/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Control_Monad_Error_Class = require("../Control.Monad.Error.Class/index.js");
var Control_Monad_Except_Checked = require("../Control.Monad.Except.Checked/index.js");
var Control_Monad_Except_Trans = require("../Control.Monad.Except.Trans/index.js");
var Control_Monad_Maybe_Trans = require("../Control.Monad.Maybe.Trans/index.js");
var Control_Monad_Trans_Class = require("../Control.Monad.Trans.Class/index.js");
var Data_Either = require("../Data.Either/index.js");
var Data_Identity = require("../Data.Identity/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Newtype = require("../Data.Newtype/index.js");
var Data_Variant = require("../Data.Variant/index.js");
var Debug = require("../Debug/index.js");
var Type_Proxy = require("../Type.Proxy/index.js");
var traceAndHushAll = function (dictDebugWarning) {
    return function (dictMonad) {
        return function (act) {
            return Control_Monad_Maybe_Trans.MaybeT(Control_Bind.bind(dictMonad.Bind1())(Control_Monad_Except_Trans.runExceptT(act))(function (v) {
                if (v instanceof Data_Either.Left) {
                    return Control_Apply.applySecond((dictMonad.Bind1()).Apply0())(Debug.traceM()(dictMonad)(v.value0))(Control_Applicative.pure(dictMonad.Applicative0())(Data_Maybe.Nothing.value));
                };
                if (v instanceof Data_Either.Right) {
                    return Control_Applicative.pure(dictMonad.Applicative0())(Control_Applicative.pure(Data_Maybe.applicativeMaybe)(v.value0));
                };
                throw new Error("Failed pattern match at Error (line 61, column 51 - line 63, column 27): " + [ v.constructor.name ]);
            }));
        };
    };
};
var traceAndHushAll_ = function (dictDebugWarning) {
    var $10 = Data_Newtype.unwrap();
    var $11 = traceAndHushAll()(Data_Identity.monadIdentity);
    return function ($12) {
        return $10(Control_Monad_Maybe_Trans.runMaybeT($11($12)));
    };
};
var safe_ = (function () {
    var $13 = Data_Newtype.unwrap();
    var $14 = Control_Monad_Except_Checked.safe(Data_Identity.functorIdentity);
    return function ($15) {
        return $13($14($15));
    };
})();
var noteE = function (e) {
    return Data_Maybe.maybe(e)(Data_Either.Right.create);
};
var hushedErr = function (dictMonad) {
    return Control_Monad_Trans_Class.lift(Control_Monad_Except_Trans.monadTransExceptT)(Control_Monad_Maybe_Trans.monadMaybeT(dictMonad))(Control_Monad_Maybe_Trans.MaybeT(Control_Applicative.pure(dictMonad.Applicative0())(Data_Maybe.Nothing.value)));
};
var hushable = function (dictMonad) {
    var $16 = Control_Monad_Trans_Class.lift(Control_Monad_Maybe_Trans.monadTransMaybeT)(dictMonad);
    return function ($17) {
        return Control_Monad_Except_Trans.ExceptT($16(Control_Monad_Except_Trans.runExceptT($17)));
    };
};
var _notImplementedError = Type_Proxy["Proxy"].value;
var notImplementedError = function (dictWarn) {
    var $18 = Control_Monad_Error_Class.throwError(Control_Monad_Error_Class.monadThrowEither);
    var $19 = Data_Variant.inj()({
        reflectSymbol: function () {
            return "notImplementedError";
        }
    })(_notImplementedError);
    return function ($20) {
        return $18($19($20));
    };
};
module.exports = {
    "_notImplementedError": _notImplementedError,
    notImplementedError: notImplementedError,
    traceAndHushAll: traceAndHushAll,
    traceAndHushAll_: traceAndHushAll_,
    hushedErr: hushedErr,
    hushable: hushable,
    safe_: safe_,
    noteE: noteE
};
