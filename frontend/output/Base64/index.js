// Generated by purs version 0.14.5
"use strict";
var $foreign = require("./foreign.js");
var Aeson = require("../Aeson/index.js");
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Data_Argonaut_Decode_Error = require("../Data.Argonaut.Decode.Error/index.js");
var Data_Either = require("../Data.Either/index.js");
var Data_Eq = require("../Data.Eq/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Ord = require("../Data.Ord/index.js");
var Data_Show = require("../Data.Show/index.js");
var FfiHelpers = require("../FfiHelpers/index.js");
var Test_QuickCheck_Arbitrary = require("../Test.QuickCheck.Arbitrary/index.js");
var Test_QuickCheck_Gen = require("../Test.QuickCheck.Gen/index.js");
var Types_ByteArray = require("../Types.ByteArray/index.js");
var Base64String = function (x) {
    return x;
};
var showBase64String = {
    show: function (str) {
        return "(fromByteArray " + (Data_Show.show(Types_ByteArray.showByteArray)($foreign.toByteArray(str)) + ")");
    }
};
var ordBase64String = Data_Ord.ordString;
var eqBase64String = Data_Eq.eqString;
var encodeAesonBase64String = Aeson.encodeAesonString;
var arbitraryBase64String = {
    arbitrary: Data_Functor.map(Test_QuickCheck_Gen.functorGen)($foreign.fromByteArray)(Test_QuickCheck_Arbitrary.arbitrary(Types_ByteArray.arbitraryByteArray))
};
var unBase64String = function (v) {
    return v;
};
var decodeBase64 = $foreign["_decodeBase64"](FfiHelpers.maybeFfiHelper);
var mkBase64String = function (str) {
    return Data_Functor.voidLeft(Data_Maybe.functorMaybe)(decodeBase64(str))(str);
};
var decodeAesonBase64String = {
    decodeAeson: function (json) {
        return Control_Bind.bind(Data_Either.bindEither)(Aeson.decodeAeson(Aeson.decodeAesonString)(json))((function () {
            var $8 = Data_Maybe.maybe(Data_Either.Left.create(new Data_Argonaut_Decode_Error.TypeMismatch("Base64String")))(Control_Applicative.pure(Data_Either.applicativeEither));
            return function ($9) {
                return $8(mkBase64String($9));
            };
        })());
    }
};
module.exports = {
    mkBase64String: mkBase64String,
    unBase64String: unBase64String,
    decodeBase64: decodeBase64,
    eqBase64String: eqBase64String,
    ordBase64String: ordBase64String,
    showBase64String: showBase64String,
    decodeAesonBase64String: decodeAesonBase64String,
    encodeAesonBase64String: encodeAesonBase64String,
    arbitraryBase64String: arbitraryBase64String,
    toByteArray: $foreign.toByteArray,
    fromByteArray: $foreign.fromByteArray
};
