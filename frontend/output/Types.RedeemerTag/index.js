// Generated by purs version 0.14.5
"use strict";
var Aeson = require("../Aeson/index.js");
var Data_Generic_Rep = require("../Data.Generic.Rep/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Ordering = require("../Data.Ordering/index.js");
var Data_Show_Generic = require("../Data.Show.Generic/index.js");
var Helpers = require("../Helpers/index.js");
var Spend = (function () {
    function Spend() {

    };
    Spend.value = new Spend();
    return Spend;
})();
var Mint = (function () {
    function Mint() {

    };
    Mint.value = new Mint();
    return Mint;
})();
var Cert = (function () {
    function Cert() {

    };
    Cert.value = new Cert();
    return Cert;
})();
var Reward = (function () {
    function Reward() {

    };
    Reward.value = new Reward();
    return Reward;
})();
var genericRedeemerTag_ = {
    to: function (x) {
        if (x instanceof Data_Generic_Rep.Inl) {
            return Spend.value;
        };
        if (x instanceof Data_Generic_Rep.Inr && x.value0 instanceof Data_Generic_Rep.Inl) {
            return Mint.value;
        };
        if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0 instanceof Data_Generic_Rep.Inl)) {
            return Cert.value;
        };
        if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0 instanceof Data_Generic_Rep.Inr)) {
            return Reward.value;
        };
        throw new Error("Failed pattern match at Types.RedeemerTag (line 25, column 1 - line 25, column 38): " + [ x.constructor.name ]);
    },
    from: function (x) {
        if (x instanceof Spend) {
            return new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value);
        };
        if (x instanceof Mint) {
            return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value));
        };
        if (x instanceof Cert) {
            return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value)));
        };
        if (x instanceof Reward) {
            return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(Data_Generic_Rep.NoArguments.value)));
        };
        throw new Error("Failed pattern match at Types.RedeemerTag (line 25, column 1 - line 25, column 38): " + [ x.constructor.name ]);
    }
};
var showRedeemerTag = {
    show: Data_Show_Generic.genericShow(genericRedeemerTag_)(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsNoArguments)({
        reflectSymbol: function () {
            return "Spend";
        }
    }))(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsNoArguments)({
        reflectSymbol: function () {
            return "Mint";
        }
    }))(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsNoArguments)({
        reflectSymbol: function () {
            return "Cert";
        }
    }))(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsNoArguments)({
        reflectSymbol: function () {
            return "Reward";
        }
    })))))
};
var eqRedeemerTag = {
    eq: function (x) {
        return function (y) {
            if (x instanceof Spend && y instanceof Spend) {
                return true;
            };
            if (x instanceof Mint && y instanceof Mint) {
                return true;
            };
            if (x instanceof Cert && y instanceof Cert) {
                return true;
            };
            if (x instanceof Reward && y instanceof Reward) {
                return true;
            };
            return false;
        };
    }
};
var ordRedeemerTag = {
    compare: function (x) {
        return function (y) {
            if (x instanceof Spend && y instanceof Spend) {
                return Data_Ordering.EQ.value;
            };
            if (x instanceof Spend) {
                return Data_Ordering.LT.value;
            };
            if (y instanceof Spend) {
                return Data_Ordering.GT.value;
            };
            if (x instanceof Mint && y instanceof Mint) {
                return Data_Ordering.EQ.value;
            };
            if (x instanceof Mint) {
                return Data_Ordering.LT.value;
            };
            if (y instanceof Mint) {
                return Data_Ordering.GT.value;
            };
            if (x instanceof Cert && y instanceof Cert) {
                return Data_Ordering.EQ.value;
            };
            if (x instanceof Cert) {
                return Data_Ordering.LT.value;
            };
            if (y instanceof Cert) {
                return Data_Ordering.GT.value;
            };
            if (x instanceof Reward && y instanceof Reward) {
                return Data_Ordering.EQ.value;
            };
            throw new Error("Failed pattern match at Types.RedeemerTag (line 27, column 1 - line 27, column 32): " + [ x.constructor.name, y.constructor.name ]);
        };
    },
    Eq0: function () {
        return eqRedeemerTag;
    }
};
var encodeAesonRedeemerTag = {
    "encodeAeson'": function (v) {
        if (v instanceof Spend) {
            return Aeson["encodeAeson'"](Aeson.encodeAesonAeson)(Helpers["encodeTagged'"](Aeson.encodeAesonRecord(Aeson.gEncodeAesonNil)())("Spend")({}));
        };
        if (v instanceof Mint) {
            return Aeson["encodeAeson'"](Aeson.encodeAesonAeson)(Helpers["encodeTagged'"](Aeson.encodeAesonRecord(Aeson.gEncodeAesonNil)())("Mint")({}));
        };
        if (v instanceof Cert) {
            return Aeson["encodeAeson'"](Aeson.encodeAesonAeson)(Helpers["encodeTagged'"](Aeson.encodeAesonRecord(Aeson.gEncodeAesonNil)())("Cert")({}));
        };
        if (v instanceof Reward) {
            return Aeson["encodeAeson'"](Aeson.encodeAesonAeson)(Helpers["encodeTagged'"](Aeson.encodeAesonRecord(Aeson.gEncodeAesonNil)())("Reward")({}));
        };
        throw new Error("Failed pattern match at Types.RedeemerTag (line 33, column 18 - line 37, column 55): " + [ v.constructor.name ]);
    }
};
var fromString = function (v) {
    if (v === "spend") {
        return new Data_Maybe.Just(Spend.value);
    };
    if (v === "mint") {
        return new Data_Maybe.Just(Mint.value);
    };
    if (v === "certificate") {
        return new Data_Maybe.Just(Cert.value);
    };
    if (v === "withdrawal") {
        return new Data_Maybe.Just(Reward.value);
    };
    return Data_Maybe.Nothing.value;
};
module.exports = {
    Spend: Spend,
    Mint: Mint,
    Cert: Cert,
    Reward: Reward,
    fromString: fromString,
    genericRedeemerTag_: genericRedeemerTag_,
    eqRedeemerTag: eqRedeemerTag,
    ordRedeemerTag: ordRedeemerTag,
    showRedeemerTag: showRedeemerTag,
    encodeAesonRedeemerTag: encodeAesonRedeemerTag
};
