// Generated by purs version 0.14.5
"use strict";
var Aeson = require("../Aeson/index.js");
var Cardano_Types_NativeScript = require("../Cardano.Types.NativeScript/index.js");
var Data_Eq = require("../Data.Eq/index.js");
var Data_Generic_Rep = require("../Data.Generic.Rep/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Show_Generic = require("../Data.Show.Generic/index.js");
var Helpers = require("../Helpers/index.js");
var Types_Scripts = require("../Types.Scripts/index.js");
var NativeScriptRef = (function () {
    function NativeScriptRef(value0) {
        this.value0 = value0;
    };
    NativeScriptRef.create = function (value0) {
        return new NativeScriptRef(value0);
    };
    return NativeScriptRef;
})();
var PlutusScriptRef = (function () {
    function PlutusScriptRef(value0) {
        this.value0 = value0;
    };
    PlutusScriptRef.create = function (value0) {
        return new PlutusScriptRef(value0);
    };
    return PlutusScriptRef;
})();
var genericScriptRef_ = {
    to: function (x) {
        if (x instanceof Data_Generic_Rep.Inl) {
            return new NativeScriptRef(x.value0);
        };
        if (x instanceof Data_Generic_Rep.Inr) {
            return new PlutusScriptRef(x.value0);
        };
        throw new Error("Failed pattern match at Cardano.Types.ScriptRef (line 23, column 1 - line 23, column 36): " + [ x.constructor.name ]);
    },
    from: function (x) {
        if (x instanceof NativeScriptRef) {
            return new Data_Generic_Rep.Inl(x.value0);
        };
        if (x instanceof PlutusScriptRef) {
            return new Data_Generic_Rep.Inr(x.value0);
        };
        throw new Error("Failed pattern match at Cardano.Types.ScriptRef (line 23, column 1 - line 23, column 36): " + [ x.constructor.name ]);
    }
};
var showScriptRef = {
    show: Data_Show_Generic.genericShow(genericScriptRef_)(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Cardano_Types_NativeScript.showNativeScript))({
        reflectSymbol: function () {
            return "NativeScriptRef";
        }
    }))(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Types_Scripts.showPlutusScript))({
        reflectSymbol: function () {
            return "PlutusScriptRef";
        }
    })))
};
var eqScriptRef = {
    eq: function (x) {
        return function (y) {
            if (x instanceof NativeScriptRef && y instanceof NativeScriptRef) {
                return Data_Eq.eq(Cardano_Types_NativeScript.eqNativeScript)(x.value0)(y.value0);
            };
            if (x instanceof PlutusScriptRef && y instanceof PlutusScriptRef) {
                return Data_Eq.eq(Types_Scripts.eqPlutusScript)(x.value0)(y.value0);
            };
            return false;
        };
    }
};
var encodeAesonScriptRef = {
    "encodeAeson'": function (v) {
        if (v instanceof NativeScriptRef) {
            return Aeson["encodeAeson'"](Aeson.encodeAesonAeson)(Helpers["encodeTagged'"](Cardano_Types_NativeScript.encodeAesonNativeScript)("NativeScriptRef")(v.value0));
        };
        if (v instanceof PlutusScriptRef) {
            return Aeson["encodeAeson'"](Aeson.encodeAesonAeson)(Helpers["encodeTagged'"](Types_Scripts.encodeAesonPlutusScript)("PlutusScriptRef")(v.value0));
        };
        throw new Error("Failed pattern match at Cardano.Types.ScriptRef (line 29, column 18 - line 31, column 74): " + [ v.constructor.name ]);
    }
};
var getPlutusScript = function (v) {
    if (v instanceof PlutusScriptRef) {
        return new Data_Maybe.Just(v.value0);
    };
    return Data_Maybe.Nothing.value;
};
var getNativeScript = function (v) {
    if (v instanceof NativeScriptRef) {
        return new Data_Maybe.Just(v.value0);
    };
    return Data_Maybe.Nothing.value;
};
module.exports = {
    NativeScriptRef: NativeScriptRef,
    PlutusScriptRef: PlutusScriptRef,
    getNativeScript: getNativeScript,
    getPlutusScript: getPlutusScript,
    eqScriptRef: eqScriptRef,
    genericScriptRef_: genericScriptRef_,
    showScriptRef: showScriptRef,
    encodeAesonScriptRef: encodeAesonScriptRef
};
