// Generated by purs version 0.14.5
"use strict";
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Control_Monad_Error_Class = require("../Control.Monad.Error.Class/index.js");
var Control_Monad_Except = require("../Control.Monad.Except/index.js");
var Control_Monad_Except_Trans = require("../Control.Monad.Except.Trans/index.js");
var Control_Monad_State_Class = require("../Control.Monad.State.Class/index.js");
var Control_Monad_State_Trans = require("../Control.Monad.State.Trans/index.js");
var Data_Foldable = require("../Data.Foldable/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Identity = require("../Data.Identity/index.js");
var Data_Semiring = require("../Data.Semiring/index.js");
var Data_Show = require("../Data.Show/index.js");
var Data_UInt = require("../Data.UInt/index.js");
var Types_ByteArray = require("../Types.ByteArray/index.js");
var Types_CborBytes = require("../Types.CborBytes/index.js");
var ByteStringType = (function () {
    function ByteStringType(value0) {
        this.value0 = value0;
    };
    ByteStringType.create = function (value0) {
        return new ByteStringType(value0);
    };
    return ByteStringType;
})();
var UnknownType = (function () {
    function UnknownType(value0) {
        this.value0 = value0;
    };
    UnknownType.create = function (value0) {
        return new UnknownType(value0);
    };
    return UnknownType;
})();
var UnknownAdditionalInformation = (function () {
    function UnknownAdditionalInformation(value0) {
        this.value0 = value0;
    };
    UnknownAdditionalInformation.create = function (value0) {
        return new UnknownAdditionalInformation(value0);
    };
    return UnknownAdditionalInformation;
})();
var ByteArrayTooShort = (function () {
    function ByteArrayTooShort(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    ByteArrayTooShort.create = function (value0) {
        return function (value1) {
            return new ByteArrayTooShort(value0, value1);
        };
    };
    return ByteArrayTooShort;
})();
var Cbor = function (x) {
    return x;
};
var showCborParseError = {
    show: function (v) {
        if (v instanceof UnknownType) {
            return "(UnknownType " + (Data_Show.show(Data_UInt.uintShowInstance)(v.value0) + ")");
        };
        if (v instanceof UnknownAdditionalInformation) {
            return "(UnknownAdditionalInformation " + (Data_Show.show(Data_UInt.uintShowInstance)(v.value0) + ")");
        };
        if (v instanceof ByteArrayTooShort) {
            return "(ByteArrayTooShort " + (Data_Show.show(Types_ByteArray.showByteArray)(v.value0) + (" " + (Data_Show.show(Data_Show.showInt)(v.value1) + ")")));
        };
        throw new Error("Failed pattern match at Types.Cbor (line 54, column 10 - line 63, column 13): " + [ v.constructor.name ]);
    }
};
var showCbor = Types_CborBytes.showCborBytes;
var semigroupCbor = Types_CborBytes.semigroupCborBytes;
var ordCbor = Types_CborBytes.ordCborBytes;
var newtypeCbor_ = {
    Coercible0: function () {
        return undefined;
    }
};
var monoidCbor = Types_CborBytes.monoidCborBytes;
var eqCbor = Types_CborBytes.eqCborBytes;
var takeN$prime = function ($27) {
    return (function (n) {
        return Control_Bind.bind(Control_Monad_State_Trans.bindStateT(Control_Monad_Except_Trans.monadExceptT(Data_Identity.monadIdentity)))(Control_Monad_State_Class.get(Control_Monad_State_Trans.monadStateStateT(Control_Monad_Except_Trans.monadExceptT(Data_Identity.monadIdentity))))(function (ba) {
            return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_State_Trans.bindStateT(Control_Monad_Except_Trans.monadExceptT(Data_Identity.monadIdentity)))(Control_Applicative.when(Control_Monad_State_Trans.applicativeStateT(Control_Monad_Except_Trans.monadExceptT(Data_Identity.monadIdentity)))(n > Types_ByteArray.byteLength(ba))(Control_Monad_Error_Class.throwError(Control_Monad_State_Trans.monadThrowStateT(Control_Monad_Except_Trans.monadThrowExceptT(Data_Identity.monadIdentity)))(new ByteArrayTooShort(ba, n))))(function () {
                return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_State_Trans.bindStateT(Control_Monad_Except_Trans.monadExceptT(Data_Identity.monadIdentity)))(Control_Monad_State_Class.put(Control_Monad_State_Trans.monadStateStateT(Control_Monad_Except_Trans.monadExceptT(Data_Identity.monadIdentity)))(Types_ByteArray.subarray(n)(Types_ByteArray.byteLength(ba))(ba)))(function () {
                    return Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(Control_Monad_Except_Trans.monadExceptT(Data_Identity.monadIdentity)))(Types_ByteArray.subarray(0)(n)(ba));
                });
            });
        });
    })(Data_UInt.toInt($27));
};
var takeN = function (n) {
    return Data_Functor.map(Control_Monad_State_Trans.functorStateT(Control_Monad_Except_Trans.functorExceptT(Data_Identity.functorIdentity)))((function () {
        var $28 = Data_Functor.map(Data_Functor.functorArray)(Data_UInt.fromInt);
        return function ($29) {
            return $28(Types_ByteArray.byteArrayToIntArray($29));
        };
    })())(takeN$prime(n));
};
var runParser = function (parser) {
    return function (v) {
        return Control_Monad_Except.runExcept(Data_Function.flip(Control_Monad_State_Trans.evalStateT(Control_Monad_Except_Trans.functorExceptT(Data_Identity.functorIdentity)))(v)(parser));
    };
};
var partitionType = function (u) {
    return {
        majorType: Data_UInt.zshr(u)(Data_UInt.fromInt(5)),
        additionalInformation: Data_UInt.and(u)(Data_UInt.fromInt(31))
    };
};
var fromBytes = Data_Foldable.foldl(Data_Foldable.foldableArray)(function (acc) {
    return function (b) {
        return Data_UInt.or(Data_UInt.shl(acc)(Data_UInt.fromInt(8)))(b);
    };
})(Data_Semiring.zero(Data_UInt.uintSemiring));
var readType = Data_Functor.map(Control_Monad_State_Trans.functorStateT(Control_Monad_Except_Trans.functorExceptT(Data_Identity.functorIdentity)))(fromBytes)(takeN(Data_Semiring.one(Data_UInt.uintSemiring)));
var decodeType = function (rawCborType) {
    var v = partitionType(rawCborType);
    var decodeByteStringLength = (function () {
        var v1 = Data_UInt.toInt(v.additionalInformation);
        if (v1 < 24) {
            return Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(Control_Monad_Except_Trans.monadExceptT(Data_Identity.monadIdentity)))(v.additionalInformation);
        };
        if (v1 === 24) {
            return Data_Functor.mapFlipped(Control_Monad_State_Trans.functorStateT(Control_Monad_Except_Trans.functorExceptT(Data_Identity.functorIdentity)))(takeN(Data_UInt.fromInt(1)))(fromBytes);
        };
        if (v1 === 25) {
            return Data_Functor.mapFlipped(Control_Monad_State_Trans.functorStateT(Control_Monad_Except_Trans.functorExceptT(Data_Identity.functorIdentity)))(takeN(Data_UInt.fromInt(2)))(fromBytes);
        };
        if (v1 === 26) {
            return Data_Functor.mapFlipped(Control_Monad_State_Trans.functorStateT(Control_Monad_Except_Trans.functorExceptT(Data_Identity.functorIdentity)))(takeN(Data_UInt.fromInt(4)))(fromBytes);
        };
        if (v1 === 27) {
            return Data_Functor.mapFlipped(Control_Monad_State_Trans.functorStateT(Control_Monad_Except_Trans.functorExceptT(Data_Identity.functorIdentity)))(takeN(Data_UInt.fromInt(8)))(fromBytes);
        };
        return Control_Monad_Error_Class.throwError(Control_Monad_State_Trans.monadThrowStateT(Control_Monad_Except_Trans.monadThrowExceptT(Data_Identity.monadIdentity)))(new UnknownAdditionalInformation(v.additionalInformation));
    })();
    var v1 = Data_UInt.toInt(v.majorType);
    if (v1 === 2) {
        return Data_Functor.map(Control_Monad_State_Trans.functorStateT(Control_Monad_Except_Trans.functorExceptT(Data_Identity.functorIdentity)))(ByteStringType.create)(decodeByteStringLength);
    };
    return Control_Monad_Error_Class.throwError(Control_Monad_State_Trans.monadThrowStateT(Control_Monad_Except_Trans.monadThrowExceptT(Data_Identity.monadIdentity)))(new UnknownType(v.majorType));
};
var cborType = Control_Bind.bind(Control_Monad_State_Trans.bindStateT(Control_Monad_Except_Trans.monadExceptT(Data_Identity.monadIdentity)))(readType)(decodeType);
var toByteArray = runParser(Control_Bind.bind(Control_Monad_State_Trans.bindStateT(Control_Monad_Except_Trans.monadExceptT(Data_Identity.monadIdentity)))(cborType)(function (v) {
    return takeN$prime(v.value0);
}));
module.exports = {
    Cbor: Cbor,
    ByteStringType: ByteStringType,
    UnknownType: UnknownType,
    UnknownAdditionalInformation: UnknownAdditionalInformation,
    ByteArrayTooShort: ByteArrayTooShort,
    runParser: runParser,
    cborType: cborType,
    takeN: takeN,
    "takeN'": takeN$prime,
    toByteArray: toByteArray,
    fromBytes: fromBytes,
    newtypeCbor_: newtypeCbor_,
    showCbor: showCbor,
    eqCbor: eqCbor,
    ordCbor: ordCbor,
    semigroupCbor: semigroupCbor,
    monoidCbor: monoidCbor,
    showCborParseError: showCborParseError
};
