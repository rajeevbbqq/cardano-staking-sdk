// Generated by purs version 0.14.5
"use strict";
var Contract_Address = require("../Contract.Address/index.js");
var Contract_Monad = require("../Contract.Monad/index.js");
var Data_Log_Level = require("../Data.Log.Level/index.js");
var Data_Log_Message = require("../Data.Log.Message/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var QueryM_ServerConfig = require("../QueryM.ServerConfig/index.js");
var Serialization = require("../Serialization/index.js");
var Serialization_Address = require("../Serialization.Address/index.js");
var Wallet_Key = require("../Wallet.Key/index.js");
var Wallet_Spec = require("../Wallet.Spec/index.js");
var testnetConfig = {
    ogmiosConfig: QueryM_ServerConfig.defaultOgmiosWsConfig,
    datumCacheConfig: QueryM_ServerConfig.defaultDatumCacheWsConfig,
    ctlServerConfig: new Data_Maybe.Just(QueryM_ServerConfig.defaultServerConfig),
    networkId: Serialization_Address.TestnetId.value,
    extraConfig: {},
    walletSpec: Data_Maybe.Nothing.value,
    logLevel: Data_Log_Level.Trace.value,
    customLogger: Data_Maybe.Nothing.value,
    suppressLogs: false
};
var testnetEternlConfig = {
    ogmiosConfig: testnetConfig.ogmiosConfig,
    datumCacheConfig: testnetConfig.datumCacheConfig,
    ctlServerConfig: testnetConfig.ctlServerConfig,
    networkId: testnetConfig.networkId,
    logLevel: testnetConfig.logLevel,
    walletSpec: new Data_Maybe.Just(Wallet_Spec.ConnectToEternl.value),
    customLogger: testnetConfig.customLogger,
    suppressLogs: testnetConfig.suppressLogs,
    extraConfig: testnetConfig.extraConfig
};
var testnetFlintConfig = {
    ogmiosConfig: testnetConfig.ogmiosConfig,
    datumCacheConfig: testnetConfig.datumCacheConfig,
    ctlServerConfig: testnetConfig.ctlServerConfig,
    networkId: testnetConfig.networkId,
    logLevel: testnetConfig.logLevel,
    walletSpec: new Data_Maybe.Just(Wallet_Spec.ConnectToFlint.value),
    customLogger: testnetConfig.customLogger,
    suppressLogs: testnetConfig.suppressLogs,
    extraConfig: testnetConfig.extraConfig
};
var testnetGeroConfig = {
    ogmiosConfig: testnetConfig.ogmiosConfig,
    datumCacheConfig: testnetConfig.datumCacheConfig,
    ctlServerConfig: testnetConfig.ctlServerConfig,
    networkId: testnetConfig.networkId,
    logLevel: testnetConfig.logLevel,
    walletSpec: new Data_Maybe.Just(Wallet_Spec.ConnectToGero.value),
    customLogger: testnetConfig.customLogger,
    suppressLogs: testnetConfig.suppressLogs,
    extraConfig: testnetConfig.extraConfig
};
var testnetLodeConfig = {
    ogmiosConfig: testnetConfig.ogmiosConfig,
    datumCacheConfig: testnetConfig.datumCacheConfig,
    ctlServerConfig: testnetConfig.ctlServerConfig,
    networkId: testnetConfig.networkId,
    logLevel: testnetConfig.logLevel,
    walletSpec: new Data_Maybe.Just(Wallet_Spec.ConnectToLode.value),
    customLogger: testnetConfig.customLogger,
    suppressLogs: testnetConfig.suppressLogs,
    extraConfig: testnetConfig.extraConfig
};
var testnetNamiConfig = {
    ogmiosConfig: testnetConfig.ogmiosConfig,
    datumCacheConfig: testnetConfig.datumCacheConfig,
    ctlServerConfig: testnetConfig.ctlServerConfig,
    networkId: testnetConfig.networkId,
    logLevel: testnetConfig.logLevel,
    walletSpec: new Data_Maybe.Just(Wallet_Spec.ConnectToNami.value),
    customLogger: testnetConfig.customLogger,
    suppressLogs: testnetConfig.suppressLogs,
    extraConfig: testnetConfig.extraConfig
};
var mainnetConfig = {
    ogmiosConfig: testnetConfig.ogmiosConfig,
    datumCacheConfig: testnetConfig.datumCacheConfig,
    ctlServerConfig: testnetConfig.ctlServerConfig,
    networkId: Serialization_Address.MainnetId.value,
    logLevel: testnetConfig.logLevel,
    walletSpec: testnetConfig.walletSpec,
    customLogger: testnetConfig.customLogger,
    suppressLogs: testnetConfig.suppressLogs,
    extraConfig: testnetConfig.extraConfig
};
var mainnetGeroConfig = {
    ogmiosConfig: mainnetConfig.ogmiosConfig,
    datumCacheConfig: mainnetConfig.datumCacheConfig,
    ctlServerConfig: mainnetConfig.ctlServerConfig,
    networkId: mainnetConfig.networkId,
    logLevel: mainnetConfig.logLevel,
    walletSpec: new Data_Maybe.Just(Wallet_Spec.ConnectToGero.value),
    customLogger: mainnetConfig.customLogger,
    suppressLogs: mainnetConfig.suppressLogs,
    extraConfig: mainnetConfig.extraConfig
};
var mainnetNamiConfig = {
    ogmiosConfig: mainnetConfig.ogmiosConfig,
    datumCacheConfig: mainnetConfig.datumCacheConfig,
    ctlServerConfig: mainnetConfig.ctlServerConfig,
    networkId: mainnetConfig.networkId,
    logLevel: mainnetConfig.logLevel,
    walletSpec: new Data_Maybe.Just(Wallet_Spec.ConnectToNami.value),
    customLogger: mainnetConfig.customLogger,
    suppressLogs: mainnetConfig.suppressLogs,
    extraConfig: mainnetConfig.extraConfig
};
module.exports = {
    testnetConfig: testnetConfig,
    testnetNamiConfig: testnetNamiConfig,
    testnetGeroConfig: testnetGeroConfig,
    testnetFlintConfig: testnetFlintConfig,
    testnetEternlConfig: testnetEternlConfig,
    testnetLodeConfig: testnetLodeConfig,
    mainnetConfig: mainnetConfig,
    mainnetNamiConfig: mainnetNamiConfig,
    mainnetGeroConfig: mainnetGeroConfig,
    MainnetId: Contract_Address.MainnetId,
    TestnetId: Contract_Address.TestnetId,
    Debug: Data_Log_Level.Debug,
    "Error": Data_Log_Level["Error"],
    Info: Data_Log_Level.Info,
    Trace: Data_Log_Level.Trace,
    Warn: Data_Log_Level.Warn,
    defaultDatumCacheWsConfig: QueryM_ServerConfig.defaultDatumCacheWsConfig,
    defaultOgmiosWsConfig: QueryM_ServerConfig.defaultOgmiosWsConfig,
    defaultServerConfig: QueryM_ServerConfig.defaultServerConfig,
    privateKeyFromBytes: Serialization.privateKeyFromBytes,
    PrivatePaymentKey: Wallet_Key.PrivatePaymentKey,
    PrivateStakeKey: Wallet_Key.PrivateStakeKey,
    PrivatePaymentKeyFile: Wallet_Spec.PrivatePaymentKeyFile,
    PrivatePaymentKeyValue: Wallet_Spec.PrivatePaymentKeyValue,
    PrivateStakeKeyFile: Wallet_Spec.PrivateStakeKeyFile,
    PrivateStakeKeyValue: Wallet_Spec.PrivateStakeKeyValue,
    ConnectToEternl: Wallet_Spec.ConnectToEternl,
    ConnectToFlint: Wallet_Spec.ConnectToFlint,
    ConnectToGero: Wallet_Spec.ConnectToGero,
    ConnectToLode: Wallet_Spec.ConnectToLode,
    ConnectToNami: Wallet_Spec.ConnectToNami,
    UseKeys: Wallet_Spec.UseKeys
};
