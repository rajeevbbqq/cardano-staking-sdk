// Generated by purs version 0.14.5
"use strict";
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Data_Array = require("../Data.Array/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_NonEmpty = require("../Data.NonEmpty/index.js");
var Data_Traversable = require("../Data.Traversable/index.js");
var Data_Unfoldable = require("../Data.Unfoldable/index.js");
var Types_Int = require("../Types.Int/index.js");
var Types_TransactionMetadata = require("../Types.TransactionMetadata/index.js");
var fromMetadataTransactionMe = {
    fromMetadata: Data_Maybe.Just.create
};
var fromMetadataString = {
    fromMetadata: function (v) {
        if (v instanceof Types_TransactionMetadata.Text) {
            return new Data_Maybe.Just(v.value0);
        };
        return Data_Maybe.Nothing.value;
    }
};
var fromMetadataInt = {
    fromMetadata: function (v) {
        if (v instanceof Types_TransactionMetadata.Int) {
            return new Data_Maybe.Just(v.value0);
        };
        return Data_Maybe.Nothing.value;
    }
};
var fromMetadataByteArray = {
    fromMetadata: function (v) {
        if (v instanceof Types_TransactionMetadata.Bytes) {
            return new Data_Maybe.Just(v.value0);
        };
        return Data_Maybe.Nothing.value;
    }
};
var fromMetadataBigInt = {
    fromMetadata: function (v) {
        if (v instanceof Types_TransactionMetadata.Int) {
            return Control_Applicative.pure(Data_Maybe.applicativeMaybe)(Types_Int.toBigInt(v.value0));
        };
        return Data_Maybe.Nothing.value;
    }
};
var fromMetadata = function (dict) {
    return dict.fromMetadata;
};
var fromMetadataUnfoldable = function (dictUnfoldable) {
    return function (dictFromMetadata) {
        return function (v) {
            if (v instanceof Types_TransactionMetadata.MetadataList) {
                return Data_Functor.map(Data_Maybe.functorMaybe)(Data_Array.toUnfoldable(dictUnfoldable))(Data_Traversable.traverse(Data_Traversable.traversableArray)(Data_Maybe.applicativeMaybe)(fromMetadata(dictFromMetadata))(v.value0));
            };
            return Data_Maybe.Nothing.value;
        };
    };
};
var fromMetadataArray = function (dictFromMetadata) {
    return {
        fromMetadata: fromMetadataUnfoldable(Data_Unfoldable.unfoldableArray)(dictFromMetadata)
    };
};
var fromMetadataNonEmptyArray = function (dictFromMetadata) {
    return {
        fromMetadata: function (md) {
            return Control_Bind.bind(Data_Maybe.bindMaybe)(Control_Bind.bindFlipped(Data_Maybe.bindMaybe)(Data_Array.uncons)(fromMetadata(fromMetadataArray(dictFromMetadata))(md)))(function (v) {
                return Control_Applicative.pure(Data_Maybe.applicativeMaybe)(new Data_NonEmpty.NonEmpty(v.head, v.tail));
            });
        }
    };
};
module.exports = {
    fromMetadata: fromMetadata,
    fromMetadataUnfoldable: fromMetadataUnfoldable,
    fromMetadataTransactionMe: fromMetadataTransactionMe,
    fromMetadataArray: fromMetadataArray,
    fromMetadataNonEmptyArray: fromMetadataNonEmptyArray,
    fromMetadataInt: fromMetadataInt,
    fromMetadataBigInt: fromMetadataBigInt,
    fromMetadataByteArray: fromMetadataByteArray,
    fromMetadataString: fromMetadataString
};
