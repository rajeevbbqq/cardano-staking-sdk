// Generated by purs version 0.14.5
"use strict";
var $foreign = require("./foreign.js");
var Cardano_Types_ScriptRef = require("../Cardano.Types.ScriptRef/index.js");
var Cardano_Types_Value = require("../Cardano.Types.Value/index.js");
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Data_Bitraversable = require("../Data.Bitraversable/index.js");
var Data_Foldable = require("../Data.Foldable/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Map_Internal = require("../Data.Map.Internal/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Newtype = require("../Data.Newtype/index.js");
var Data_Traversable = require("../Data.Traversable/index.js");
var Data_Tuple = require("../Data.Tuple/index.js");
var Data_UInt = require("../Data.UInt/index.js");
var Deserialization_NativeScript = require("../Deserialization.NativeScript/index.js");
var Deserialization_PlutusData = require("../Deserialization.PlutusData/index.js");
var Deserialization_WitnessSet = require("../Deserialization.WitnessSet/index.js");
var FfiHelpers = require("../FfiHelpers/index.js");
var Serialization = require("../Serialization/index.js");
var Serialization_Hash = require("../Serialization.Hash/index.js");
var Types_BigNum = require("../Types.BigNum/index.js");
var Types_OutputDatum = require("../Types.OutputDatum/index.js");
var Types_TokenName = require("../Types.TokenName/index.js");
var Types_Transaction = require("../Types.Transaction/index.js");
var Untagged_Union = require("../Untagged.Union/index.js");
var newTransactionUnspentOutputFromBytes = $foreign["_newTransactionUnspentOutputFromBytes"](FfiHelpers.maybeFfiHelper);
var convertValue = function (value) {
    return Control_Bind.bind(Data_Maybe.bindMaybe)(Types_BigNum.toBigInt($foreign.getCoin(value)))(function (coin) {
        return Control_Bind.bind(Data_Maybe.bindMaybe)(Data_Traversable["for"](Data_Maybe.applicativeMaybe)(Data_Traversable.traversableMaybe)($foreign.getMultiAsset(FfiHelpers.maybeFfiHelper)(value))(function (multiasset) {
            var multiasset$prime = Data_Functor.map(Data_Functor.functorArray)(Data_Functor.map(Data_Tuple.functorTuple)($foreign.extractAssets(Data_Tuple.Tuple.create)))($foreign.extractMultiAsset(Data_Tuple.Tuple.create)(multiasset));
            return Control_Bind.bind(Data_Maybe.bindMaybe)((function () {
                var $8 = Data_Functor.map(Data_Maybe.functorMaybe)(Data_Map_Internal.fromFoldable(Cardano_Types_Value.ordCurrencySymbol)(Data_Foldable.foldableArray));
                var $9 = (function () {
                    var $11 = Data_Functor.map(Data_Maybe.functorMaybe);
                    var $12 = Data_Functor.map(Data_Functor.functorArray);
                    return function ($13) {
                        return $11($12($13));
                    };
                })()(Data_Functor.map(Data_Tuple.functorTuple)(Data_Map_Internal.fromFoldable(Types_TokenName.ordTokenName)(Data_Foldable.foldableArray)));
                return function ($10) {
                    return $8($9($10));
                };
            })()(Data_Traversable.traverse(Data_Traversable.traversableArray)(Data_Maybe.applicativeMaybe)(Data_Bitraversable.bitraverse(Data_Bitraversable.bitraversableTuple)(Data_Maybe.applicativeMaybe)((function () {
                var $14 = Data_Newtype.unwrap();
                return function ($15) {
                    return Cardano_Types_Value.mkCurrencySymbol($14(Serialization_Hash.scriptHashToBytes($15)));
                };
            })())(Data_Traversable.traverse(Data_Traversable.traversableArray)(Data_Maybe.applicativeMaybe)(Data_Bitraversable.ltraverse(Data_Bitraversable.bitraversableTuple)(Data_Maybe.applicativeMaybe)(function ($16) {
                return Types_TokenName.mkTokenName(Types_TokenName.assetNameName($16));
            }))))(multiasset$prime)))(function (v) {
                return Data_Traversable.traverse(Data_Map_Internal.traversableMap)(Data_Maybe.applicativeMaybe)(Data_Traversable.traverse(Data_Map_Internal.traversableMap)(Data_Maybe.applicativeMaybe)(Types_BigNum.toBigInt))(v);
            });
        }))(function (multiasset) {
            return Control_Applicative.pure(Data_Maybe.applicativeMaybe)(Cardano_Types_Value.mkValue(coin)(Cardano_Types_Value.mkNonAdaAsset(Data_Maybe.fromMaybe(Data_Map_Internal.empty)(multiasset))));
        });
    });
};
var convertScriptRef = $foreign.withScriptRef((function () {
    var $17 = Data_Functor.map(Data_Maybe.functorMaybe)(Cardano_Types_ScriptRef.NativeScriptRef.create);
    return function ($18) {
        return $17(Deserialization_NativeScript.convertNativeScript($18));
    };
})())((function () {
    var $19 = Data_Functor.map(Data_Maybe.functorMaybe)(Cardano_Types_ScriptRef.PlutusScriptRef.create);
    return function ($20) {
        return $19(Deserialization_WitnessSet.convertPlutusScript($20));
    };
})());
var convertOutput = function (output) {
    return Control_Bind.bind(Data_Maybe.bindMaybe)(convertValue($foreign.getAmount(output)))(function (amount) {
        var mbDatum = $foreign.getPlutusData(FfiHelpers.maybeFfiHelper)(output);
        var mbDataHash = Data_Functor.mapFlipped(Data_Maybe.functorMaybe)($foreign.getDataHash(FfiHelpers.maybeFfiHelper)(output))((function () {
            var $21 = Untagged_Union.asOneOf();
            return function ($22) {
                return Types_Transaction.DataHash(Serialization.toBytes($21($22)));
            };
        })());
        var address = $foreign.getAddress(output);
        return Control_Bind.bind(Data_Maybe.bindMaybe)((function () {
            if (mbDatum instanceof Data_Maybe.Just && mbDataHash instanceof Data_Maybe.Just) {
                return Data_Maybe.Nothing.value;
            };
            if (mbDatum instanceof Data_Maybe.Just && mbDataHash instanceof Data_Maybe.Nothing) {
                return Data_Functor.map(Data_Maybe.functorMaybe)((function () {
                    var $23 = Data_Newtype.wrap();
                    return function ($24) {
                        return Types_OutputDatum.OutputDatum.create($23($24));
                    };
                })())(Deserialization_PlutusData.convertPlutusData(mbDatum.value0));
            };
            if (mbDatum instanceof Data_Maybe.Nothing && mbDataHash instanceof Data_Maybe.Just) {
                return Control_Applicative.pure(Data_Maybe.applicativeMaybe)(new Types_OutputDatum.OutputDatumHash(mbDataHash.value0));
            };
            if (mbDatum instanceof Data_Maybe.Nothing && mbDataHash instanceof Data_Maybe.Nothing) {
                return Control_Applicative.pure(Data_Maybe.applicativeMaybe)(Types_OutputDatum.NoOutputDatum.value);
            };
            throw new Error("Failed pattern match at Deserialization.UnspentOutput (line 95, column 12 - line 100, column 43): " + [ mbDatum.constructor.name, mbDataHash.constructor.name ]);
        })())(function (datum) {
            return Control_Bind.bind(Data_Maybe.bindMaybe)(Data_Traversable.traverse(Data_Traversable.traversableMaybe)(Data_Maybe.applicativeMaybe)(convertScriptRef)($foreign.getScriptRef(FfiHelpers.maybeFfiHelper)(output)))(function (scriptRef) {
                return Control_Applicative.pure(Data_Maybe.applicativeMaybe)({
                    address: address,
                    amount: amount,
                    datum: datum,
                    scriptRef: scriptRef
                });
            });
        });
    });
};
var convertInput = function (input) {
    return Control_Bind.bind(Data_Maybe.bindMaybe)(Data_UInt["fromInt'"]($foreign.getTransactionIndex(input)))(function (index) {
        return Control_Applicative.pure(Data_Maybe.applicativeMaybe)({
            transactionId: Types_Transaction.TransactionHash(Serialization.toBytes(Untagged_Union.asOneOf()($foreign.getTransactionHash(input)))),
            index: index
        });
    });
};
var convertUnspentOutput = function (tuo) {
    return Control_Bind.bind(Data_Maybe.bindMaybe)(convertInput($foreign.getInput(tuo)))(function (input) {
        return Control_Bind.bind(Data_Maybe.bindMaybe)(convertOutput($foreign.getOutput(tuo)))(function (output) {
            return Control_Applicative.pure(Data_Maybe.applicativeMaybe)({
                input: input,
                output: output
            });
        });
    });
};
module.exports = {
    convertUnspentOutput: convertUnspentOutput,
    newTransactionUnspentOutputFromBytes: newTransactionUnspentOutputFromBytes,
    convertInput: convertInput,
    convertOutput: convertOutput,
    convertValue: convertValue,
    mkTransactionUnspentOutput: $foreign.mkTransactionUnspentOutput
};
